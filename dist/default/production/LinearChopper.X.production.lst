

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Tue Dec 17 18:33:32 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og9 
     1                           	processor	16F1705
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	stringtext1,global,class=STRCODE,delta=2
     7                           	psect	stringtext2,global,class=STRCODE,delta=2
     8                           	psect	stringtext3,global,class=STRCODE,delta=2
     9                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1
    10                           	psect	stringtext4,global,class=STRCODE,delta=2
    11                           	psect	stringtext5,global,class=STRCODE,delta=2
    12                           	psect	stringtext6,global,class=STRCODE,delta=2
    13                           	psect	stringtext7,global,class=STRCODE,delta=2
    14                           	psect	stringtext8,global,class=STRCODE,delta=2
    15                           	psect	stringtext9,global,class=STRCODE,delta=2
    16                           	psect	stringtext10,global,class=STRCODE,delta=2
    17                           	psect	stringtext11,global,class=STRCODE,delta=2
    18                           	psect	stringtext12,global,class=STRCODE,delta=2
    19                           	psect	stringtext13,global,class=STRCODE,delta=2
    20                           	psect	stringtext14,global,class=STRCODE,delta=2
    21                           	psect	stringtext15,global,class=STRCODE,delta=2
    22                           	psect	stringtext16,global,class=STRCODE,delta=2
    23                           	psect	stringtext17,global,class=STRCODE,delta=2
    24                           	psect	stringtext18,global,class=STRCODE,delta=2
    25                           	psect	stringtext19,global,class=STRCODE,delta=2
    26                           	psect	stringtext20,global,class=STRCODE,delta=2
    27                           	psect	stringtext21,global,class=STRCODE,delta=2
    28                           	psect	cinit,global,class=CODE,merge=1,delta=2
    29                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    30                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    31                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    32                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    33                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    34                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    35                           	psect	inittext,global,class=CODE,delta=2
    36                           	psect	clrtext,global,class=CODE,delta=2
    37                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    38                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    39                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    40                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    41                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    42                           	psect	text1,local,class=CODE,merge=1,delta=2
    43                           	psect	text2,local,class=CODE,merge=1,delta=2
    44                           	psect	text3,local,class=CODE,merge=1,delta=2
    45                           	psect	text4,local,class=CODE,merge=1,delta=2
    46                           	psect	text5,local,class=CODE,merge=1,delta=2
    47                           	psect	text6,local,class=CODE,merge=1,delta=2
    48                           	psect	text7,local,class=CODE,merge=1,delta=2
    49                           	psect	text8,local,class=CODE,merge=1,delta=2
    50                           	psect	text9,local,class=CODE,merge=1,delta=2
    51                           	psect	text10,local,class=CODE,merge=1,delta=2
    52                           	psect	text11,local,class=CODE,merge=1,delta=2
    53                           	psect	text12,local,class=CODE,merge=1,delta=2
    54                           	psect	text13,local,class=CODE,merge=1,delta=2
    55                           	psect	text14,local,class=CODE,merge=1,delta=2
    56                           	psect	text15,local,class=CODE,merge=1,delta=2
    57                           	psect	text16,local,class=CODE,merge=1,delta=2
    58                           	psect	text17,local,class=CODE,merge=1,delta=2
    59                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    60                           	psect	text19,local,class=CODE,merge=1,delta=2
    61                           	psect	text20,local,class=CODE,merge=1,delta=2
    62                           	psect	text21,local,class=CODE,merge=1,delta=2
    63                           	psect	text22,local,class=CODE,merge=1,delta=2
    64                           	psect	text23,local,class=CODE,merge=1,delta=2
    65                           	psect	text24,local,class=CODE,merge=1,delta=2
    66                           	psect	text25,local,class=CODE,merge=1,delta=2
    67                           	psect	text26,local,class=CODE,merge=1,delta=2
    68                           	psect	text27,local,class=CODE,merge=1,delta=2
    69                           	psect	text28,local,class=CODE,merge=1,delta=2
    70                           	psect	text29,local,class=CODE,merge=1,delta=2
    71                           	psect	text30,local,class=CODE,merge=1,delta=2
    72                           	psect	text31,local,class=CODE,merge=1,delta=2
    73                           	psect	text32,local,class=CODE,merge=1,delta=2
    74                           	psect	text33,local,class=CODE,merge=1,delta=2
    75                           	psect	text34,local,class=CODE,merge=1,delta=2
    76                           	psect	text35,local,class=CODE,merge=1,delta=2
    77                           	psect	text36,local,class=CODE,merge=1,delta=2
    78                           	psect	text37,local,class=CODE,merge=1,delta=2
    79                           	psect	text38,local,class=CODE,merge=1,delta=2
    80                           	psect	text39,local,class=CODE,merge=1,delta=2
    81                           	psect	text40,local,class=CODE,merge=1,delta=2
    82                           	psect	text41,local,class=CODE,merge=1,delta=2
    83                           	psect	intentry,global,class=CODE,delta=2
    84                           	psect	text43,local,class=CODE,merge=1,delta=2
    85                           	psect	text44,local,class=CODE,merge=1,delta=2
    86                           	psect	text45,local,class=CODE,merge=1,delta=2
    87                           	psect	text46,local,class=CODE,merge=1,delta=2
    88                           	psect	text47,local,class=CODE,merge=1,delta=2
    89                           	psect	text48,local,class=CODE,merge=1,delta=2
    90                           	psect	text49,local,class=CODE,merge=1,delta=2
    91                           	psect	text50,local,class=CODE,merge=1,delta=2
    92                           	psect	text51,local,class=CODE,merge=1,delta=2
    93                           	psect	text52,local,class=CODE,merge=1,delta=2
    94                           	psect	text53,local,class=CODE,merge=1,delta=2
    95                           	psect	text54,local,class=CODE,merge=1,delta=2
    96                           	psect	text55,local,class=CODE,merge=1,delta=2
    97                           	psect	text56,local,class=CODE,merge=1,delta=2
    98                           	psect	text57,local,class=CODE,merge=1,delta=2
    99                           	psect	text58,local,class=CODE,merge=1,delta=2
   100                           	psect	text59,local,class=CODE,merge=1,delta=2
   101                           	psect	text60,local,class=CODE,merge=1,delta=2
   102                           	psect	text61,local,class=CODE,merge=1,delta=2,group=1
   103                           	psect	text62,local,class=CODE,merge=1,delta=2,group=1
   104                           	psect	text63,local,class=CODE,merge=1,delta=2
   105                           	psect	text64,local,class=CODE,merge=1,delta=2
   106                           	psect	text65,local,class=CODE,merge=1,delta=2
   107                           	dabs	1,0x7E,2
   108  0000                     
   109                           ; Version 2.05
   110                           ; Generated 20/12/2018 GMT
   111                           ; 
   112                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   113                           ; All rights reserved.
   114                           ; 
   115                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   116                           ; 
   117                           ; Redistribution and use in source and binary forms, with or without modification, are
   118                           ; permitted provided that the following conditions are met:
   119                           ; 
   120                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   121                           ;        conditions and the following disclaimer.
   122                           ; 
   123                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   124                           ;        of conditions and the following disclaimer in the documentation and/or other
   125                           ;        materials provided with the distribution.
   126                           ; 
   127                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   128                           ;        software without specific prior written permission.
   129                           ; 
   130                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   131                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   132                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   133                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   134                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   135                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   136                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   137                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   138                           ; 
   139                           ; 
   140                           ; Code-generator required, PIC16F1705 Definitions
   141                           ; 
   142                           ; SFR Addresses
   143  0000                     	;# 
   144  0001                     	;# 
   145  0002                     	;# 
   146  0003                     	;# 
   147  0004                     	;# 
   148  0005                     	;# 
   149  0006                     	;# 
   150  0007                     	;# 
   151  0008                     	;# 
   152  0009                     	;# 
   153  000A                     	;# 
   154  000B                     	;# 
   155  000C                     	;# 
   156  000E                     	;# 
   157  0011                     	;# 
   158  0012                     	;# 
   159  0013                     	;# 
   160  0015                     	;# 
   161  0016                     	;# 
   162  0016                     	;# 
   163  0017                     	;# 
   164  0018                     	;# 
   165  0019                     	;# 
   166  001A                     	;# 
   167  001B                     	;# 
   168  001C                     	;# 
   169  008C                     	;# 
   170  008E                     	;# 
   171  0091                     	;# 
   172  0092                     	;# 
   173  0093                     	;# 
   174  0095                     	;# 
   175  0096                     	;# 
   176  0097                     	;# 
   177  0098                     	;# 
   178  0099                     	;# 
   179  009A                     	;# 
   180  009B                     	;# 
   181  009B                     	;# 
   182  009C                     	;# 
   183  009D                     	;# 
   184  009E                     	;# 
   185  009F                     	;# 
   186  010C                     	;# 
   187  010E                     	;# 
   188  0111                     	;# 
   189  0112                     	;# 
   190  0113                     	;# 
   191  0114                     	;# 
   192  0115                     	;# 
   193  0116                     	;# 
   194  0117                     	;# 
   195  0118                     	;# 
   196  0119                     	;# 
   197  011C                     	;# 
   198  018C                     	;# 
   199  018E                     	;# 
   200  0191                     	;# 
   201  0191                     	;# 
   202  0192                     	;# 
   203  0193                     	;# 
   204  0193                     	;# 
   205  0194                     	;# 
   206  0195                     	;# 
   207  0196                     	;# 
   208  0197                     	;# 
   209  0199                     	;# 
   210  0199                     	;# 
   211  0199                     	;# 
   212  019A                     	;# 
   213  019A                     	;# 
   214  019A                     	;# 
   215  019B                     	;# 
   216  019B                     	;# 
   217  019B                     	;# 
   218  019B                     	;# 
   219  019B                     	;# 
   220  019C                     	;# 
   221  019C                     	;# 
   222  019C                     	;# 
   223  019D                     	;# 
   224  019D                     	;# 
   225  019D                     	;# 
   226  019E                     	;# 
   227  019E                     	;# 
   228  019E                     	;# 
   229  019F                     	;# 
   230  019F                     	;# 
   231  019F                     	;# 
   232  019F                     	;# 
   233  019F                     	;# 
   234  020C                     	;# 
   235  020E                     	;# 
   236  0211                     	;# 
   237  0211                     	;# 
   238  0212                     	;# 
   239  0212                     	;# 
   240  0213                     	;# 
   241  0213                     	;# 
   242  0214                     	;# 
   243  0214                     	;# 
   244  0215                     	;# 
   245  0215                     	;# 
   246  0215                     	;# 
   247  0215                     	;# 
   248  0216                     	;# 
   249  0216                     	;# 
   250  0217                     	;# 
   251  0217                     	;# 
   252  028C                     	;# 
   253  028E                     	;# 
   254  0291                     	;# 
   255  0291                     	;# 
   256  0292                     	;# 
   257  0293                     	;# 
   258  0293                     	;# 
   259  0298                     	;# 
   260  0298                     	;# 
   261  0299                     	;# 
   262  029A                     	;# 
   263  029A                     	;# 
   264  029E                     	;# 
   265  030C                     	;# 
   266  030E                     	;# 
   267  038C                     	;# 
   268  038E                     	;# 
   269  0391                     	;# 
   270  0392                     	;# 
   271  0393                     	;# 
   272  0397                     	;# 
   273  0398                     	;# 
   274  0399                     	;# 
   275  0415                     	;# 
   276  0416                     	;# 
   277  0417                     	;# 
   278  041C                     	;# 
   279  041D                     	;# 
   280  041E                     	;# 
   281  0511                     	;# 
   282  0515                     	;# 
   283  0617                     	;# 
   284  0618                     	;# 
   285  0619                     	;# 
   286  0619                     	;# 
   287  061A                     	;# 
   288  061B                     	;# 
   289  061C                     	;# 
   290  061C                     	;# 
   291  0691                     	;# 
   292  0692                     	;# 
   293  0693                     	;# 
   294  0694                     	;# 
   295  0695                     	;# 
   296  0696                     	;# 
   297  0697                     	;# 
   298  0698                     	;# 
   299  0699                     	;# 
   300  069A                     	;# 
   301  069B                     	;# 
   302  069C                     	;# 
   303  069D                     	;# 
   304  069E                     	;# 
   305  069F                     	;# 
   306  0E0F                     	;# 
   307  0E10                     	;# 
   308  0E11                     	;# 
   309  0E12                     	;# 
   310  0E13                     	;# 
   311  0E14                     	;# 
   312  0E15                     	;# 
   313  0E17                     	;# 
   314  0E20                     	;# 
   315  0E21                     	;# 
   316  0E22                     	;# 
   317  0E24                     	;# 
   318  0E25                     	;# 
   319  0E28                     	;# 
   320  0E29                     	;# 
   321  0E2A                     	;# 
   322  0E2B                     	;# 
   323  0E90                     	;# 
   324  0E91                     	;# 
   325  0E92                     	;# 
   326  0E94                     	;# 
   327  0E95                     	;# 
   328  0EA0                     	;# 
   329  0EA1                     	;# 
   330  0EA2                     	;# 
   331  0EA3                     	;# 
   332  0EA4                     	;# 
   333  0EA5                     	;# 
   334  0F0F                     	;# 
   335  0F10                     	;# 
   336  0F11                     	;# 
   337  0F12                     	;# 
   338  0F13                     	;# 
   339  0F14                     	;# 
   340  0F15                     	;# 
   341  0F16                     	;# 
   342  0F17                     	;# 
   343  0F18                     	;# 
   344  0F19                     	;# 
   345  0F1A                     	;# 
   346  0F1B                     	;# 
   347  0F1C                     	;# 
   348  0F1D                     	;# 
   349  0F1E                     	;# 
   350  0F1F                     	;# 
   351  0F20                     	;# 
   352  0F21                     	;# 
   353  0F22                     	;# 
   354  0F23                     	;# 
   355  0F24                     	;# 
   356  0F25                     	;# 
   357  0F26                     	;# 
   358  0F27                     	;# 
   359  0F28                     	;# 
   360  0F29                     	;# 
   361  0F2A                     	;# 
   362  0F2B                     	;# 
   363  0F2C                     	;# 
   364  0F2D                     	;# 
   365  0F9E                     	;# 
   366  0FE4                     	;# 
   367  0FE5                     	;# 
   368  0FE6                     	;# 
   369  0FE7                     	;# 
   370  0FE8                     	;# 
   371  0FE9                     	;# 
   372  0FEA                     	;# 
   373  0FEB                     	;# 
   374  0FED                     	;# 
   375  0FEE                     	;# 
   376  0FEF                     	;# 
   377  0000                     	;# 
   378  0001                     	;# 
   379  0002                     	;# 
   380  0003                     	;# 
   381  0004                     	;# 
   382  0005                     	;# 
   383  0006                     	;# 
   384  0007                     	;# 
   385  0008                     	;# 
   386  0009                     	;# 
   387  000A                     	;# 
   388  000B                     	;# 
   389  000C                     	;# 
   390  000E                     	;# 
   391  0011                     	;# 
   392  0012                     	;# 
   393  0013                     	;# 
   394  0015                     	;# 
   395  0016                     	;# 
   396  0016                     	;# 
   397  0017                     	;# 
   398  0018                     	;# 
   399  0019                     	;# 
   400  001A                     	;# 
   401  001B                     	;# 
   402  001C                     	;# 
   403  008C                     	;# 
   404  008E                     	;# 
   405  0091                     	;# 
   406  0092                     	;# 
   407  0093                     	;# 
   408  0095                     	;# 
   409  0096                     	;# 
   410  0097                     	;# 
   411  0098                     	;# 
   412  0099                     	;# 
   413  009A                     	;# 
   414  009B                     	;# 
   415  009B                     	;# 
   416  009C                     	;# 
   417  009D                     	;# 
   418  009E                     	;# 
   419  009F                     	;# 
   420  010C                     	;# 
   421  010E                     	;# 
   422  0111                     	;# 
   423  0112                     	;# 
   424  0113                     	;# 
   425  0114                     	;# 
   426  0115                     	;# 
   427  0116                     	;# 
   428  0117                     	;# 
   429  0118                     	;# 
   430  0119                     	;# 
   431  011C                     	;# 
   432  018C                     	;# 
   433  018E                     	;# 
   434  0191                     	;# 
   435  0191                     	;# 
   436  0192                     	;# 
   437  0193                     	;# 
   438  0193                     	;# 
   439  0194                     	;# 
   440  0195                     	;# 
   441  0196                     	;# 
   442  0197                     	;# 
   443  0199                     	;# 
   444  0199                     	;# 
   445  0199                     	;# 
   446  019A                     	;# 
   447  019A                     	;# 
   448  019A                     	;# 
   449  019B                     	;# 
   450  019B                     	;# 
   451  019B                     	;# 
   452  019B                     	;# 
   453  019B                     	;# 
   454  019C                     	;# 
   455  019C                     	;# 
   456  019C                     	;# 
   457  019D                     	;# 
   458  019D                     	;# 
   459  019D                     	;# 
   460  019E                     	;# 
   461  019E                     	;# 
   462  019E                     	;# 
   463  019F                     	;# 
   464  019F                     	;# 
   465  019F                     	;# 
   466  019F                     	;# 
   467  019F                     	;# 
   468  020C                     	;# 
   469  020E                     	;# 
   470  0211                     	;# 
   471  0211                     	;# 
   472  0212                     	;# 
   473  0212                     	;# 
   474  0213                     	;# 
   475  0213                     	;# 
   476  0214                     	;# 
   477  0214                     	;# 
   478  0215                     	;# 
   479  0215                     	;# 
   480  0215                     	;# 
   481  0215                     	;# 
   482  0216                     	;# 
   483  0216                     	;# 
   484  0217                     	;# 
   485  0217                     	;# 
   486  028C                     	;# 
   487  028E                     	;# 
   488  0291                     	;# 
   489  0291                     	;# 
   490  0292                     	;# 
   491  0293                     	;# 
   492  0293                     	;# 
   493  0298                     	;# 
   494  0298                     	;# 
   495  0299                     	;# 
   496  029A                     	;# 
   497  029A                     	;# 
   498  029E                     	;# 
   499  030C                     	;# 
   500  030E                     	;# 
   501  038C                     	;# 
   502  038E                     	;# 
   503  0391                     	;# 
   504  0392                     	;# 
   505  0393                     	;# 
   506  0397                     	;# 
   507  0398                     	;# 
   508  0399                     	;# 
   509  0415                     	;# 
   510  0416                     	;# 
   511  0417                     	;# 
   512  041C                     	;# 
   513  041D                     	;# 
   514  041E                     	;# 
   515  0511                     	;# 
   516  0515                     	;# 
   517  0617                     	;# 
   518  0618                     	;# 
   519  0619                     	;# 
   520  0619                     	;# 
   521  061A                     	;# 
   522  061B                     	;# 
   523  061C                     	;# 
   524  061C                     	;# 
   525  0691                     	;# 
   526  0692                     	;# 
   527  0693                     	;# 
   528  0694                     	;# 
   529  0695                     	;# 
   530  0696                     	;# 
   531  0697                     	;# 
   532  0698                     	;# 
   533  0699                     	;# 
   534  069A                     	;# 
   535  069B                     	;# 
   536  069C                     	;# 
   537  069D                     	;# 
   538  069E                     	;# 
   539  069F                     	;# 
   540  0E0F                     	;# 
   541  0E10                     	;# 
   542  0E11                     	;# 
   543  0E12                     	;# 
   544  0E13                     	;# 
   545  0E14                     	;# 
   546  0E15                     	;# 
   547  0E17                     	;# 
   548  0E20                     	;# 
   549  0E21                     	;# 
   550  0E22                     	;# 
   551  0E24                     	;# 
   552  0E25                     	;# 
   553  0E28                     	;# 
   554  0E29                     	;# 
   555  0E2A                     	;# 
   556  0E2B                     	;# 
   557  0E90                     	;# 
   558  0E91                     	;# 
   559  0E92                     	;# 
   560  0E94                     	;# 
   561  0E95                     	;# 
   562  0EA0                     	;# 
   563  0EA1                     	;# 
   564  0EA2                     	;# 
   565  0EA3                     	;# 
   566  0EA4                     	;# 
   567  0EA5                     	;# 
   568  0F0F                     	;# 
   569  0F10                     	;# 
   570  0F11                     	;# 
   571  0F12                     	;# 
   572  0F13                     	;# 
   573  0F14                     	;# 
   574  0F15                     	;# 
   575  0F16                     	;# 
   576  0F17                     	;# 
   577  0F18                     	;# 
   578  0F19                     	;# 
   579  0F1A                     	;# 
   580  0F1B                     	;# 
   581  0F1C                     	;# 
   582  0F1D                     	;# 
   583  0F1E                     	;# 
   584  0F1F                     	;# 
   585  0F20                     	;# 
   586  0F21                     	;# 
   587  0F22                     	;# 
   588  0F23                     	;# 
   589  0F24                     	;# 
   590  0F25                     	;# 
   591  0F26                     	;# 
   592  0F27                     	;# 
   593  0F28                     	;# 
   594  0F29                     	;# 
   595  0F2A                     	;# 
   596  0F2B                     	;# 
   597  0F2C                     	;# 
   598  0F2D                     	;# 
   599  0F9E                     	;# 
   600  0FE4                     	;# 
   601  0FE5                     	;# 
   602  0FE6                     	;# 
   603  0FE7                     	;# 
   604  0FE8                     	;# 
   605  0FE9                     	;# 
   606  0FEA                     	;# 
   607  0FEB                     	;# 
   608  0FED                     	;# 
   609  0FEE                     	;# 
   610  0FEF                     	;# 
   611  0000                     	;# 
   612  0001                     	;# 
   613  0002                     	;# 
   614  0003                     	;# 
   615  0004                     	;# 
   616  0005                     	;# 
   617  0006                     	;# 
   618  0007                     	;# 
   619  0008                     	;# 
   620  0009                     	;# 
   621  000A                     	;# 
   622  000B                     	;# 
   623  000C                     	;# 
   624  000E                     	;# 
   625  0011                     	;# 
   626  0012                     	;# 
   627  0013                     	;# 
   628  0015                     	;# 
   629  0016                     	;# 
   630  0016                     	;# 
   631  0017                     	;# 
   632  0018                     	;# 
   633  0019                     	;# 
   634  001A                     	;# 
   635  001B                     	;# 
   636  001C                     	;# 
   637  008C                     	;# 
   638  008E                     	;# 
   639  0091                     	;# 
   640  0092                     	;# 
   641  0093                     	;# 
   642  0095                     	;# 
   643  0096                     	;# 
   644  0097                     	;# 
   645  0098                     	;# 
   646  0099                     	;# 
   647  009A                     	;# 
   648  009B                     	;# 
   649  009B                     	;# 
   650  009C                     	;# 
   651  009D                     	;# 
   652  009E                     	;# 
   653  009F                     	;# 
   654  010C                     	;# 
   655  010E                     	;# 
   656  0111                     	;# 
   657  0112                     	;# 
   658  0113                     	;# 
   659  0114                     	;# 
   660  0115                     	;# 
   661  0116                     	;# 
   662  0117                     	;# 
   663  0118                     	;# 
   664  0119                     	;# 
   665  011C                     	;# 
   666  018C                     	;# 
   667  018E                     	;# 
   668  0191                     	;# 
   669  0191                     	;# 
   670  0192                     	;# 
   671  0193                     	;# 
   672  0193                     	;# 
   673  0194                     	;# 
   674  0195                     	;# 
   675  0196                     	;# 
   676  0197                     	;# 
   677  0199                     	;# 
   678  0199                     	;# 
   679  0199                     	;# 
   680  019A                     	;# 
   681  019A                     	;# 
   682  019A                     	;# 
   683  019B                     	;# 
   684  019B                     	;# 
   685  019B                     	;# 
   686  019B                     	;# 
   687  019B                     	;# 
   688  019C                     	;# 
   689  019C                     	;# 
   690  019C                     	;# 
   691  019D                     	;# 
   692  019D                     	;# 
   693  019D                     	;# 
   694  019E                     	;# 
   695  019E                     	;# 
   696  019E                     	;# 
   697  019F                     	;# 
   698  019F                     	;# 
   699  019F                     	;# 
   700  019F                     	;# 
   701  019F                     	;# 
   702  020C                     	;# 
   703  020E                     	;# 
   704  0211                     	;# 
   705  0211                     	;# 
   706  0212                     	;# 
   707  0212                     	;# 
   708  0213                     	;# 
   709  0213                     	;# 
   710  0214                     	;# 
   711  0214                     	;# 
   712  0215                     	;# 
   713  0215                     	;# 
   714  0215                     	;# 
   715  0215                     	;# 
   716  0216                     	;# 
   717  0216                     	;# 
   718  0217                     	;# 
   719  0217                     	;# 
   720  028C                     	;# 
   721  028E                     	;# 
   722  0291                     	;# 
   723  0291                     	;# 
   724  0292                     	;# 
   725  0293                     	;# 
   726  0293                     	;# 
   727  0298                     	;# 
   728  0298                     	;# 
   729  0299                     	;# 
   730  029A                     	;# 
   731  029A                     	;# 
   732  029E                     	;# 
   733  030C                     	;# 
   734  030E                     	;# 
   735  038C                     	;# 
   736  038E                     	;# 
   737  0391                     	;# 
   738  0392                     	;# 
   739  0393                     	;# 
   740  0397                     	;# 
   741  0398                     	;# 
   742  0399                     	;# 
   743  0415                     	;# 
   744  0416                     	;# 
   745  0417                     	;# 
   746  041C                     	;# 
   747  041D                     	;# 
   748  041E                     	;# 
   749  0511                     	;# 
   750  0515                     	;# 
   751  0617                     	;# 
   752  0618                     	;# 
   753  0619                     	;# 
   754  0619                     	;# 
   755  061A                     	;# 
   756  061B                     	;# 
   757  061C                     	;# 
   758  061C                     	;# 
   759  0691                     	;# 
   760  0692                     	;# 
   761  0693                     	;# 
   762  0694                     	;# 
   763  0695                     	;# 
   764  0696                     	;# 
   765  0697                     	;# 
   766  0698                     	;# 
   767  0699                     	;# 
   768  069A                     	;# 
   769  069B                     	;# 
   770  069C                     	;# 
   771  069D                     	;# 
   772  069E                     	;# 
   773  069F                     	;# 
   774  0E0F                     	;# 
   775  0E10                     	;# 
   776  0E11                     	;# 
   777  0E12                     	;# 
   778  0E13                     	;# 
   779  0E14                     	;# 
   780  0E15                     	;# 
   781  0E17                     	;# 
   782  0E20                     	;# 
   783  0E21                     	;# 
   784  0E22                     	;# 
   785  0E24                     	;# 
   786  0E25                     	;# 
   787  0E28                     	;# 
   788  0E29                     	;# 
   789  0E2A                     	;# 
   790  0E2B                     	;# 
   791  0E90                     	;# 
   792  0E91                     	;# 
   793  0E92                     	;# 
   794  0E94                     	;# 
   795  0E95                     	;# 
   796  0EA0                     	;# 
   797  0EA1                     	;# 
   798  0EA2                     	;# 
   799  0EA3                     	;# 
   800  0EA4                     	;# 
   801  0EA5                     	;# 
   802  0F0F                     	;# 
   803  0F10                     	;# 
   804  0F11                     	;# 
   805  0F12                     	;# 
   806  0F13                     	;# 
   807  0F14                     	;# 
   808  0F15                     	;# 
   809  0F16                     	;# 
   810  0F17                     	;# 
   811  0F18                     	;# 
   812  0F19                     	;# 
   813  0F1A                     	;# 
   814  0F1B                     	;# 
   815  0F1C                     	;# 
   816  0F1D                     	;# 
   817  0F1E                     	;# 
   818  0F1F                     	;# 
   819  0F20                     	;# 
   820  0F21                     	;# 
   821  0F22                     	;# 
   822  0F23                     	;# 
   823  0F24                     	;# 
   824  0F25                     	;# 
   825  0F26                     	;# 
   826  0F27                     	;# 
   827  0F28                     	;# 
   828  0F29                     	;# 
   829  0F2A                     	;# 
   830  0F2B                     	;# 
   831  0F2C                     	;# 
   832  0F2D                     	;# 
   833  0F9E                     	;# 
   834  0FE4                     	;# 
   835  0FE5                     	;# 
   836  0FE6                     	;# 
   837  0FE7                     	;# 
   838  0FE8                     	;# 
   839  0FE9                     	;# 
   840  0FEA                     	;# 
   841  0FEB                     	;# 
   842  0FED                     	;# 
   843  0FEE                     	;# 
   844  0FEF                     	;# 
   845  0000                     	;# 
   846  0001                     	;# 
   847  0002                     	;# 
   848  0003                     	;# 
   849  0004                     	;# 
   850  0005                     	;# 
   851  0006                     	;# 
   852  0007                     	;# 
   853  0008                     	;# 
   854  0009                     	;# 
   855  000A                     	;# 
   856  000B                     	;# 
   857  000C                     	;# 
   858  000E                     	;# 
   859  0011                     	;# 
   860  0012                     	;# 
   861  0013                     	;# 
   862  0015                     	;# 
   863  0016                     	;# 
   864  0016                     	;# 
   865  0017                     	;# 
   866  0018                     	;# 
   867  0019                     	;# 
   868  001A                     	;# 
   869  001B                     	;# 
   870  001C                     	;# 
   871  008C                     	;# 
   872  008E                     	;# 
   873  0091                     	;# 
   874  0092                     	;# 
   875  0093                     	;# 
   876  0095                     	;# 
   877  0096                     	;# 
   878  0097                     	;# 
   879  0098                     	;# 
   880  0099                     	;# 
   881  009A                     	;# 
   882  009B                     	;# 
   883  009B                     	;# 
   884  009C                     	;# 
   885  009D                     	;# 
   886  009E                     	;# 
   887  009F                     	;# 
   888  010C                     	;# 
   889  010E                     	;# 
   890  0111                     	;# 
   891  0112                     	;# 
   892  0113                     	;# 
   893  0114                     	;# 
   894  0115                     	;# 
   895  0116                     	;# 
   896  0117                     	;# 
   897  0118                     	;# 
   898  0119                     	;# 
   899  011C                     	;# 
   900  018C                     	;# 
   901  018E                     	;# 
   902  0191                     	;# 
   903  0191                     	;# 
   904  0192                     	;# 
   905  0193                     	;# 
   906  0193                     	;# 
   907  0194                     	;# 
   908  0195                     	;# 
   909  0196                     	;# 
   910  0197                     	;# 
   911  0199                     	;# 
   912  0199                     	;# 
   913  0199                     	;# 
   914  019A                     	;# 
   915  019A                     	;# 
   916  019A                     	;# 
   917  019B                     	;# 
   918  019B                     	;# 
   919  019B                     	;# 
   920  019B                     	;# 
   921  019B                     	;# 
   922  019C                     	;# 
   923  019C                     	;# 
   924  019C                     	;# 
   925  019D                     	;# 
   926  019D                     	;# 
   927  019D                     	;# 
   928  019E                     	;# 
   929  019E                     	;# 
   930  019E                     	;# 
   931  019F                     	;# 
   932  019F                     	;# 
   933  019F                     	;# 
   934  019F                     	;# 
   935  019F                     	;# 
   936  020C                     	;# 
   937  020E                     	;# 
   938  0211                     	;# 
   939  0211                     	;# 
   940  0212                     	;# 
   941  0212                     	;# 
   942  0213                     	;# 
   943  0213                     	;# 
   944  0214                     	;# 
   945  0214                     	;# 
   946  0215                     	;# 
   947  0215                     	;# 
   948  0215                     	;# 
   949  0215                     	;# 
   950  0216                     	;# 
   951  0216                     	;# 
   952  0217                     	;# 
   953  0217                     	;# 
   954  028C                     	;# 
   955  028E                     	;# 
   956  0291                     	;# 
   957  0291                     	;# 
   958  0292                     	;# 
   959  0293                     	;# 
   960  0293                     	;# 
   961  0298                     	;# 
   962  0298                     	;# 
   963  0299                     	;# 
   964  029A                     	;# 
   965  029A                     	;# 
   966  029E                     	;# 
   967  030C                     	;# 
   968  030E                     	;# 
   969  038C                     	;# 
   970  038E                     	;# 
   971  0391                     	;# 
   972  0392                     	;# 
   973  0393                     	;# 
   974  0397                     	;# 
   975  0398                     	;# 
   976  0399                     	;# 
   977  0415                     	;# 
   978  0416                     	;# 
   979  0417                     	;# 
   980  041C                     	;# 
   981  041D                     	;# 
   982  041E                     	;# 
   983  0511                     	;# 
   984  0515                     	;# 
   985  0617                     	;# 
   986  0618                     	;# 
   987  0619                     	;# 
   988  0619                     	;# 
   989  061A                     	;# 
   990  061B                     	;# 
   991  061C                     	;# 
   992  061C                     	;# 
   993  0691                     	;# 
   994  0692                     	;# 
   995  0693                     	;# 
   996  0694                     	;# 
   997  0695                     	;# 
   998  0696                     	;# 
   999  0697                     	;# 
  1000  0698                     	;# 
  1001  0699                     	;# 
  1002  069A                     	;# 
  1003  069B                     	;# 
  1004  069C                     	;# 
  1005  069D                     	;# 
  1006  069E                     	;# 
  1007  069F                     	;# 
  1008  0E0F                     	;# 
  1009  0E10                     	;# 
  1010  0E11                     	;# 
  1011  0E12                     	;# 
  1012  0E13                     	;# 
  1013  0E14                     	;# 
  1014  0E15                     	;# 
  1015  0E17                     	;# 
  1016  0E20                     	;# 
  1017  0E21                     	;# 
  1018  0E22                     	;# 
  1019  0E24                     	;# 
  1020  0E25                     	;# 
  1021  0E28                     	;# 
  1022  0E29                     	;# 
  1023  0E2A                     	;# 
  1024  0E2B                     	;# 
  1025  0E90                     	;# 
  1026  0E91                     	;# 
  1027  0E92                     	;# 
  1028  0E94                     	;# 
  1029  0E95                     	;# 
  1030  0EA0                     	;# 
  1031  0EA1                     	;# 
  1032  0EA2                     	;# 
  1033  0EA3                     	;# 
  1034  0EA4                     	;# 
  1035  0EA5                     	;# 
  1036  0F0F                     	;# 
  1037  0F10                     	;# 
  1038  0F11                     	;# 
  1039  0F12                     	;# 
  1040  0F13                     	;# 
  1041  0F14                     	;# 
  1042  0F15                     	;# 
  1043  0F16                     	;# 
  1044  0F17                     	;# 
  1045  0F18                     	;# 
  1046  0F19                     	;# 
  1047  0F1A                     	;# 
  1048  0F1B                     	;# 
  1049  0F1C                     	;# 
  1050  0F1D                     	;# 
  1051  0F1E                     	;# 
  1052  0F1F                     	;# 
  1053  0F20                     	;# 
  1054  0F21                     	;# 
  1055  0F22                     	;# 
  1056  0F23                     	;# 
  1057  0F24                     	;# 
  1058  0F25                     	;# 
  1059  0F26                     	;# 
  1060  0F27                     	;# 
  1061  0F28                     	;# 
  1062  0F29                     	;# 
  1063  0F2A                     	;# 
  1064  0F2B                     	;# 
  1065  0F2C                     	;# 
  1066  0F2D                     	;# 
  1067  0F9E                     	;# 
  1068  0FE4                     	;# 
  1069  0FE5                     	;# 
  1070  0FE6                     	;# 
  1071  0FE7                     	;# 
  1072  0FE8                     	;# 
  1073  0FE9                     	;# 
  1074  0FEA                     	;# 
  1075  0FEB                     	;# 
  1076  0FED                     	;# 
  1077  0FEE                     	;# 
  1078  0FEF                     	;# 
  1079  0000                     	;# 
  1080  0001                     	;# 
  1081  0002                     	;# 
  1082  0003                     	;# 
  1083  0004                     	;# 
  1084  0005                     	;# 
  1085  0006                     	;# 
  1086  0007                     	;# 
  1087  0008                     	;# 
  1088  0009                     	;# 
  1089  000A                     	;# 
  1090  000B                     	;# 
  1091  000C                     	;# 
  1092  000E                     	;# 
  1093  0011                     	;# 
  1094  0012                     	;# 
  1095  0013                     	;# 
  1096  0015                     	;# 
  1097  0016                     	;# 
  1098  0016                     	;# 
  1099  0017                     	;# 
  1100  0018                     	;# 
  1101  0019                     	;# 
  1102  001A                     	;# 
  1103  001B                     	;# 
  1104  001C                     	;# 
  1105  008C                     	;# 
  1106  008E                     	;# 
  1107  0091                     	;# 
  1108  0092                     	;# 
  1109  0093                     	;# 
  1110  0095                     	;# 
  1111  0096                     	;# 
  1112  0097                     	;# 
  1113  0098                     	;# 
  1114  0099                     	;# 
  1115  009A                     	;# 
  1116  009B                     	;# 
  1117  009B                     	;# 
  1118  009C                     	;# 
  1119  009D                     	;# 
  1120  009E                     	;# 
  1121  009F                     	;# 
  1122  010C                     	;# 
  1123  010E                     	;# 
  1124  0111                     	;# 
  1125  0112                     	;# 
  1126  0113                     	;# 
  1127  0114                     	;# 
  1128  0115                     	;# 
  1129  0116                     	;# 
  1130  0117                     	;# 
  1131  0118                     	;# 
  1132  0119                     	;# 
  1133  011C                     	;# 
  1134  018C                     	;# 
  1135  018E                     	;# 
  1136  0191                     	;# 
  1137  0191                     	;# 
  1138  0192                     	;# 
  1139  0193                     	;# 
  1140  0193                     	;# 
  1141  0194                     	;# 
  1142  0195                     	;# 
  1143  0196                     	;# 
  1144  0197                     	;# 
  1145  0199                     	;# 
  1146  0199                     	;# 
  1147  0199                     	;# 
  1148  019A                     	;# 
  1149  019A                     	;# 
  1150  019A                     	;# 
  1151  019B                     	;# 
  1152  019B                     	;# 
  1153  019B                     	;# 
  1154  019B                     	;# 
  1155  019B                     	;# 
  1156  019C                     	;# 
  1157  019C                     	;# 
  1158  019C                     	;# 
  1159  019D                     	;# 
  1160  019D                     	;# 
  1161  019D                     	;# 
  1162  019E                     	;# 
  1163  019E                     	;# 
  1164  019E                     	;# 
  1165  019F                     	;# 
  1166  019F                     	;# 
  1167  019F                     	;# 
  1168  019F                     	;# 
  1169  019F                     	;# 
  1170  020C                     	;# 
  1171  020E                     	;# 
  1172  0211                     	;# 
  1173  0211                     	;# 
  1174  0212                     	;# 
  1175  0212                     	;# 
  1176  0213                     	;# 
  1177  0213                     	;# 
  1178  0214                     	;# 
  1179  0214                     	;# 
  1180  0215                     	;# 
  1181  0215                     	;# 
  1182  0215                     	;# 
  1183  0215                     	;# 
  1184  0216                     	;# 
  1185  0216                     	;# 
  1186  0217                     	;# 
  1187  0217                     	;# 
  1188  028C                     	;# 
  1189  028E                     	;# 
  1190  0291                     	;# 
  1191  0291                     	;# 
  1192  0292                     	;# 
  1193  0293                     	;# 
  1194  0293                     	;# 
  1195  0298                     	;# 
  1196  0298                     	;# 
  1197  0299                     	;# 
  1198  029A                     	;# 
  1199  029A                     	;# 
  1200  029E                     	;# 
  1201  030C                     	;# 
  1202  030E                     	;# 
  1203  038C                     	;# 
  1204  038E                     	;# 
  1205  0391                     	;# 
  1206  0392                     	;# 
  1207  0393                     	;# 
  1208  0397                     	;# 
  1209  0398                     	;# 
  1210  0399                     	;# 
  1211  0415                     	;# 
  1212  0416                     	;# 
  1213  0417                     	;# 
  1214  041C                     	;# 
  1215  041D                     	;# 
  1216  041E                     	;# 
  1217  0511                     	;# 
  1218  0515                     	;# 
  1219  0617                     	;# 
  1220  0618                     	;# 
  1221  0619                     	;# 
  1222  0619                     	;# 
  1223  061A                     	;# 
  1224  061B                     	;# 
  1225  061C                     	;# 
  1226  061C                     	;# 
  1227  0691                     	;# 
  1228  0692                     	;# 
  1229  0693                     	;# 
  1230  0694                     	;# 
  1231  0695                     	;# 
  1232  0696                     	;# 
  1233  0697                     	;# 
  1234  0698                     	;# 
  1235  0699                     	;# 
  1236  069A                     	;# 
  1237  069B                     	;# 
  1238  069C                     	;# 
  1239  069D                     	;# 
  1240  069E                     	;# 
  1241  069F                     	;# 
  1242  0E0F                     	;# 
  1243  0E10                     	;# 
  1244  0E11                     	;# 
  1245  0E12                     	;# 
  1246  0E13                     	;# 
  1247  0E14                     	;# 
  1248  0E15                     	;# 
  1249  0E17                     	;# 
  1250  0E20                     	;# 
  1251  0E21                     	;# 
  1252  0E22                     	;# 
  1253  0E24                     	;# 
  1254  0E25                     	;# 
  1255  0E28                     	;# 
  1256  0E29                     	;# 
  1257  0E2A                     	;# 
  1258  0E2B                     	;# 
  1259  0E90                     	;# 
  1260  0E91                     	;# 
  1261  0E92                     	;# 
  1262  0E94                     	;# 
  1263  0E95                     	;# 
  1264  0EA0                     	;# 
  1265  0EA1                     	;# 
  1266  0EA2                     	;# 
  1267  0EA3                     	;# 
  1268  0EA4                     	;# 
  1269  0EA5                     	;# 
  1270  0F0F                     	;# 
  1271  0F10                     	;# 
  1272  0F11                     	;# 
  1273  0F12                     	;# 
  1274  0F13                     	;# 
  1275  0F14                     	;# 
  1276  0F15                     	;# 
  1277  0F16                     	;# 
  1278  0F17                     	;# 
  1279  0F18                     	;# 
  1280  0F19                     	;# 
  1281  0F1A                     	;# 
  1282  0F1B                     	;# 
  1283  0F1C                     	;# 
  1284  0F1D                     	;# 
  1285  0F1E                     	;# 
  1286  0F1F                     	;# 
  1287  0F20                     	;# 
  1288  0F21                     	;# 
  1289  0F22                     	;# 
  1290  0F23                     	;# 
  1291  0F24                     	;# 
  1292  0F25                     	;# 
  1293  0F26                     	;# 
  1294  0F27                     	;# 
  1295  0F28                     	;# 
  1296  0F29                     	;# 
  1297  0F2A                     	;# 
  1298  0F2B                     	;# 
  1299  0F2C                     	;# 
  1300  0F2D                     	;# 
  1301  0F9E                     	;# 
  1302  0FE4                     	;# 
  1303  0FE5                     	;# 
  1304  0FE6                     	;# 
  1305  0FE7                     	;# 
  1306  0FE8                     	;# 
  1307  0FE9                     	;# 
  1308  0FEA                     	;# 
  1309  0FEB                     	;# 
  1310  0FED                     	;# 
  1311  0FEE                     	;# 
  1312  0FEF                     	;# 
  1313  0000                     	;# 
  1314  0001                     	;# 
  1315  0002                     	;# 
  1316  0003                     	;# 
  1317  0004                     	;# 
  1318  0005                     	;# 
  1319  0006                     	;# 
  1320  0007                     	;# 
  1321  0008                     	;# 
  1322  0009                     	;# 
  1323  000A                     	;# 
  1324  000B                     	;# 
  1325  000C                     	;# 
  1326  000E                     	;# 
  1327  0011                     	;# 
  1328  0012                     	;# 
  1329  0013                     	;# 
  1330  0015                     	;# 
  1331  0016                     	;# 
  1332  0016                     	;# 
  1333  0017                     	;# 
  1334  0018                     	;# 
  1335  0019                     	;# 
  1336  001A                     	;# 
  1337  001B                     	;# 
  1338  001C                     	;# 
  1339  008C                     	;# 
  1340  008E                     	;# 
  1341  0091                     	;# 
  1342  0092                     	;# 
  1343  0093                     	;# 
  1344  0095                     	;# 
  1345  0096                     	;# 
  1346  0097                     	;# 
  1347  0098                     	;# 
  1348  0099                     	;# 
  1349  009A                     	;# 
  1350  009B                     	;# 
  1351  009B                     	;# 
  1352  009C                     	;# 
  1353  009D                     	;# 
  1354  009E                     	;# 
  1355  009F                     	;# 
  1356  010C                     	;# 
  1357  010E                     	;# 
  1358  0111                     	;# 
  1359  0112                     	;# 
  1360  0113                     	;# 
  1361  0114                     	;# 
  1362  0115                     	;# 
  1363  0116                     	;# 
  1364  0117                     	;# 
  1365  0118                     	;# 
  1366  0119                     	;# 
  1367  011C                     	;# 
  1368  018C                     	;# 
  1369  018E                     	;# 
  1370  0191                     	;# 
  1371  0191                     	;# 
  1372  0192                     	;# 
  1373  0193                     	;# 
  1374  0193                     	;# 
  1375  0194                     	;# 
  1376  0195                     	;# 
  1377  0196                     	;# 
  1378  0197                     	;# 
  1379  0199                     	;# 
  1380  0199                     	;# 
  1381  0199                     	;# 
  1382  019A                     	;# 
  1383  019A                     	;# 
  1384  019A                     	;# 
  1385  019B                     	;# 
  1386  019B                     	;# 
  1387  019B                     	;# 
  1388  019B                     	;# 
  1389  019B                     	;# 
  1390  019C                     	;# 
  1391  019C                     	;# 
  1392  019C                     	;# 
  1393  019D                     	;# 
  1394  019D                     	;# 
  1395  019D                     	;# 
  1396  019E                     	;# 
  1397  019E                     	;# 
  1398  019E                     	;# 
  1399  019F                     	;# 
  1400  019F                     	;# 
  1401  019F                     	;# 
  1402  019F                     	;# 
  1403  019F                     	;# 
  1404  020C                     	;# 
  1405  020E                     	;# 
  1406  0211                     	;# 
  1407  0211                     	;# 
  1408  0212                     	;# 
  1409  0212                     	;# 
  1410  0213                     	;# 
  1411  0213                     	;# 
  1412  0214                     	;# 
  1413  0214                     	;# 
  1414  0215                     	;# 
  1415  0215                     	;# 
  1416  0215                     	;# 
  1417  0215                     	;# 
  1418  0216                     	;# 
  1419  0216                     	;# 
  1420  0217                     	;# 
  1421  0217                     	;# 
  1422  028C                     	;# 
  1423  028E                     	;# 
  1424  0291                     	;# 
  1425  0291                     	;# 
  1426  0292                     	;# 
  1427  0293                     	;# 
  1428  0293                     	;# 
  1429  0298                     	;# 
  1430  0298                     	;# 
  1431  0299                     	;# 
  1432  029A                     	;# 
  1433  029A                     	;# 
  1434  029E                     	;# 
  1435  030C                     	;# 
  1436  030E                     	;# 
  1437  038C                     	;# 
  1438  038E                     	;# 
  1439  0391                     	;# 
  1440  0392                     	;# 
  1441  0393                     	;# 
  1442  0397                     	;# 
  1443  0398                     	;# 
  1444  0399                     	;# 
  1445  0415                     	;# 
  1446  0416                     	;# 
  1447  0417                     	;# 
  1448  041C                     	;# 
  1449  041D                     	;# 
  1450  041E                     	;# 
  1451  0511                     	;# 
  1452  0515                     	;# 
  1453  0617                     	;# 
  1454  0618                     	;# 
  1455  0619                     	;# 
  1456  0619                     	;# 
  1457  061A                     	;# 
  1458  061B                     	;# 
  1459  061C                     	;# 
  1460  061C                     	;# 
  1461  0691                     	;# 
  1462  0692                     	;# 
  1463  0693                     	;# 
  1464  0694                     	;# 
  1465  0695                     	;# 
  1466  0696                     	;# 
  1467  0697                     	;# 
  1468  0698                     	;# 
  1469  0699                     	;# 
  1470  069A                     	;# 
  1471  069B                     	;# 
  1472  069C                     	;# 
  1473  069D                     	;# 
  1474  069E                     	;# 
  1475  069F                     	;# 
  1476  0E0F                     	;# 
  1477  0E10                     	;# 
  1478  0E11                     	;# 
  1479  0E12                     	;# 
  1480  0E13                     	;# 
  1481  0E14                     	;# 
  1482  0E15                     	;# 
  1483  0E17                     	;# 
  1484  0E20                     	;# 
  1485  0E21                     	;# 
  1486  0E22                     	;# 
  1487  0E24                     	;# 
  1488  0E25                     	;# 
  1489  0E28                     	;# 
  1490  0E29                     	;# 
  1491  0E2A                     	;# 
  1492  0E2B                     	;# 
  1493  0E90                     	;# 
  1494  0E91                     	;# 
  1495  0E92                     	;# 
  1496  0E94                     	;# 
  1497  0E95                     	;# 
  1498  0EA0                     	;# 
  1499  0EA1                     	;# 
  1500  0EA2                     	;# 
  1501  0EA3                     	;# 
  1502  0EA4                     	;# 
  1503  0EA5                     	;# 
  1504  0F0F                     	;# 
  1505  0F10                     	;# 
  1506  0F11                     	;# 
  1507  0F12                     	;# 
  1508  0F13                     	;# 
  1509  0F14                     	;# 
  1510  0F15                     	;# 
  1511  0F16                     	;# 
  1512  0F17                     	;# 
  1513  0F18                     	;# 
  1514  0F19                     	;# 
  1515  0F1A                     	;# 
  1516  0F1B                     	;# 
  1517  0F1C                     	;# 
  1518  0F1D                     	;# 
  1519  0F1E                     	;# 
  1520  0F1F                     	;# 
  1521  0F20                     	;# 
  1522  0F21                     	;# 
  1523  0F22                     	;# 
  1524  0F23                     	;# 
  1525  0F24                     	;# 
  1526  0F25                     	;# 
  1527  0F26                     	;# 
  1528  0F27                     	;# 
  1529  0F28                     	;# 
  1530  0F29                     	;# 
  1531  0F2A                     	;# 
  1532  0F2B                     	;# 
  1533  0F2C                     	;# 
  1534  0F2D                     	;# 
  1535  0F9E                     	;# 
  1536  0FE4                     	;# 
  1537  0FE5                     	;# 
  1538  0FE6                     	;# 
  1539  0FE7                     	;# 
  1540  0FE8                     	;# 
  1541  0FE9                     	;# 
  1542  0FEA                     	;# 
  1543  0FEB                     	;# 
  1544  0FED                     	;# 
  1545  0FEE                     	;# 
  1546  0FEF                     	;# 
  1547  0000                     	;# 
  1548  0001                     	;# 
  1549  0002                     	;# 
  1550  0003                     	;# 
  1551  0004                     	;# 
  1552  0005                     	;# 
  1553  0006                     	;# 
  1554  0007                     	;# 
  1555  0008                     	;# 
  1556  0009                     	;# 
  1557  000A                     	;# 
  1558  000B                     	;# 
  1559  000C                     	;# 
  1560  000E                     	;# 
  1561  0011                     	;# 
  1562  0012                     	;# 
  1563  0013                     	;# 
  1564  0015                     	;# 
  1565  0016                     	;# 
  1566  0016                     	;# 
  1567  0017                     	;# 
  1568  0018                     	;# 
  1569  0019                     	;# 
  1570  001A                     	;# 
  1571  001B                     	;# 
  1572  001C                     	;# 
  1573  008C                     	;# 
  1574  008E                     	;# 
  1575  0091                     	;# 
  1576  0092                     	;# 
  1577  0093                     	;# 
  1578  0095                     	;# 
  1579  0096                     	;# 
  1580  0097                     	;# 
  1581  0098                     	;# 
  1582  0099                     	;# 
  1583  009A                     	;# 
  1584  009B                     	;# 
  1585  009B                     	;# 
  1586  009C                     	;# 
  1587  009D                     	;# 
  1588  009E                     	;# 
  1589  009F                     	;# 
  1590  010C                     	;# 
  1591  010E                     	;# 
  1592  0111                     	;# 
  1593  0112                     	;# 
  1594  0113                     	;# 
  1595  0114                     	;# 
  1596  0115                     	;# 
  1597  0116                     	;# 
  1598  0117                     	;# 
  1599  0118                     	;# 
  1600  0119                     	;# 
  1601  011C                     	;# 
  1602  018C                     	;# 
  1603  018E                     	;# 
  1604  0191                     	;# 
  1605  0191                     	;# 
  1606  0192                     	;# 
  1607  0193                     	;# 
  1608  0193                     	;# 
  1609  0194                     	;# 
  1610  0195                     	;# 
  1611  0196                     	;# 
  1612  0197                     	;# 
  1613  0199                     	;# 
  1614  0199                     	;# 
  1615  0199                     	;# 
  1616  019A                     	;# 
  1617  019A                     	;# 
  1618  019A                     	;# 
  1619  019B                     	;# 
  1620  019B                     	;# 
  1621  019B                     	;# 
  1622  019B                     	;# 
  1623  019B                     	;# 
  1624  019C                     	;# 
  1625  019C                     	;# 
  1626  019C                     	;# 
  1627  019D                     	;# 
  1628  019D                     	;# 
  1629  019D                     	;# 
  1630  019E                     	;# 
  1631  019E                     	;# 
  1632  019E                     	;# 
  1633  019F                     	;# 
  1634  019F                     	;# 
  1635  019F                     	;# 
  1636  019F                     	;# 
  1637  019F                     	;# 
  1638  020C                     	;# 
  1639  020E                     	;# 
  1640  0211                     	;# 
  1641  0211                     	;# 
  1642  0212                     	;# 
  1643  0212                     	;# 
  1644  0213                     	;# 
  1645  0213                     	;# 
  1646  0214                     	;# 
  1647  0214                     	;# 
  1648  0215                     	;# 
  1649  0215                     	;# 
  1650  0215                     	;# 
  1651  0215                     	;# 
  1652  0216                     	;# 
  1653  0216                     	;# 
  1654  0217                     	;# 
  1655  0217                     	;# 
  1656  028C                     	;# 
  1657  028E                     	;# 
  1658  0291                     	;# 
  1659  0291                     	;# 
  1660  0292                     	;# 
  1661  0293                     	;# 
  1662  0293                     	;# 
  1663  0298                     	;# 
  1664  0298                     	;# 
  1665  0299                     	;# 
  1666  029A                     	;# 
  1667  029A                     	;# 
  1668  029E                     	;# 
  1669  030C                     	;# 
  1670  030E                     	;# 
  1671  038C                     	;# 
  1672  038E                     	;# 
  1673  0391                     	;# 
  1674  0392                     	;# 
  1675  0393                     	;# 
  1676  0397                     	;# 
  1677  0398                     	;# 
  1678  0399                     	;# 
  1679  0415                     	;# 
  1680  0416                     	;# 
  1681  0417                     	;# 
  1682  041C                     	;# 
  1683  041D                     	;# 
  1684  041E                     	;# 
  1685  0511                     	;# 
  1686  0515                     	;# 
  1687  0617                     	;# 
  1688  0618                     	;# 
  1689  0619                     	;# 
  1690  0619                     	;# 
  1691  061A                     	;# 
  1692  061B                     	;# 
  1693  061C                     	;# 
  1694  061C                     	;# 
  1695  0691                     	;# 
  1696  0692                     	;# 
  1697  0693                     	;# 
  1698  0694                     	;# 
  1699  0695                     	;# 
  1700  0696                     	;# 
  1701  0697                     	;# 
  1702  0698                     	;# 
  1703  0699                     	;# 
  1704  069A                     	;# 
  1705  069B                     	;# 
  1706  069C                     	;# 
  1707  069D                     	;# 
  1708  069E                     	;# 
  1709  069F                     	;# 
  1710  0E0F                     	;# 
  1711  0E10                     	;# 
  1712  0E11                     	;# 
  1713  0E12                     	;# 
  1714  0E13                     	;# 
  1715  0E14                     	;# 
  1716  0E15                     	;# 
  1717  0E17                     	;# 
  1718  0E20                     	;# 
  1719  0E21                     	;# 
  1720  0E22                     	;# 
  1721  0E24                     	;# 
  1722  0E25                     	;# 
  1723  0E28                     	;# 
  1724  0E29                     	;# 
  1725  0E2A                     	;# 
  1726  0E2B                     	;# 
  1727  0E90                     	;# 
  1728  0E91                     	;# 
  1729  0E92                     	;# 
  1730  0E94                     	;# 
  1731  0E95                     	;# 
  1732  0EA0                     	;# 
  1733  0EA1                     	;# 
  1734  0EA2                     	;# 
  1735  0EA3                     	;# 
  1736  0EA4                     	;# 
  1737  0EA5                     	;# 
  1738  0F0F                     	;# 
  1739  0F10                     	;# 
  1740  0F11                     	;# 
  1741  0F12                     	;# 
  1742  0F13                     	;# 
  1743  0F14                     	;# 
  1744  0F15                     	;# 
  1745  0F16                     	;# 
  1746  0F17                     	;# 
  1747  0F18                     	;# 
  1748  0F19                     	;# 
  1749  0F1A                     	;# 
  1750  0F1B                     	;# 
  1751  0F1C                     	;# 
  1752  0F1D                     	;# 
  1753  0F1E                     	;# 
  1754  0F1F                     	;# 
  1755  0F20                     	;# 
  1756  0F21                     	;# 
  1757  0F22                     	;# 
  1758  0F23                     	;# 
  1759  0F24                     	;# 
  1760  0F25                     	;# 
  1761  0F26                     	;# 
  1762  0F27                     	;# 
  1763  0F28                     	;# 
  1764  0F29                     	;# 
  1765  0F2A                     	;# 
  1766  0F2B                     	;# 
  1767  0F2C                     	;# 
  1768  0F2D                     	;# 
  1769  0F9E                     	;# 
  1770  0FE4                     	;# 
  1771  0FE5                     	;# 
  1772  0FE6                     	;# 
  1773  0FE7                     	;# 
  1774  0FE8                     	;# 
  1775  0FE9                     	;# 
  1776  0FEA                     	;# 
  1777  0FEB                     	;# 
  1778  0FED                     	;# 
  1779  0FEE                     	;# 
  1780  0FEF                     	;# 
  1781  0000                     	;# 
  1782  0001                     	;# 
  1783  0002                     	;# 
  1784  0003                     	;# 
  1785  0004                     	;# 
  1786  0005                     	;# 
  1787  0006                     	;# 
  1788  0007                     	;# 
  1789  0008                     	;# 
  1790  0009                     	;# 
  1791  000A                     	;# 
  1792  000B                     	;# 
  1793  000C                     	;# 
  1794  000E                     	;# 
  1795  0011                     	;# 
  1796  0012                     	;# 
  1797  0013                     	;# 
  1798  0015                     	;# 
  1799  0016                     	;# 
  1800  0016                     	;# 
  1801  0017                     	;# 
  1802  0018                     	;# 
  1803  0019                     	;# 
  1804  001A                     	;# 
  1805  001B                     	;# 
  1806  001C                     	;# 
  1807  008C                     	;# 
  1808  008E                     	;# 
  1809  0091                     	;# 
  1810  0092                     	;# 
  1811  0093                     	;# 
  1812  0095                     	;# 
  1813  0096                     	;# 
  1814  0097                     	;# 
  1815  0098                     	;# 
  1816  0099                     	;# 
  1817  009A                     	;# 
  1818  009B                     	;# 
  1819  009B                     	;# 
  1820  009C                     	;# 
  1821  009D                     	;# 
  1822  009E                     	;# 
  1823  009F                     	;# 
  1824  010C                     	;# 
  1825  010E                     	;# 
  1826  0111                     	;# 
  1827  0112                     	;# 
  1828  0113                     	;# 
  1829  0114                     	;# 
  1830  0115                     	;# 
  1831  0116                     	;# 
  1832  0117                     	;# 
  1833  0118                     	;# 
  1834  0119                     	;# 
  1835  011C                     	;# 
  1836  018C                     	;# 
  1837  018E                     	;# 
  1838  0191                     	;# 
  1839  0191                     	;# 
  1840  0192                     	;# 
  1841  0193                     	;# 
  1842  0193                     	;# 
  1843  0194                     	;# 
  1844  0195                     	;# 
  1845  0196                     	;# 
  1846  0197                     	;# 
  1847  0199                     	;# 
  1848  0199                     	;# 
  1849  0199                     	;# 
  1850  019A                     	;# 
  1851  019A                     	;# 
  1852  019A                     	;# 
  1853  019B                     	;# 
  1854  019B                     	;# 
  1855  019B                     	;# 
  1856  019B                     	;# 
  1857  019B                     	;# 
  1858  019C                     	;# 
  1859  019C                     	;# 
  1860  019C                     	;# 
  1861  019D                     	;# 
  1862  019D                     	;# 
  1863  019D                     	;# 
  1864  019E                     	;# 
  1865  019E                     	;# 
  1866  019E                     	;# 
  1867  019F                     	;# 
  1868  019F                     	;# 
  1869  019F                     	;# 
  1870  019F                     	;# 
  1871  019F                     	;# 
  1872  020C                     	;# 
  1873  020E                     	;# 
  1874  0211                     	;# 
  1875  0211                     	;# 
  1876  0212                     	;# 
  1877  0212                     	;# 
  1878  0213                     	;# 
  1879  0213                     	;# 
  1880  0214                     	;# 
  1881  0214                     	;# 
  1882  0215                     	;# 
  1883  0215                     	;# 
  1884  0215                     	;# 
  1885  0215                     	;# 
  1886  0216                     	;# 
  1887  0216                     	;# 
  1888  0217                     	;# 
  1889  0217                     	;# 
  1890  028C                     	;# 
  1891  028E                     	;# 
  1892  0291                     	;# 
  1893  0291                     	;# 
  1894  0292                     	;# 
  1895  0293                     	;# 
  1896  0293                     	;# 
  1897  0298                     	;# 
  1898  0298                     	;# 
  1899  0299                     	;# 
  1900  029A                     	;# 
  1901  029A                     	;# 
  1902  029E                     	;# 
  1903  030C                     	;# 
  1904  030E                     	;# 
  1905  038C                     	;# 
  1906  038E                     	;# 
  1907  0391                     	;# 
  1908  0392                     	;# 
  1909  0393                     	;# 
  1910  0397                     	;# 
  1911  0398                     	;# 
  1912  0399                     	;# 
  1913  0415                     	;# 
  1914  0416                     	;# 
  1915  0417                     	;# 
  1916  041C                     	;# 
  1917  041D                     	;# 
  1918  041E                     	;# 
  1919  0511                     	;# 
  1920  0515                     	;# 
  1921  0617                     	;# 
  1922  0618                     	;# 
  1923  0619                     	;# 
  1924  0619                     	;# 
  1925  061A                     	;# 
  1926  061B                     	;# 
  1927  061C                     	;# 
  1928  061C                     	;# 
  1929  0691                     	;# 
  1930  0692                     	;# 
  1931  0693                     	;# 
  1932  0694                     	;# 
  1933  0695                     	;# 
  1934  0696                     	;# 
  1935  0697                     	;# 
  1936  0698                     	;# 
  1937  0699                     	;# 
  1938  069A                     	;# 
  1939  069B                     	;# 
  1940  069C                     	;# 
  1941  069D                     	;# 
  1942  069E                     	;# 
  1943  069F                     	;# 
  1944  0E0F                     	;# 
  1945  0E10                     	;# 
  1946  0E11                     	;# 
  1947  0E12                     	;# 
  1948  0E13                     	;# 
  1949  0E14                     	;# 
  1950  0E15                     	;# 
  1951  0E17                     	;# 
  1952  0E20                     	;# 
  1953  0E21                     	;# 
  1954  0E22                     	;# 
  1955  0E24                     	;# 
  1956  0E25                     	;# 
  1957  0E28                     	;# 
  1958  0E29                     	;# 
  1959  0E2A                     	;# 
  1960  0E2B                     	;# 
  1961  0E90                     	;# 
  1962  0E91                     	;# 
  1963  0E92                     	;# 
  1964  0E94                     	;# 
  1965  0E95                     	;# 
  1966  0EA0                     	;# 
  1967  0EA1                     	;# 
  1968  0EA2                     	;# 
  1969  0EA3                     	;# 
  1970  0EA4                     	;# 
  1971  0EA5                     	;# 
  1972  0F0F                     	;# 
  1973  0F10                     	;# 
  1974  0F11                     	;# 
  1975  0F12                     	;# 
  1976  0F13                     	;# 
  1977  0F14                     	;# 
  1978  0F15                     	;# 
  1979  0F16                     	;# 
  1980  0F17                     	;# 
  1981  0F18                     	;# 
  1982  0F19                     	;# 
  1983  0F1A                     	;# 
  1984  0F1B                     	;# 
  1985  0F1C                     	;# 
  1986  0F1D                     	;# 
  1987  0F1E                     	;# 
  1988  0F1F                     	;# 
  1989  0F20                     	;# 
  1990  0F21                     	;# 
  1991  0F22                     	;# 
  1992  0F23                     	;# 
  1993  0F24                     	;# 
  1994  0F25                     	;# 
  1995  0F26                     	;# 
  1996  0F27                     	;# 
  1997  0F28                     	;# 
  1998  0F29                     	;# 
  1999  0F2A                     	;# 
  2000  0F2B                     	;# 
  2001  0F2C                     	;# 
  2002  0F2D                     	;# 
  2003  0F9E                     	;# 
  2004  0FE4                     	;# 
  2005  0FE5                     	;# 
  2006  0FE6                     	;# 
  2007  0FE7                     	;# 
  2008  0FE8                     	;# 
  2009  0FE9                     	;# 
  2010  0FEA                     	;# 
  2011  0FEB                     	;# 
  2012  0FED                     	;# 
  2013  0FEE                     	;# 
  2014  0FEF                     	;# 
  2015  0000                     	;# 
  2016  0001                     	;# 
  2017  0002                     	;# 
  2018  0003                     	;# 
  2019  0004                     	;# 
  2020  0005                     	;# 
  2021  0006                     	;# 
  2022  0007                     	;# 
  2023  0008                     	;# 
  2024  0009                     	;# 
  2025  000A                     	;# 
  2026  000B                     	;# 
  2027  000C                     	;# 
  2028  000E                     	;# 
  2029  0011                     	;# 
  2030  0012                     	;# 
  2031  0013                     	;# 
  2032  0015                     	;# 
  2033  0016                     	;# 
  2034  0016                     	;# 
  2035  0017                     	;# 
  2036  0018                     	;# 
  2037  0019                     	;# 
  2038  001A                     	;# 
  2039  001B                     	;# 
  2040  001C                     	;# 
  2041  008C                     	;# 
  2042  008E                     	;# 
  2043  0091                     	;# 
  2044  0092                     	;# 
  2045  0093                     	;# 
  2046  0095                     	;# 
  2047  0096                     	;# 
  2048  0097                     	;# 
  2049  0098                     	;# 
  2050  0099                     	;# 
  2051  009A                     	;# 
  2052  009B                     	;# 
  2053  009B                     	;# 
  2054  009C                     	;# 
  2055  009D                     	;# 
  2056  009E                     	;# 
  2057  009F                     	;# 
  2058  010C                     	;# 
  2059  010E                     	;# 
  2060  0111                     	;# 
  2061  0112                     	;# 
  2062  0113                     	;# 
  2063  0114                     	;# 
  2064  0115                     	;# 
  2065  0116                     	;# 
  2066  0117                     	;# 
  2067  0118                     	;# 
  2068  0119                     	;# 
  2069  011C                     	;# 
  2070  018C                     	;# 
  2071  018E                     	;# 
  2072  0191                     	;# 
  2073  0191                     	;# 
  2074  0192                     	;# 
  2075  0193                     	;# 
  2076  0193                     	;# 
  2077  0194                     	;# 
  2078  0195                     	;# 
  2079  0196                     	;# 
  2080  0197                     	;# 
  2081  0199                     	;# 
  2082  0199                     	;# 
  2083  0199                     	;# 
  2084  019A                     	;# 
  2085  019A                     	;# 
  2086  019A                     	;# 
  2087  019B                     	;# 
  2088  019B                     	;# 
  2089  019B                     	;# 
  2090  019B                     	;# 
  2091  019B                     	;# 
  2092  019C                     	;# 
  2093  019C                     	;# 
  2094  019C                     	;# 
  2095  019D                     	;# 
  2096  019D                     	;# 
  2097  019D                     	;# 
  2098  019E                     	;# 
  2099  019E                     	;# 
  2100  019E                     	;# 
  2101  019F                     	;# 
  2102  019F                     	;# 
  2103  019F                     	;# 
  2104  019F                     	;# 
  2105  019F                     	;# 
  2106  020C                     	;# 
  2107  020E                     	;# 
  2108  0211                     	;# 
  2109  0211                     	;# 
  2110  0212                     	;# 
  2111  0212                     	;# 
  2112  0213                     	;# 
  2113  0213                     	;# 
  2114  0214                     	;# 
  2115  0214                     	;# 
  2116  0215                     	;# 
  2117  0215                     	;# 
  2118  0215                     	;# 
  2119  0215                     	;# 
  2120  0216                     	;# 
  2121  0216                     	;# 
  2122  0217                     	;# 
  2123  0217                     	;# 
  2124  028C                     	;# 
  2125  028E                     	;# 
  2126  0291                     	;# 
  2127  0291                     	;# 
  2128  0292                     	;# 
  2129  0293                     	;# 
  2130  0293                     	;# 
  2131  0298                     	;# 
  2132  0298                     	;# 
  2133  0299                     	;# 
  2134  029A                     	;# 
  2135  029A                     	;# 
  2136  029E                     	;# 
  2137  030C                     	;# 
  2138  030E                     	;# 
  2139  038C                     	;# 
  2140  038E                     	;# 
  2141  0391                     	;# 
  2142  0392                     	;# 
  2143  0393                     	;# 
  2144  0397                     	;# 
  2145  0398                     	;# 
  2146  0399                     	;# 
  2147  0415                     	;# 
  2148  0416                     	;# 
  2149  0417                     	;# 
  2150  041C                     	;# 
  2151  041D                     	;# 
  2152  041E                     	;# 
  2153  0511                     	;# 
  2154  0515                     	;# 
  2155  0617                     	;# 
  2156  0618                     	;# 
  2157  0619                     	;# 
  2158  0619                     	;# 
  2159  061A                     	;# 
  2160  061B                     	;# 
  2161  061C                     	;# 
  2162  061C                     	;# 
  2163  0691                     	;# 
  2164  0692                     	;# 
  2165  0693                     	;# 
  2166  0694                     	;# 
  2167  0695                     	;# 
  2168  0696                     	;# 
  2169  0697                     	;# 
  2170  0698                     	;# 
  2171  0699                     	;# 
  2172  069A                     	;# 
  2173  069B                     	;# 
  2174  069C                     	;# 
  2175  069D                     	;# 
  2176  069E                     	;# 
  2177  069F                     	;# 
  2178  0E0F                     	;# 
  2179  0E10                     	;# 
  2180  0E11                     	;# 
  2181  0E12                     	;# 
  2182  0E13                     	;# 
  2183  0E14                     	;# 
  2184  0E15                     	;# 
  2185  0E17                     	;# 
  2186  0E20                     	;# 
  2187  0E21                     	;# 
  2188  0E22                     	;# 
  2189  0E24                     	;# 
  2190  0E25                     	;# 
  2191  0E28                     	;# 
  2192  0E29                     	;# 
  2193  0E2A                     	;# 
  2194  0E2B                     	;# 
  2195  0E90                     	;# 
  2196  0E91                     	;# 
  2197  0E92                     	;# 
  2198  0E94                     	;# 
  2199  0E95                     	;# 
  2200  0EA0                     	;# 
  2201  0EA1                     	;# 
  2202  0EA2                     	;# 
  2203  0EA3                     	;# 
  2204  0EA4                     	;# 
  2205  0EA5                     	;# 
  2206  0F0F                     	;# 
  2207  0F10                     	;# 
  2208  0F11                     	;# 
  2209  0F12                     	;# 
  2210  0F13                     	;# 
  2211  0F14                     	;# 
  2212  0F15                     	;# 
  2213  0F16                     	;# 
  2214  0F17                     	;# 
  2215  0F18                     	;# 
  2216  0F19                     	;# 
  2217  0F1A                     	;# 
  2218  0F1B                     	;# 
  2219  0F1C                     	;# 
  2220  0F1D                     	;# 
  2221  0F1E                     	;# 
  2222  0F1F                     	;# 
  2223  0F20                     	;# 
  2224  0F21                     	;# 
  2225  0F22                     	;# 
  2226  0F23                     	;# 
  2227  0F24                     	;# 
  2228  0F25                     	;# 
  2229  0F26                     	;# 
  2230  0F27                     	;# 
  2231  0F28                     	;# 
  2232  0F29                     	;# 
  2233  0F2A                     	;# 
  2234  0F2B                     	;# 
  2235  0F2C                     	;# 
  2236  0F2D                     	;# 
  2237  0F9E                     	;# 
  2238  0FE4                     	;# 
  2239  0FE5                     	;# 
  2240  0FE6                     	;# 
  2241  0FE7                     	;# 
  2242  0FE8                     	;# 
  2243  0FE9                     	;# 
  2244  0FEA                     	;# 
  2245  0FEB                     	;# 
  2246  0FED                     	;# 
  2247  0FEE                     	;# 
  2248  0FEF                     	;# 
  2249  0000                     	;# 
  2250  0001                     	;# 
  2251  0002                     	;# 
  2252  0003                     	;# 
  2253  0004                     	;# 
  2254  0005                     	;# 
  2255  0006                     	;# 
  2256  0007                     	;# 
  2257  0008                     	;# 
  2258  0009                     	;# 
  2259  000A                     	;# 
  2260  000B                     	;# 
  2261  000C                     	;# 
  2262  000E                     	;# 
  2263  0011                     	;# 
  2264  0012                     	;# 
  2265  0013                     	;# 
  2266  0015                     	;# 
  2267  0016                     	;# 
  2268  0016                     	;# 
  2269  0017                     	;# 
  2270  0018                     	;# 
  2271  0019                     	;# 
  2272  001A                     	;# 
  2273  001B                     	;# 
  2274  001C                     	;# 
  2275  008C                     	;# 
  2276  008E                     	;# 
  2277  0091                     	;# 
  2278  0092                     	;# 
  2279  0093                     	;# 
  2280  0095                     	;# 
  2281  0096                     	;# 
  2282  0097                     	;# 
  2283  0098                     	;# 
  2284  0099                     	;# 
  2285  009A                     	;# 
  2286  009B                     	;# 
  2287  009B                     	;# 
  2288  009C                     	;# 
  2289  009D                     	;# 
  2290  009E                     	;# 
  2291  009F                     	;# 
  2292  010C                     	;# 
  2293  010E                     	;# 
  2294  0111                     	;# 
  2295  0112                     	;# 
  2296  0113                     	;# 
  2297  0114                     	;# 
  2298  0115                     	;# 
  2299  0116                     	;# 
  2300  0117                     	;# 
  2301  0118                     	;# 
  2302  0119                     	;# 
  2303  011C                     	;# 
  2304  018C                     	;# 
  2305  018E                     	;# 
  2306  0191                     	;# 
  2307  0191                     	;# 
  2308  0192                     	;# 
  2309  0193                     	;# 
  2310  0193                     	;# 
  2311  0194                     	;# 
  2312  0195                     	;# 
  2313  0196                     	;# 
  2314  0197                     	;# 
  2315  0199                     	;# 
  2316  0199                     	;# 
  2317  0199                     	;# 
  2318  019A                     	;# 
  2319  019A                     	;# 
  2320  019A                     	;# 
  2321  019B                     	;# 
  2322  019B                     	;# 
  2323  019B                     	;# 
  2324  019B                     	;# 
  2325  019B                     	;# 
  2326  019C                     	;# 
  2327  019C                     	;# 
  2328  019C                     	;# 
  2329  019D                     	;# 
  2330  019D                     	;# 
  2331  019D                     	;# 
  2332  019E                     	;# 
  2333  019E                     	;# 
  2334  019E                     	;# 
  2335  019F                     	;# 
  2336  019F                     	;# 
  2337  019F                     	;# 
  2338  019F                     	;# 
  2339  019F                     	;# 
  2340  020C                     	;# 
  2341  020E                     	;# 
  2342  0211                     	;# 
  2343  0211                     	;# 
  2344  0212                     	;# 
  2345  0212                     	;# 
  2346  0213                     	;# 
  2347  0213                     	;# 
  2348  0214                     	;# 
  2349  0214                     	;# 
  2350  0215                     	;# 
  2351  0215                     	;# 
  2352  0215                     	;# 
  2353  0215                     	;# 
  2354  0216                     	;# 
  2355  0216                     	;# 
  2356  0217                     	;# 
  2357  0217                     	;# 
  2358  028C                     	;# 
  2359  028E                     	;# 
  2360  0291                     	;# 
  2361  0291                     	;# 
  2362  0292                     	;# 
  2363  0293                     	;# 
  2364  0293                     	;# 
  2365  0298                     	;# 
  2366  0298                     	;# 
  2367  0299                     	;# 
  2368  029A                     	;# 
  2369  029A                     	;# 
  2370  029E                     	;# 
  2371  030C                     	;# 
  2372  030E                     	;# 
  2373  038C                     	;# 
  2374  038E                     	;# 
  2375  0391                     	;# 
  2376  0392                     	;# 
  2377  0393                     	;# 
  2378  0397                     	;# 
  2379  0398                     	;# 
  2380  0399                     	;# 
  2381  0415                     	;# 
  2382  0416                     	;# 
  2383  0417                     	;# 
  2384  041C                     	;# 
  2385  041D                     	;# 
  2386  041E                     	;# 
  2387  0511                     	;# 
  2388  0515                     	;# 
  2389  0617                     	;# 
  2390  0618                     	;# 
  2391  0619                     	;# 
  2392  0619                     	;# 
  2393  061A                     	;# 
  2394  061B                     	;# 
  2395  061C                     	;# 
  2396  061C                     	;# 
  2397  0691                     	;# 
  2398  0692                     	;# 
  2399  0693                     	;# 
  2400  0694                     	;# 
  2401  0695                     	;# 
  2402  0696                     	;# 
  2403  0697                     	;# 
  2404  0698                     	;# 
  2405  0699                     	;# 
  2406  069A                     	;# 
  2407  069B                     	;# 
  2408  069C                     	;# 
  2409  069D                     	;# 
  2410  069E                     	;# 
  2411  069F                     	;# 
  2412  0E0F                     	;# 
  2413  0E10                     	;# 
  2414  0E11                     	;# 
  2415  0E12                     	;# 
  2416  0E13                     	;# 
  2417  0E14                     	;# 
  2418  0E15                     	;# 
  2419  0E17                     	;# 
  2420  0E20                     	;# 
  2421  0E21                     	;# 
  2422  0E22                     	;# 
  2423  0E24                     	;# 
  2424  0E25                     	;# 
  2425  0E28                     	;# 
  2426  0E29                     	;# 
  2427  0E2A                     	;# 
  2428  0E2B                     	;# 
  2429  0E90                     	;# 
  2430  0E91                     	;# 
  2431  0E92                     	;# 
  2432  0E94                     	;# 
  2433  0E95                     	;# 
  2434  0EA0                     	;# 
  2435  0EA1                     	;# 
  2436  0EA2                     	;# 
  2437  0EA3                     	;# 
  2438  0EA4                     	;# 
  2439  0EA5                     	;# 
  2440  0F0F                     	;# 
  2441  0F10                     	;# 
  2442  0F11                     	;# 
  2443  0F12                     	;# 
  2444  0F13                     	;# 
  2445  0F14                     	;# 
  2446  0F15                     	;# 
  2447  0F16                     	;# 
  2448  0F17                     	;# 
  2449  0F18                     	;# 
  2450  0F19                     	;# 
  2451  0F1A                     	;# 
  2452  0F1B                     	;# 
  2453  0F1C                     	;# 
  2454  0F1D                     	;# 
  2455  0F1E                     	;# 
  2456  0F1F                     	;# 
  2457  0F20                     	;# 
  2458  0F21                     	;# 
  2459  0F22                     	;# 
  2460  0F23                     	;# 
  2461  0F24                     	;# 
  2462  0F25                     	;# 
  2463  0F26                     	;# 
  2464  0F27                     	;# 
  2465  0F28                     	;# 
  2466  0F29                     	;# 
  2467  0F2A                     	;# 
  2468  0F2B                     	;# 
  2469  0F2C                     	;# 
  2470  0F2D                     	;# 
  2471  0F9E                     	;# 
  2472  0FE4                     	;# 
  2473  0FE5                     	;# 
  2474  0FE6                     	;# 
  2475  0FE7                     	;# 
  2476  0FE8                     	;# 
  2477  0FE9                     	;# 
  2478  0FEA                     	;# 
  2479  0FEB                     	;# 
  2480  0FED                     	;# 
  2481  0FEE                     	;# 
  2482  0FEF                     	;# 
  2483  0000                     	;# 
  2484  0001                     	;# 
  2485  0002                     	;# 
  2486  0003                     	;# 
  2487  0004                     	;# 
  2488  0005                     	;# 
  2489  0006                     	;# 
  2490  0007                     	;# 
  2491  0008                     	;# 
  2492  0009                     	;# 
  2493  000A                     	;# 
  2494  000B                     	;# 
  2495  000C                     	;# 
  2496  000E                     	;# 
  2497  0011                     	;# 
  2498  0012                     	;# 
  2499  0013                     	;# 
  2500  0015                     	;# 
  2501  0016                     	;# 
  2502  0016                     	;# 
  2503  0017                     	;# 
  2504  0018                     	;# 
  2505  0019                     	;# 
  2506  001A                     	;# 
  2507  001B                     	;# 
  2508  001C                     	;# 
  2509  008C                     	;# 
  2510  008E                     	;# 
  2511  0091                     	;# 
  2512  0092                     	;# 
  2513  0093                     	;# 
  2514  0095                     	;# 
  2515  0096                     	;# 
  2516  0097                     	;# 
  2517  0098                     	;# 
  2518  0099                     	;# 
  2519  009A                     	;# 
  2520  009B                     	;# 
  2521  009B                     	;# 
  2522  009C                     	;# 
  2523  009D                     	;# 
  2524  009E                     	;# 
  2525  009F                     	;# 
  2526  010C                     	;# 
  2527  010E                     	;# 
  2528  0111                     	;# 
  2529  0112                     	;# 
  2530  0113                     	;# 
  2531  0114                     	;# 
  2532  0115                     	;# 
  2533  0116                     	;# 
  2534  0117                     	;# 
  2535  0118                     	;# 
  2536  0119                     	;# 
  2537  011C                     	;# 
  2538  018C                     	;# 
  2539  018E                     	;# 
  2540  0191                     	;# 
  2541  0191                     	;# 
  2542  0192                     	;# 
  2543  0193                     	;# 
  2544  0193                     	;# 
  2545  0194                     	;# 
  2546  0195                     	;# 
  2547  0196                     	;# 
  2548  0197                     	;# 
  2549  0199                     	;# 
  2550  0199                     	;# 
  2551  0199                     	;# 
  2552  019A                     	;# 
  2553  019A                     	;# 
  2554  019A                     	;# 
  2555  019B                     	;# 
  2556  019B                     	;# 
  2557  019B                     	;# 
  2558  019B                     	;# 
  2559  019B                     	;# 
  2560  019C                     	;# 
  2561  019C                     	;# 
  2562  019C                     	;# 
  2563  019D                     	;# 
  2564  019D                     	;# 
  2565  019D                     	;# 
  2566  019E                     	;# 
  2567  019E                     	;# 
  2568  019E                     	;# 
  2569  019F                     	;# 
  2570  019F                     	;# 
  2571  019F                     	;# 
  2572  019F                     	;# 
  2573  019F                     	;# 
  2574  020C                     	;# 
  2575  020E                     	;# 
  2576  0211                     	;# 
  2577  0211                     	;# 
  2578  0212                     	;# 
  2579  0212                     	;# 
  2580  0213                     	;# 
  2581  0213                     	;# 
  2582  0214                     	;# 
  2583  0214                     	;# 
  2584  0215                     	;# 
  2585  0215                     	;# 
  2586  0215                     	;# 
  2587  0215                     	;# 
  2588  0216                     	;# 
  2589  0216                     	;# 
  2590  0217                     	;# 
  2591  0217                     	;# 
  2592  028C                     	;# 
  2593  028E                     	;# 
  2594  0291                     	;# 
  2595  0291                     	;# 
  2596  0292                     	;# 
  2597  0293                     	;# 
  2598  0293                     	;# 
  2599  0298                     	;# 
  2600  0298                     	;# 
  2601  0299                     	;# 
  2602  029A                     	;# 
  2603  029A                     	;# 
  2604  029E                     	;# 
  2605  030C                     	;# 
  2606  030E                     	;# 
  2607  038C                     	;# 
  2608  038E                     	;# 
  2609  0391                     	;# 
  2610  0392                     	;# 
  2611  0393                     	;# 
  2612  0397                     	;# 
  2613  0398                     	;# 
  2614  0399                     	;# 
  2615  0415                     	;# 
  2616  0416                     	;# 
  2617  0417                     	;# 
  2618  041C                     	;# 
  2619  041D                     	;# 
  2620  041E                     	;# 
  2621  0511                     	;# 
  2622  0515                     	;# 
  2623  0617                     	;# 
  2624  0618                     	;# 
  2625  0619                     	;# 
  2626  0619                     	;# 
  2627  061A                     	;# 
  2628  061B                     	;# 
  2629  061C                     	;# 
  2630  061C                     	;# 
  2631  0691                     	;# 
  2632  0692                     	;# 
  2633  0693                     	;# 
  2634  0694                     	;# 
  2635  0695                     	;# 
  2636  0696                     	;# 
  2637  0697                     	;# 
  2638  0698                     	;# 
  2639  0699                     	;# 
  2640  069A                     	;# 
  2641  069B                     	;# 
  2642  069C                     	;# 
  2643  069D                     	;# 
  2644  069E                     	;# 
  2645  069F                     	;# 
  2646  0E0F                     	;# 
  2647  0E10                     	;# 
  2648  0E11                     	;# 
  2649  0E12                     	;# 
  2650  0E13                     	;# 
  2651  0E14                     	;# 
  2652  0E15                     	;# 
  2653  0E17                     	;# 
  2654  0E20                     	;# 
  2655  0E21                     	;# 
  2656  0E22                     	;# 
  2657  0E24                     	;# 
  2658  0E25                     	;# 
  2659  0E28                     	;# 
  2660  0E29                     	;# 
  2661  0E2A                     	;# 
  2662  0E2B                     	;# 
  2663  0E90                     	;# 
  2664  0E91                     	;# 
  2665  0E92                     	;# 
  2666  0E94                     	;# 
  2667  0E95                     	;# 
  2668  0EA0                     	;# 
  2669  0EA1                     	;# 
  2670  0EA2                     	;# 
  2671  0EA3                     	;# 
  2672  0EA4                     	;# 
  2673  0EA5                     	;# 
  2674  0F0F                     	;# 
  2675  0F10                     	;# 
  2676  0F11                     	;# 
  2677  0F12                     	;# 
  2678  0F13                     	;# 
  2679  0F14                     	;# 
  2680  0F15                     	;# 
  2681  0F16                     	;# 
  2682  0F17                     	;# 
  2683  0F18                     	;# 
  2684  0F19                     	;# 
  2685  0F1A                     	;# 
  2686  0F1B                     	;# 
  2687  0F1C                     	;# 
  2688  0F1D                     	;# 
  2689  0F1E                     	;# 
  2690  0F1F                     	;# 
  2691  0F20                     	;# 
  2692  0F21                     	;# 
  2693  0F22                     	;# 
  2694  0F23                     	;# 
  2695  0F24                     	;# 
  2696  0F25                     	;# 
  2697  0F26                     	;# 
  2698  0F27                     	;# 
  2699  0F28                     	;# 
  2700  0F29                     	;# 
  2701  0F2A                     	;# 
  2702  0F2B                     	;# 
  2703  0F2C                     	;# 
  2704  0F2D                     	;# 
  2705  0F9E                     	;# 
  2706  0FE4                     	;# 
  2707  0FE5                     	;# 
  2708  0FE6                     	;# 
  2709  0FE7                     	;# 
  2710  0FE8                     	;# 
  2711  0FE9                     	;# 
  2712  0FEA                     	;# 
  2713  0FEB                     	;# 
  2714  0FED                     	;# 
  2715  0FEE                     	;# 
  2716  0FEF                     	;# 
  2717  0000                     	;# 
  2718  0001                     	;# 
  2719  0002                     	;# 
  2720  0003                     	;# 
  2721  0004                     	;# 
  2722  0005                     	;# 
  2723  0006                     	;# 
  2724  0007                     	;# 
  2725  0008                     	;# 
  2726  0009                     	;# 
  2727  000A                     	;# 
  2728  000B                     	;# 
  2729  000C                     	;# 
  2730  000E                     	;# 
  2731  0011                     	;# 
  2732  0012                     	;# 
  2733  0013                     	;# 
  2734  0015                     	;# 
  2735  0016                     	;# 
  2736  0016                     	;# 
  2737  0017                     	;# 
  2738  0018                     	;# 
  2739  0019                     	;# 
  2740  001A                     	;# 
  2741  001B                     	;# 
  2742  001C                     	;# 
  2743  008C                     	;# 
  2744  008E                     	;# 
  2745  0091                     	;# 
  2746  0092                     	;# 
  2747  0093                     	;# 
  2748  0095                     	;# 
  2749  0096                     	;# 
  2750  0097                     	;# 
  2751  0098                     	;# 
  2752  0099                     	;# 
  2753  009A                     	;# 
  2754  009B                     	;# 
  2755  009B                     	;# 
  2756  009C                     	;# 
  2757  009D                     	;# 
  2758  009E                     	;# 
  2759  009F                     	;# 
  2760  010C                     	;# 
  2761  010E                     	;# 
  2762  0111                     	;# 
  2763  0112                     	;# 
  2764  0113                     	;# 
  2765  0114                     	;# 
  2766  0115                     	;# 
  2767  0116                     	;# 
  2768  0117                     	;# 
  2769  0118                     	;# 
  2770  0119                     	;# 
  2771  011C                     	;# 
  2772  018C                     	;# 
  2773  018E                     	;# 
  2774  0191                     	;# 
  2775  0191                     	;# 
  2776  0192                     	;# 
  2777  0193                     	;# 
  2778  0193                     	;# 
  2779  0194                     	;# 
  2780  0195                     	;# 
  2781  0196                     	;# 
  2782  0197                     	;# 
  2783  0199                     	;# 
  2784  0199                     	;# 
  2785  0199                     	;# 
  2786  019A                     	;# 
  2787  019A                     	;# 
  2788  019A                     	;# 
  2789  019B                     	;# 
  2790  019B                     	;# 
  2791  019B                     	;# 
  2792  019B                     	;# 
  2793  019B                     	;# 
  2794  019C                     	;# 
  2795  019C                     	;# 
  2796  019C                     	;# 
  2797  019D                     	;# 
  2798  019D                     	;# 
  2799  019D                     	;# 
  2800  019E                     	;# 
  2801  019E                     	;# 
  2802  019E                     	;# 
  2803  019F                     	;# 
  2804  019F                     	;# 
  2805  019F                     	;# 
  2806  019F                     	;# 
  2807  019F                     	;# 
  2808  020C                     	;# 
  2809  020E                     	;# 
  2810  0211                     	;# 
  2811  0211                     	;# 
  2812  0212                     	;# 
  2813  0212                     	;# 
  2814  0213                     	;# 
  2815  0213                     	;# 
  2816  0214                     	;# 
  2817  0214                     	;# 
  2818  0215                     	;# 
  2819  0215                     	;# 
  2820  0215                     	;# 
  2821  0215                     	;# 
  2822  0216                     	;# 
  2823  0216                     	;# 
  2824  0217                     	;# 
  2825  0217                     	;# 
  2826  028C                     	;# 
  2827  028E                     	;# 
  2828  0291                     	;# 
  2829  0291                     	;# 
  2830  0292                     	;# 
  2831  0293                     	;# 
  2832  0293                     	;# 
  2833  0298                     	;# 
  2834  0298                     	;# 
  2835  0299                     	;# 
  2836  029A                     	;# 
  2837  029A                     	;# 
  2838  029E                     	;# 
  2839  030C                     	;# 
  2840  030E                     	;# 
  2841  038C                     	;# 
  2842  038E                     	;# 
  2843  0391                     	;# 
  2844  0392                     	;# 
  2845  0393                     	;# 
  2846  0397                     	;# 
  2847  0398                     	;# 
  2848  0399                     	;# 
  2849  0415                     	;# 
  2850  0416                     	;# 
  2851  0417                     	;# 
  2852  041C                     	;# 
  2853  041D                     	;# 
  2854  041E                     	;# 
  2855  0511                     	;# 
  2856  0515                     	;# 
  2857  0617                     	;# 
  2858  0618                     	;# 
  2859  0619                     	;# 
  2860  0619                     	;# 
  2861  061A                     	;# 
  2862  061B                     	;# 
  2863  061C                     	;# 
  2864  061C                     	;# 
  2865  0691                     	;# 
  2866  0692                     	;# 
  2867  0693                     	;# 
  2868  0694                     	;# 
  2869  0695                     	;# 
  2870  0696                     	;# 
  2871  0697                     	;# 
  2872  0698                     	;# 
  2873  0699                     	;# 
  2874  069A                     	;# 
  2875  069B                     	;# 
  2876  069C                     	;# 
  2877  069D                     	;# 
  2878  069E                     	;# 
  2879  069F                     	;# 
  2880  0E0F                     	;# 
  2881  0E10                     	;# 
  2882  0E11                     	;# 
  2883  0E12                     	;# 
  2884  0E13                     	;# 
  2885  0E14                     	;# 
  2886  0E15                     	;# 
  2887  0E17                     	;# 
  2888  0E20                     	;# 
  2889  0E21                     	;# 
  2890  0E22                     	;# 
  2891  0E24                     	;# 
  2892  0E25                     	;# 
  2893  0E28                     	;# 
  2894  0E29                     	;# 
  2895  0E2A                     	;# 
  2896  0E2B                     	;# 
  2897  0E90                     	;# 
  2898  0E91                     	;# 
  2899  0E92                     	;# 
  2900  0E94                     	;# 
  2901  0E95                     	;# 
  2902  0EA0                     	;# 
  2903  0EA1                     	;# 
  2904  0EA2                     	;# 
  2905  0EA3                     	;# 
  2906  0EA4                     	;# 
  2907  0EA5                     	;# 
  2908  0F0F                     	;# 
  2909  0F10                     	;# 
  2910  0F11                     	;# 
  2911  0F12                     	;# 
  2912  0F13                     	;# 
  2913  0F14                     	;# 
  2914  0F15                     	;# 
  2915  0F16                     	;# 
  2916  0F17                     	;# 
  2917  0F18                     	;# 
  2918  0F19                     	;# 
  2919  0F1A                     	;# 
  2920  0F1B                     	;# 
  2921  0F1C                     	;# 
  2922  0F1D                     	;# 
  2923  0F1E                     	;# 
  2924  0F1F                     	;# 
  2925  0F20                     	;# 
  2926  0F21                     	;# 
  2927  0F22                     	;# 
  2928  0F23                     	;# 
  2929  0F24                     	;# 
  2930  0F25                     	;# 
  2931  0F26                     	;# 
  2932  0F27                     	;# 
  2933  0F28                     	;# 
  2934  0F29                     	;# 
  2935  0F2A                     	;# 
  2936  0F2B                     	;# 
  2937  0F2C                     	;# 
  2938  0F2D                     	;# 
  2939  0F9E                     	;# 
  2940  0FE4                     	;# 
  2941  0FE5                     	;# 
  2942  0FE6                     	;# 
  2943  0FE7                     	;# 
  2944  0FE8                     	;# 
  2945  0FE9                     	;# 
  2946  0FEA                     	;# 
  2947  0FEB                     	;# 
  2948  0FED                     	;# 
  2949  0FEE                     	;# 
  2950  0FEF                     	;# 
  2951  0000                     	;# 
  2952  0001                     	;# 
  2953  0002                     	;# 
  2954  0003                     	;# 
  2955  0004                     	;# 
  2956  0005                     	;# 
  2957  0006                     	;# 
  2958  0007                     	;# 
  2959  0008                     	;# 
  2960  0009                     	;# 
  2961  000A                     	;# 
  2962  000B                     	;# 
  2963  000C                     	;# 
  2964  000E                     	;# 
  2965  0011                     	;# 
  2966  0012                     	;# 
  2967  0013                     	;# 
  2968  0015                     	;# 
  2969  0016                     	;# 
  2970  0016                     	;# 
  2971  0017                     	;# 
  2972  0018                     	;# 
  2973  0019                     	;# 
  2974  001A                     	;# 
  2975  001B                     	;# 
  2976  001C                     	;# 
  2977  008C                     	;# 
  2978  008E                     	;# 
  2979  0091                     	;# 
  2980  0092                     	;# 
  2981  0093                     	;# 
  2982  0095                     	;# 
  2983  0096                     	;# 
  2984  0097                     	;# 
  2985  0098                     	;# 
  2986  0099                     	;# 
  2987  009A                     	;# 
  2988  009B                     	;# 
  2989  009B                     	;# 
  2990  009C                     	;# 
  2991  009D                     	;# 
  2992  009E                     	;# 
  2993  009F                     	;# 
  2994  010C                     	;# 
  2995  010E                     	;# 
  2996  0111                     	;# 
  2997  0112                     	;# 
  2998  0113                     	;# 
  2999  0114                     	;# 
  3000  0115                     	;# 
  3001  0116                     	;# 
  3002  0117                     	;# 
  3003  0118                     	;# 
  3004  0119                     	;# 
  3005  011C                     	;# 
  3006  018C                     	;# 
  3007  018E                     	;# 
  3008  0191                     	;# 
  3009  0191                     	;# 
  3010  0192                     	;# 
  3011  0193                     	;# 
  3012  0193                     	;# 
  3013  0194                     	;# 
  3014  0195                     	;# 
  3015  0196                     	;# 
  3016  0197                     	;# 
  3017  0199                     	;# 
  3018  0199                     	;# 
  3019  0199                     	;# 
  3020  019A                     	;# 
  3021  019A                     	;# 
  3022  019A                     	;# 
  3023  019B                     	;# 
  3024  019B                     	;# 
  3025  019B                     	;# 
  3026  019B                     	;# 
  3027  019B                     	;# 
  3028  019C                     	;# 
  3029  019C                     	;# 
  3030  019C                     	;# 
  3031  019D                     	;# 
  3032  019D                     	;# 
  3033  019D                     	;# 
  3034  019E                     	;# 
  3035  019E                     	;# 
  3036  019E                     	;# 
  3037  019F                     	;# 
  3038  019F                     	;# 
  3039  019F                     	;# 
  3040  019F                     	;# 
  3041  019F                     	;# 
  3042  020C                     	;# 
  3043  020E                     	;# 
  3044  0211                     	;# 
  3045  0211                     	;# 
  3046  0212                     	;# 
  3047  0212                     	;# 
  3048  0213                     	;# 
  3049  0213                     	;# 
  3050  0214                     	;# 
  3051  0214                     	;# 
  3052  0215                     	;# 
  3053  0215                     	;# 
  3054  0215                     	;# 
  3055  0215                     	;# 
  3056  0216                     	;# 
  3057  0216                     	;# 
  3058  0217                     	;# 
  3059  0217                     	;# 
  3060  028C                     	;# 
  3061  028E                     	;# 
  3062  0291                     	;# 
  3063  0291                     	;# 
  3064  0292                     	;# 
  3065  0293                     	;# 
  3066  0293                     	;# 
  3067  0298                     	;# 
  3068  0298                     	;# 
  3069  0299                     	;# 
  3070  029A                     	;# 
  3071  029A                     	;# 
  3072  029E                     	;# 
  3073  030C                     	;# 
  3074  030E                     	;# 
  3075  038C                     	;# 
  3076  038E                     	;# 
  3077  0391                     	;# 
  3078  0392                     	;# 
  3079  0393                     	;# 
  3080  0397                     	;# 
  3081  0398                     	;# 
  3082  0399                     	;# 
  3083  0415                     	;# 
  3084  0416                     	;# 
  3085  0417                     	;# 
  3086  041C                     	;# 
  3087  041D                     	;# 
  3088  041E                     	;# 
  3089  0511                     	;# 
  3090  0515                     	;# 
  3091  0617                     	;# 
  3092  0618                     	;# 
  3093  0619                     	;# 
  3094  0619                     	;# 
  3095  061A                     	;# 
  3096  061B                     	;# 
  3097  061C                     	;# 
  3098  061C                     	;# 
  3099  0691                     	;# 
  3100  0692                     	;# 
  3101  0693                     	;# 
  3102  0694                     	;# 
  3103  0695                     	;# 
  3104  0696                     	;# 
  3105  0697                     	;# 
  3106  0698                     	;# 
  3107  0699                     	;# 
  3108  069A                     	;# 
  3109  069B                     	;# 
  3110  069C                     	;# 
  3111  069D                     	;# 
  3112  069E                     	;# 
  3113  069F                     	;# 
  3114  0E0F                     	;# 
  3115  0E10                     	;# 
  3116  0E11                     	;# 
  3117  0E12                     	;# 
  3118  0E13                     	;# 
  3119  0E14                     	;# 
  3120  0E15                     	;# 
  3121  0E17                     	;# 
  3122  0E20                     	;# 
  3123  0E21                     	;# 
  3124  0E22                     	;# 
  3125  0E24                     	;# 
  3126  0E25                     	;# 
  3127  0E28                     	;# 
  3128  0E29                     	;# 
  3129  0E2A                     	;# 
  3130  0E2B                     	;# 
  3131  0E90                     	;# 
  3132  0E91                     	;# 
  3133  0E92                     	;# 
  3134  0E94                     	;# 
  3135  0E95                     	;# 
  3136  0EA0                     	;# 
  3137  0EA1                     	;# 
  3138  0EA2                     	;# 
  3139  0EA3                     	;# 
  3140  0EA4                     	;# 
  3141  0EA5                     	;# 
  3142  0F0F                     	;# 
  3143  0F10                     	;# 
  3144  0F11                     	;# 
  3145  0F12                     	;# 
  3146  0F13                     	;# 
  3147  0F14                     	;# 
  3148  0F15                     	;# 
  3149  0F16                     	;# 
  3150  0F17                     	;# 
  3151  0F18                     	;# 
  3152  0F19                     	;# 
  3153  0F1A                     	;# 
  3154  0F1B                     	;# 
  3155  0F1C                     	;# 
  3156  0F1D                     	;# 
  3157  0F1E                     	;# 
  3158  0F1F                     	;# 
  3159  0F20                     	;# 
  3160  0F21                     	;# 
  3161  0F22                     	;# 
  3162  0F23                     	;# 
  3163  0F24                     	;# 
  3164  0F25                     	;# 
  3165  0F26                     	;# 
  3166  0F27                     	;# 
  3167  0F28                     	;# 
  3168  0F29                     	;# 
  3169  0F2A                     	;# 
  3170  0F2B                     	;# 
  3171  0F2C                     	;# 
  3172  0F2D                     	;# 
  3173  0F9E                     	;# 
  3174  0FE4                     	;# 
  3175  0FE5                     	;# 
  3176  0FE6                     	;# 
  3177  0FE7                     	;# 
  3178  0FE8                     	;# 
  3179  0FE9                     	;# 
  3180  0FEA                     	;# 
  3181  0FEB                     	;# 
  3182  0FED                     	;# 
  3183  0FEE                     	;# 
  3184  0FEF                     	;# 
  3185  0000                     	;# 
  3186  0001                     	;# 
  3187  0002                     	;# 
  3188  0003                     	;# 
  3189  0004                     	;# 
  3190  0005                     	;# 
  3191  0006                     	;# 
  3192  0007                     	;# 
  3193  0008                     	;# 
  3194  0009                     	;# 
  3195  000A                     	;# 
  3196  000B                     	;# 
  3197  000C                     	;# 
  3198  000E                     	;# 
  3199  0011                     	;# 
  3200  0012                     	;# 
  3201  0013                     	;# 
  3202  0015                     	;# 
  3203  0016                     	;# 
  3204  0016                     	;# 
  3205  0017                     	;# 
  3206  0018                     	;# 
  3207  0019                     	;# 
  3208  001A                     	;# 
  3209  001B                     	;# 
  3210  001C                     	;# 
  3211  008C                     	;# 
  3212  008E                     	;# 
  3213  0091                     	;# 
  3214  0092                     	;# 
  3215  0093                     	;# 
  3216  0095                     	;# 
  3217  0096                     	;# 
  3218  0097                     	;# 
  3219  0098                     	;# 
  3220  0099                     	;# 
  3221  009A                     	;# 
  3222  009B                     	;# 
  3223  009B                     	;# 
  3224  009C                     	;# 
  3225  009D                     	;# 
  3226  009E                     	;# 
  3227  009F                     	;# 
  3228  010C                     	;# 
  3229  010E                     	;# 
  3230  0111                     	;# 
  3231  0112                     	;# 
  3232  0113                     	;# 
  3233  0114                     	;# 
  3234  0115                     	;# 
  3235  0116                     	;# 
  3236  0117                     	;# 
  3237  0118                     	;# 
  3238  0119                     	;# 
  3239  011C                     	;# 
  3240  018C                     	;# 
  3241  018E                     	;# 
  3242  0191                     	;# 
  3243  0191                     	;# 
  3244  0192                     	;# 
  3245  0193                     	;# 
  3246  0193                     	;# 
  3247  0194                     	;# 
  3248  0195                     	;# 
  3249  0196                     	;# 
  3250  0197                     	;# 
  3251  0199                     	;# 
  3252  0199                     	;# 
  3253  0199                     	;# 
  3254  019A                     	;# 
  3255  019A                     	;# 
  3256  019A                     	;# 
  3257  019B                     	;# 
  3258  019B                     	;# 
  3259  019B                     	;# 
  3260  019B                     	;# 
  3261  019B                     	;# 
  3262  019C                     	;# 
  3263  019C                     	;# 
  3264  019C                     	;# 
  3265  019D                     	;# 
  3266  019D                     	;# 
  3267  019D                     	;# 
  3268  019E                     	;# 
  3269  019E                     	;# 
  3270  019E                     	;# 
  3271  019F                     	;# 
  3272  019F                     	;# 
  3273  019F                     	;# 
  3274  019F                     	;# 
  3275  019F                     	;# 
  3276  020C                     	;# 
  3277  020E                     	;# 
  3278  0211                     	;# 
  3279  0211                     	;# 
  3280  0212                     	;# 
  3281  0212                     	;# 
  3282  0213                     	;# 
  3283  0213                     	;# 
  3284  0214                     	;# 
  3285  0214                     	;# 
  3286  0215                     	;# 
  3287  0215                     	;# 
  3288  0215                     	;# 
  3289  0215                     	;# 
  3290  0216                     	;# 
  3291  0216                     	;# 
  3292  0217                     	;# 
  3293  0217                     	;# 
  3294  028C                     	;# 
  3295  028E                     	;# 
  3296  0291                     	;# 
  3297  0291                     	;# 
  3298  0292                     	;# 
  3299  0293                     	;# 
  3300  0293                     	;# 
  3301  0298                     	;# 
  3302  0298                     	;# 
  3303  0299                     	;# 
  3304  029A                     	;# 
  3305  029A                     	;# 
  3306  029E                     	;# 
  3307  030C                     	;# 
  3308  030E                     	;# 
  3309  038C                     	;# 
  3310  038E                     	;# 
  3311  0391                     	;# 
  3312  0392                     	;# 
  3313  0393                     	;# 
  3314  0397                     	;# 
  3315  0398                     	;# 
  3316  0399                     	;# 
  3317  0415                     	;# 
  3318  0416                     	;# 
  3319  0417                     	;# 
  3320  041C                     	;# 
  3321  041D                     	;# 
  3322  041E                     	;# 
  3323  0511                     	;# 
  3324  0515                     	;# 
  3325  0617                     	;# 
  3326  0618                     	;# 
  3327  0619                     	;# 
  3328  0619                     	;# 
  3329  061A                     	;# 
  3330  061B                     	;# 
  3331  061C                     	;# 
  3332  061C                     	;# 
  3333  0691                     	;# 
  3334  0692                     	;# 
  3335  0693                     	;# 
  3336  0694                     	;# 
  3337  0695                     	;# 
  3338  0696                     	;# 
  3339  0697                     	;# 
  3340  0698                     	;# 
  3341  0699                     	;# 
  3342  069A                     	;# 
  3343  069B                     	;# 
  3344  069C                     	;# 
  3345  069D                     	;# 
  3346  069E                     	;# 
  3347  069F                     	;# 
  3348  0E0F                     	;# 
  3349  0E10                     	;# 
  3350  0E11                     	;# 
  3351  0E12                     	;# 
  3352  0E13                     	;# 
  3353  0E14                     	;# 
  3354  0E15                     	;# 
  3355  0E17                     	;# 
  3356  0E20                     	;# 
  3357  0E21                     	;# 
  3358  0E22                     	;# 
  3359  0E24                     	;# 
  3360  0E25                     	;# 
  3361  0E28                     	;# 
  3362  0E29                     	;# 
  3363  0E2A                     	;# 
  3364  0E2B                     	;# 
  3365  0E90                     	;# 
  3366  0E91                     	;# 
  3367  0E92                     	;# 
  3368  0E94                     	;# 
  3369  0E95                     	;# 
  3370  0EA0                     	;# 
  3371  0EA1                     	;# 
  3372  0EA2                     	;# 
  3373  0EA3                     	;# 
  3374  0EA4                     	;# 
  3375  0EA5                     	;# 
  3376  0F0F                     	;# 
  3377  0F10                     	;# 
  3378  0F11                     	;# 
  3379  0F12                     	;# 
  3380  0F13                     	;# 
  3381  0F14                     	;# 
  3382  0F15                     	;# 
  3383  0F16                     	;# 
  3384  0F17                     	;# 
  3385  0F18                     	;# 
  3386  0F19                     	;# 
  3387  0F1A                     	;# 
  3388  0F1B                     	;# 
  3389  0F1C                     	;# 
  3390  0F1D                     	;# 
  3391  0F1E                     	;# 
  3392  0F1F                     	;# 
  3393  0F20                     	;# 
  3394  0F21                     	;# 
  3395  0F22                     	;# 
  3396  0F23                     	;# 
  3397  0F24                     	;# 
  3398  0F25                     	;# 
  3399  0F26                     	;# 
  3400  0F27                     	;# 
  3401  0F28                     	;# 
  3402  0F29                     	;# 
  3403  0F2A                     	;# 
  3404  0F2B                     	;# 
  3405  0F2C                     	;# 
  3406  0F2D                     	;# 
  3407  0F9E                     	;# 
  3408  0FE4                     	;# 
  3409  0FE5                     	;# 
  3410  0FE6                     	;# 
  3411  0FE7                     	;# 
  3412  0FE8                     	;# 
  3413  0FE9                     	;# 
  3414  0FEA                     	;# 
  3415  0FEB                     	;# 
  3416  0FED                     	;# 
  3417  0FEE                     	;# 
  3418  0FEF                     	;# 
  3419                           
  3420                           	psect	idataBANK0
  3421  16EF                     __pidataBANK0:	
  3422                           
  3423                           ;initializer for _duty_inc
  3424  16EF  3428               	retlw	40
  3425  16F0  3400               	retlw	0
  3426                           
  3427                           ;initializer for _lock_isr
  3428  16F1  3401               	retlw	1
  3429                           
  3430                           ;initializer for _init_required
  3431  16F2  3401               	retlw	1
  3432                           
  3433                           	psect	idataBANK1
  3434  1765                     __pidataBANK1:	
  3435                           
  3436                           ;initializer for _duty_count_down_max
  3437  1765  3464               	retlw	100
  3438  1766  3400               	retlw	0
  3439                           
  3440                           ;initializer for _duty_pwm_dec
  3441  1767  3405               	retlw	5
  3442  1768  3400               	retlw	0
  3443                           
  3444                           ;initializer for _duty_count_up_max
  3445  1769  3405               	retlw	5
  3446  176A  3400               	retlw	0
  3447                           
  3448                           ;initializer for _duty_pwm_inc
  3449  176B  3404               	retlw	4
  3450  176C  3400               	retlw	0
  3451                           
  3452                           	psect	stringtext1
  3453  0071                     __pstringtext1:	
  3454  0071                     _v_table:	
  3455  0071  3400               	retlw	0
  3456  0072  3400               	retlw	0
  3457  0073  3401               	retlw	1
  3458  0074  3400               	retlw	0
  3459  0075  3402               	retlw	2
  3460  0076  3400               	retlw	0
  3461  0077  3402               	retlw	2
  3462  0078  3400               	retlw	0
  3463  0079  3403               	retlw	3
  3464  007A  3400               	retlw	0
  3465  007B  3404               	retlw	4
  3466  007C  3400               	retlw	0
  3467  007D  3405               	retlw	5
  3468  007E  3400               	retlw	0
  3469  007F  3406               	retlw	6
  3470  0080  3400               	retlw	0
  3471  0081  3407               	retlw	7
  3472  0082  3400               	retlw	0
  3473  0083  3407               	retlw	7
  3474  0084  3400               	retlw	0
  3475  0085  3408               	retlw	8
  3476  0086  3400               	retlw	0
  3477  0087  3409               	retlw	9
  3478  0088  3400               	retlw	0
  3479  0089  340A               	retlw	10
  3480  008A  3400               	retlw	0
  3481  008B  340B               	retlw	11
  3482  008C  3400               	retlw	0
  3483  008D  340B               	retlw	11
  3484  008E  3400               	retlw	0
  3485  008F  340C               	retlw	12
  3486  0090  3400               	retlw	0
  3487  0091  340D               	retlw	13
  3488  0092  3400               	retlw	0
  3489  0093  340E               	retlw	14
  3490  0094  3400               	retlw	0
  3491  0095  340F               	retlw	15
  3492  0096  3400               	retlw	0
  3493  0097  3410               	retlw	16
  3494  0098  3400               	retlw	0
  3495  0099  3410               	retlw	16
  3496  009A  3400               	retlw	0
  3497  009B  3411               	retlw	17
  3498  009C  3400               	retlw	0
  3499  009D  3412               	retlw	18
  3500  009E  3400               	retlw	0
  3501  009F  3413               	retlw	19
  3502  00A0  3400               	retlw	0
  3503  00A1  3414               	retlw	20
  3504  00A2  3400               	retlw	0
  3505  00A3  3415               	retlw	21
  3506  00A4  3400               	retlw	0
  3507  00A5  3415               	retlw	21
  3508  00A6  3400               	retlw	0
  3509  00A7  3416               	retlw	22
  3510  00A8  3400               	retlw	0
  3511  00A9  3417               	retlw	23
  3512  00AA  3400               	retlw	0
  3513  00AB  3418               	retlw	24
  3514  00AC  3400               	retlw	0
  3515  00AD  3419               	retlw	25
  3516  00AE  3400               	retlw	0
  3517  00AF  3419               	retlw	25
  3518  00B0  3400               	retlw	0
  3519  00B1  341A               	retlw	26
  3520  00B2  3400               	retlw	0
  3521  00B3  341B               	retlw	27
  3522  00B4  3400               	retlw	0
  3523  00B5  341C               	retlw	28
  3524  00B6  3400               	retlw	0
  3525  00B7  341D               	retlw	29
  3526  00B8  3400               	retlw	0
  3527  00B9  341E               	retlw	30
  3528  00BA  3400               	retlw	0
  3529  00BB  341E               	retlw	30
  3530  00BC  3400               	retlw	0
  3531  00BD  341F               	retlw	31
  3532  00BE  3400               	retlw	0
  3533  00BF  3420               	retlw	32
  3534  00C0  3400               	retlw	0
  3535  00C1  3421               	retlw	33
  3536  00C2  3400               	retlw	0
  3537  00C3  3422               	retlw	34
  3538  00C4  3400               	retlw	0
  3539  00C5  3422               	retlw	34
  3540  00C6  3400               	retlw	0
  3541  00C7  3423               	retlw	35
  3542  00C8  3400               	retlw	0
  3543  00C9  3424               	retlw	36
  3544  00CA  3400               	retlw	0
  3545  00CB  3425               	retlw	37
  3546  00CC  3400               	retlw	0
  3547  00CD  3426               	retlw	38
  3548  00CE  3400               	retlw	0
  3549  00CF  3427               	retlw	39
  3550  00D0  3400               	retlw	0
  3551  00D1  3427               	retlw	39
  3552  00D2  3400               	retlw	0
  3553  00D3  3428               	retlw	40
  3554  00D4  3400               	retlw	0
  3555  00D5  3429               	retlw	41
  3556  00D6  3400               	retlw	0
  3557  00D7  342A               	retlw	42
  3558  00D8  3400               	retlw	0
  3559  00D9  342B               	retlw	43
  3560  00DA  3400               	retlw	0
  3561  00DB  342C               	retlw	44
  3562  00DC  3400               	retlw	0
  3563  00DD  342C               	retlw	44
  3564  00DE  3400               	retlw	0
  3565  00DF  342D               	retlw	45
  3566  00E0  3400               	retlw	0
  3567  00E1  342E               	retlw	46
  3568  00E2  3400               	retlw	0
  3569  00E3  342F               	retlw	47
  3570  00E4  3400               	retlw	0
  3571  00E5  3430               	retlw	48
  3572  00E6  3400               	retlw	0
  3573  00E7  3430               	retlw	48
  3574  00E8  3400               	retlw	0
  3575  00E9  3431               	retlw	49
  3576  00EA  3400               	retlw	0
  3577  00EB  3432               	retlw	50
  3578  00EC  3400               	retlw	0
  3579  00ED  3433               	retlw	51
  3580  00EE  3400               	retlw	0
  3581  00EF  3434               	retlw	52
  3582  00F0  3400               	retlw	0
  3583  00F1  3435               	retlw	53
  3584  00F2  3400               	retlw	0
  3585  00F3  3435               	retlw	53
  3586  00F4  3400               	retlw	0
  3587  00F5  3436               	retlw	54
  3588  00F6  3400               	retlw	0
  3589  00F7  3437               	retlw	55
  3590  00F8  3400               	retlw	0
  3591  00F9  3438               	retlw	56
  3592  00FA  3400               	retlw	0
  3593  00FB  3439               	retlw	57
  3594  00FC  3400               	retlw	0
  3595  00FD  3439               	retlw	57
  3596  00FE  3400               	retlw	0
  3597  00FF  343A               	retlw	58
  3598  0100  3400               	retlw	0
  3599  0101  343B               	retlw	59
  3600  0102  3400               	retlw	0
  3601  0103  343C               	retlw	60
  3602  0104  3400               	retlw	0
  3603  0105  343D               	retlw	61
  3604  0106  3400               	retlw	0
  3605  0107  343E               	retlw	62
  3606  0108  3400               	retlw	0
  3607  0109  343E               	retlw	62
  3608  010A  3400               	retlw	0
  3609  010B  343F               	retlw	63
  3610  010C  3400               	retlw	0
  3611  010D  3440               	retlw	64
  3612  010E  3400               	retlw	0
  3613  010F  3441               	retlw	65
  3614  0110  3400               	retlw	0
  3615  0111  3442               	retlw	66
  3616  0112  3400               	retlw	0
  3617  0113  3443               	retlw	67
  3618  0114  3400               	retlw	0
  3619  0115  3443               	retlw	67
  3620  0116  3400               	retlw	0
  3621  0117  3444               	retlw	68
  3622  0118  3400               	retlw	0
  3623  0119  3445               	retlw	69
  3624  011A  3400               	retlw	0
  3625  011B  3446               	retlw	70
  3626  011C  3400               	retlw	0
  3627  011D  3447               	retlw	71
  3628  011E  3400               	retlw	0
  3629  011F  3447               	retlw	71
  3630  0120  3400               	retlw	0
  3631  0121  3448               	retlw	72
  3632  0122  3400               	retlw	0
  3633  0123  3449               	retlw	73
  3634  0124  3400               	retlw	0
  3635  0125  344A               	retlw	74
  3636  0126  3400               	retlw	0
  3637  0127  344B               	retlw	75
  3638  0128  3400               	retlw	0
  3639  0129  344C               	retlw	76
  3640  012A  3400               	retlw	0
  3641  012B  344C               	retlw	76
  3642  012C  3400               	retlw	0
  3643  012D  344D               	retlw	77
  3644  012E  3400               	retlw	0
  3645  012F  344E               	retlw	78
  3646  0130  3400               	retlw	0
  3647  0131  344F               	retlw	79
  3648  0132  3400               	retlw	0
  3649  0133  3450               	retlw	80
  3650  0134  3400               	retlw	0
  3651  0135  3450               	retlw	80
  3652  0136  3400               	retlw	0
  3653  0137  3451               	retlw	81
  3654  0138  3400               	retlw	0
  3655  0139  3452               	retlw	82
  3656  013A  3400               	retlw	0
  3657  013B  3453               	retlw	83
  3658  013C  3400               	retlw	0
  3659  013D  3454               	retlw	84
  3660  013E  3400               	retlw	0
  3661  013F  3455               	retlw	85
  3662  0140  3400               	retlw	0
  3663  0141  3455               	retlw	85
  3664  0142  3400               	retlw	0
  3665  0143  3456               	retlw	86
  3666  0144  3400               	retlw	0
  3667  0145  3457               	retlw	87
  3668  0146  3400               	retlw	0
  3669  0147  3458               	retlw	88
  3670  0148  3400               	retlw	0
  3671  0149  3459               	retlw	89
  3672  014A  3400               	retlw	0
  3673  014B  3459               	retlw	89
  3674  014C  3400               	retlw	0
  3675  014D  345A               	retlw	90
  3676  014E  3400               	retlw	0
  3677  014F  345B               	retlw	91
  3678  0150  3400               	retlw	0
  3679  0151  345C               	retlw	92
  3680  0152  3400               	retlw	0
  3681  0153  345D               	retlw	93
  3682  0154  3400               	retlw	0
  3683  0155  345E               	retlw	94
  3684  0156  3400               	retlw	0
  3685  0157  345E               	retlw	94
  3686  0158  3400               	retlw	0
  3687  0159  345F               	retlw	95
  3688  015A  3400               	retlw	0
  3689  015B  3460               	retlw	96
  3690  015C  3400               	retlw	0
  3691  015D  3461               	retlw	97
  3692  015E  3400               	retlw	0
  3693  015F  3462               	retlw	98
  3694  0160  3400               	retlw	0
  3695  0161  3463               	retlw	99
  3696  0162  3400               	retlw	0
  3697  0163  3463               	retlw	99
  3698  0164  3400               	retlw	0
  3699  0165  3464               	retlw	100
  3700  0166  3400               	retlw	0
  3701  0167  3465               	retlw	101
  3702  0168  3400               	retlw	0
  3703  0169  3466               	retlw	102
  3704  016A  3400               	retlw	0
  3705  016B  3467               	retlw	103
  3706  016C  3400               	retlw	0
  3707  016D  3467               	retlw	103
  3708  016E  3400               	retlw	0
  3709  016F  3468               	retlw	104
  3710  0170  3400               	retlw	0
  3711  0171  3469               	retlw	105
  3712  0172  3400               	retlw	0
  3713  0173  346A               	retlw	106
  3714  0174  3400               	retlw	0
  3715  0175  346B               	retlw	107
  3716  0176  3400               	retlw	0
  3717  0177  346C               	retlw	108
  3718  0178  3400               	retlw	0
  3719  0179  346C               	retlw	108
  3720  017A  3400               	retlw	0
  3721  017B  346D               	retlw	109
  3722  017C  3400               	retlw	0
  3723  017D  346E               	retlw	110
  3724  017E  3400               	retlw	0
  3725  017F  346F               	retlw	111
  3726  0180  3400               	retlw	0
  3727  0181  3470               	retlw	112
  3728  0182  3400               	retlw	0
  3729  0183  3470               	retlw	112
  3730  0184  3400               	retlw	0
  3731  0185  3471               	retlw	113
  3732  0186  3400               	retlw	0
  3733  0187  3472               	retlw	114
  3734  0188  3400               	retlw	0
  3735  0189  3473               	retlw	115
  3736  018A  3400               	retlw	0
  3737  018B  3474               	retlw	116
  3738  018C  3400               	retlw	0
  3739  018D  3475               	retlw	117
  3740  018E  3400               	retlw	0
  3741  018F  3475               	retlw	117
  3742  0190  3400               	retlw	0
  3743  0191  3476               	retlw	118
  3744  0192  3400               	retlw	0
  3745  0193  3477               	retlw	119
  3746  0194  3400               	retlw	0
  3747  0195  3478               	retlw	120
  3748  0196  3400               	retlw	0
  3749  0197  3479               	retlw	121
  3750  0198  3400               	retlw	0
  3751  0199  347A               	retlw	122
  3752  019A  3400               	retlw	0
  3753  019B  347A               	retlw	122
  3754  019C  3400               	retlw	0
  3755  019D  347B               	retlw	123
  3756  019E  3400               	retlw	0
  3757  019F  347C               	retlw	124
  3758  01A0  3400               	retlw	0
  3759  01A1  347D               	retlw	125
  3760  01A2  3400               	retlw	0
  3761  01A3  347E               	retlw	126
  3762  01A4  3400               	retlw	0
  3763  01A5  347E               	retlw	126
  3764  01A6  3400               	retlw	0
  3765  01A7  347F               	retlw	127
  3766  01A8  3400               	retlw	0
  3767  01A9  3480               	retlw	128
  3768  01AA  3400               	retlw	0
  3769  01AB  3481               	retlw	129
  3770  01AC  3400               	retlw	0
  3771  01AD  3482               	retlw	130
  3772  01AE  3400               	retlw	0
  3773  01AF  3483               	retlw	131
  3774  01B0  3400               	retlw	0
  3775  01B1  3483               	retlw	131
  3776  01B2  3400               	retlw	0
  3777  01B3  3484               	retlw	132
  3778  01B4  3400               	retlw	0
  3779  01B5  3485               	retlw	133
  3780  01B6  3400               	retlw	0
  3781  01B7  3486               	retlw	134
  3782  01B8  3400               	retlw	0
  3783  01B9  3487               	retlw	135
  3784  01BA  3400               	retlw	0
  3785  01BB  3487               	retlw	135
  3786  01BC  3400               	retlw	0
  3787  01BD  3488               	retlw	136
  3788  01BE  3400               	retlw	0
  3789  01BF  3489               	retlw	137
  3790  01C0  3400               	retlw	0
  3791  01C1  348A               	retlw	138
  3792  01C2  3400               	retlw	0
  3793  01C3  348B               	retlw	139
  3794  01C4  3400               	retlw	0
  3795  01C5  348C               	retlw	140
  3796  01C6  3400               	retlw	0
  3797  01C7  348C               	retlw	140
  3798  01C8  3400               	retlw	0
  3799  01C9  348D               	retlw	141
  3800  01CA  3400               	retlw	0
  3801  01CB  348E               	retlw	142
  3802  01CC  3400               	retlw	0
  3803  01CD  348F               	retlw	143
  3804  01CE  3400               	retlw	0
  3805  01CF  3490               	retlw	144
  3806  01D0  3400               	retlw	0
  3807  01D1  3491               	retlw	145
  3808  01D2  3400               	retlw	0
  3809  01D3  3491               	retlw	145
  3810  01D4  3400               	retlw	0
  3811  01D5  3492               	retlw	146
  3812  01D6  3400               	retlw	0
  3813  01D7  3493               	retlw	147
  3814  01D8  3400               	retlw	0
  3815  01D9  3494               	retlw	148
  3816  01DA  3400               	retlw	0
  3817  01DB  3495               	retlw	149
  3818  01DC  3400               	retlw	0
  3819  01DD  3495               	retlw	149
  3820  01DE  3400               	retlw	0
  3821  01DF  3496               	retlw	150
  3822  01E0  3400               	retlw	0
  3823  01E1  3497               	retlw	151
  3824  01E2  3400               	retlw	0
  3825  01E3  3498               	retlw	152
  3826  01E4  3400               	retlw	0
  3827  01E5  3499               	retlw	153
  3828  01E6  3400               	retlw	0
  3829  01E7  349A               	retlw	154
  3830  01E8  3400               	retlw	0
  3831  01E9  349A               	retlw	154
  3832  01EA  3400               	retlw	0
  3833  01EB  349B               	retlw	155
  3834  01EC  3400               	retlw	0
  3835  01ED  349C               	retlw	156
  3836  01EE  3400               	retlw	0
  3837  01EF  349D               	retlw	157
  3838  01F0  3400               	retlw	0
  3839  01F1  349E               	retlw	158
  3840  01F2  3400               	retlw	0
  3841  01F3  349E               	retlw	158
  3842  01F4  3400               	retlw	0
  3843  01F5  349F               	retlw	159
  3844  01F6  3400               	retlw	0
  3845  01F7  34A0               	retlw	160
  3846  01F8  3400               	retlw	0
  3847  01F9  34A1               	retlw	161
  3848  01FA  3400               	retlw	0
  3849  01FB  34A2               	retlw	162
  3850  01FC  3400               	retlw	0
  3851  01FD  34A3               	retlw	163
  3852  01FE  3400               	retlw	0
  3853  01FF  34A3               	retlw	163
  3854  0200  3400               	retlw	0
  3855  0201  34A4               	retlw	164
  3856  0202  3400               	retlw	0
  3857  0203  34A5               	retlw	165
  3858  0204  3400               	retlw	0
  3859  0205  34A6               	retlw	166
  3860  0206  3400               	retlw	0
  3861  0207  34A7               	retlw	167
  3862  0208  3400               	retlw	0
  3863  0209  34A7               	retlw	167
  3864  020A  3400               	retlw	0
  3865  020B  34A8               	retlw	168
  3866  020C  3400               	retlw	0
  3867  020D  34A9               	retlw	169
  3868  020E  3400               	retlw	0
  3869  020F  34AA               	retlw	170
  3870  0210  3400               	retlw	0
  3871  0211  34AB               	retlw	171
  3872  0212  3400               	retlw	0
  3873  0213  34AC               	retlw	172
  3874  0214  3400               	retlw	0
  3875  0215  34AC               	retlw	172
  3876  0216  3400               	retlw	0
  3877  0217  34AD               	retlw	173
  3878  0218  3400               	retlw	0
  3879  0219  34AE               	retlw	174
  3880  021A  3400               	retlw	0
  3881  021B  34AF               	retlw	175
  3882  021C  3400               	retlw	0
  3883  021D  34B0               	retlw	176
  3884  021E  3400               	retlw	0
  3885  021F  34B1               	retlw	177
  3886  0220  3400               	retlw	0
  3887  0221  34B1               	retlw	177
  3888  0222  3400               	retlw	0
  3889  0223  34B2               	retlw	178
  3890  0224  3400               	retlw	0
  3891  0225  34B3               	retlw	179
  3892  0226  3400               	retlw	0
  3893  0227  34B4               	retlw	180
  3894  0228  3400               	retlw	0
  3895  0229  34B5               	retlw	181
  3896  022A  3400               	retlw	0
  3897  022B  34B5               	retlw	181
  3898  022C  3400               	retlw	0
  3899  022D  34B6               	retlw	182
  3900  022E  3400               	retlw	0
  3901  022F  34B7               	retlw	183
  3902  0230  3400               	retlw	0
  3903  0231  34B8               	retlw	184
  3904  0232  3400               	retlw	0
  3905  0233  34B9               	retlw	185
  3906  0234  3400               	retlw	0
  3907  0235  34BA               	retlw	186
  3908  0236  3400               	retlw	0
  3909  0237  34BA               	retlw	186
  3910  0238  3400               	retlw	0
  3911  0239  34BB               	retlw	187
  3912  023A  3400               	retlw	0
  3913  023B  34BC               	retlw	188
  3914  023C  3400               	retlw	0
  3915  023D  34BD               	retlw	189
  3916  023E  3400               	retlw	0
  3917  023F  34BE               	retlw	190
  3918  0240  3400               	retlw	0
  3919  0241  34BE               	retlw	190
  3920  0242  3400               	retlw	0
  3921  0243  34BF               	retlw	191
  3922  0244  3400               	retlw	0
  3923  0245  34C0               	retlw	192
  3924  0246  3400               	retlw	0
  3925  0247  34C1               	retlw	193
  3926  0248  3400               	retlw	0
  3927  0249  34C2               	retlw	194
  3928  024A  3400               	retlw	0
  3929  024B  34C3               	retlw	195
  3930  024C  3400               	retlw	0
  3931  024D  34C3               	retlw	195
  3932  024E  3400               	retlw	0
  3933  024F  34C4               	retlw	196
  3934  0250  3400               	retlw	0
  3935  0251  34C5               	retlw	197
  3936  0252  3400               	retlw	0
  3937  0253  34C6               	retlw	198
  3938  0254  3400               	retlw	0
  3939  0255  34C7               	retlw	199
  3940  0256  3400               	retlw	0
  3941  0257  34C8               	retlw	200
  3942  0258  3400               	retlw	0
  3943  0259  34C8               	retlw	200
  3944  025A  3400               	retlw	0
  3945  025B  34C9               	retlw	201
  3946  025C  3400               	retlw	0
  3947  025D  34CA               	retlw	202
  3948  025E  3400               	retlw	0
  3949  025F  34CB               	retlw	203
  3950  0260  3400               	retlw	0
  3951  0261  34CC               	retlw	204
  3952  0262  3400               	retlw	0
  3953  0263  34CC               	retlw	204
  3954  0264  3400               	retlw	0
  3955  0265  34CD               	retlw	205
  3956  0266  3400               	retlw	0
  3957  0267  34CE               	retlw	206
  3958  0268  3400               	retlw	0
  3959  0269  34CF               	retlw	207
  3960  026A  3400               	retlw	0
  3961  026B  34D0               	retlw	208
  3962  026C  3400               	retlw	0
  3963  026D  34D1               	retlw	209
  3964  026E  3400               	retlw	0
  3965  026F  34D1               	retlw	209
  3966  0270  3400               	retlw	0
  3967  0271  34D2               	retlw	210
  3968  0272  3400               	retlw	0
  3969  0273  34D3               	retlw	211
  3970  0274  3400               	retlw	0
  3971  0275  34D4               	retlw	212
  3972  0276  3400               	retlw	0
  3973  0277  34D5               	retlw	213
  3974  0278  3400               	retlw	0
  3975  0279  34D5               	retlw	213
  3976  027A  3400               	retlw	0
  3977  027B  34D6               	retlw	214
  3978  027C  3400               	retlw	0
  3979  027D  34D7               	retlw	215
  3980  027E  3400               	retlw	0
  3981  027F  34D8               	retlw	216
  3982  0280  3400               	retlw	0
  3983  0281  34D9               	retlw	217
  3984  0282  3400               	retlw	0
  3985  0283  34DA               	retlw	218
  3986  0284  3400               	retlw	0
  3987  0285  34DA               	retlw	218
  3988  0286  3400               	retlw	0
  3989  0287  34DB               	retlw	219
  3990  0288  3400               	retlw	0
  3991  0289  34DC               	retlw	220
  3992  028A  3400               	retlw	0
  3993  028B  34DD               	retlw	221
  3994  028C  3400               	retlw	0
  3995  028D  34DE               	retlw	222
  3996  028E  3400               	retlw	0
  3997  028F  34DF               	retlw	223
  3998  0290  3400               	retlw	0
  3999  0291  34DF               	retlw	223
  4000  0292  3400               	retlw	0
  4001  0293  34E0               	retlw	224
  4002  0294  3400               	retlw	0
  4003  0295  34E1               	retlw	225
  4004  0296  3400               	retlw	0
  4005  0297  34E2               	retlw	226
  4006  0298  3400               	retlw	0
  4007  0299  34E3               	retlw	227
  4008  029A  3400               	retlw	0
  4009  029B  34E3               	retlw	227
  4010  029C  3400               	retlw	0
  4011  029D  34E4               	retlw	228
  4012  029E  3400               	retlw	0
  4013  029F  34E5               	retlw	229
  4014  02A0  3400               	retlw	0
  4015  02A1  34E6               	retlw	230
  4016  02A2  3400               	retlw	0
  4017  02A3  34E7               	retlw	231
  4018  02A4  3400               	retlw	0
  4019  02A5  34E8               	retlw	232
  4020  02A6  3400               	retlw	0
  4021  02A7  34E8               	retlw	232
  4022  02A8  3400               	retlw	0
  4023  02A9  34E9               	retlw	233
  4024  02AA  3400               	retlw	0
  4025  02AB  34EA               	retlw	234
  4026  02AC  3400               	retlw	0
  4027  02AD  34EB               	retlw	235
  4028  02AE  3400               	retlw	0
  4029  02AF  34EC               	retlw	236
  4030  02B0  3400               	retlw	0
  4031  02B1  34EC               	retlw	236
  4032  02B2  3400               	retlw	0
  4033  02B3  34ED               	retlw	237
  4034  02B4  3400               	retlw	0
  4035  02B5  34EE               	retlw	238
  4036  02B6  3400               	retlw	0
  4037  02B7  34EF               	retlw	239
  4038  02B8  3400               	retlw	0
  4039  02B9  34F0               	retlw	240
  4040  02BA  3400               	retlw	0
  4041  02BB  34F1               	retlw	241
  4042  02BC  3400               	retlw	0
  4043  02BD  34F1               	retlw	241
  4044  02BE  3400               	retlw	0
  4045  02BF  34F2               	retlw	242
  4046  02C0  3400               	retlw	0
  4047  02C1  34F3               	retlw	243
  4048  02C2  3400               	retlw	0
  4049  02C3  34F4               	retlw	244
  4050  02C4  3400               	retlw	0
  4051  02C5  34F5               	retlw	245
  4052  02C6  3400               	retlw	0
  4053  02C7  34F6               	retlw	246
  4054  02C8  3400               	retlw	0
  4055  02C9  34F6               	retlw	246
  4056  02CA  3400               	retlw	0
  4057  02CB  34F7               	retlw	247
  4058  02CC  3400               	retlw	0
  4059  02CD  34F8               	retlw	248
  4060  02CE  3400               	retlw	0
  4061  02CF  34F9               	retlw	249
  4062  02D0  3400               	retlw	0
  4063  02D1  34FA               	retlw	250
  4064  02D2  3400               	retlw	0
  4065  02D3  34FA               	retlw	250
  4066  02D4  3400               	retlw	0
  4067  02D5  34FB               	retlw	251
  4068  02D6  3400               	retlw	0
  4069  02D7  34FC               	retlw	252
  4070  02D8  3400               	retlw	0
  4071  02D9  34FD               	retlw	253
  4072  02DA  3400               	retlw	0
  4073  02DB  34FE               	retlw	254
  4074  02DC  3400               	retlw	0
  4075  02DD  34FF               	retlw	255
  4076  02DE  3400               	retlw	0
  4077  02DF  34FF               	retlw	255
  4078  02E0  3400               	retlw	0
  4079  02E1  3400               	retlw	0
  4080  02E2  3401               	retlw	1
  4081  02E3  3401               	retlw	1
  4082  02E4  3401               	retlw	1
  4083  02E5  3402               	retlw	2
  4084  02E6  3401               	retlw	1
  4085  02E7  3403               	retlw	3
  4086  02E8  3401               	retlw	1
  4087  02E9  3403               	retlw	3
  4088  02EA  3401               	retlw	1
  4089  02EB  3404               	retlw	4
  4090  02EC  3401               	retlw	1
  4091  02ED  3405               	retlw	5
  4092  02EE  3401               	retlw	1
  4093  02EF  3406               	retlw	6
  4094  02F0  3401               	retlw	1
  4095  02F1  3407               	retlw	7
  4096  02F2  3401               	retlw	1
  4097  02F3  3408               	retlw	8
  4098  02F4  3401               	retlw	1
  4099  02F5  3408               	retlw	8
  4100  02F6  3401               	retlw	1
  4101  02F7  3409               	retlw	9
  4102  02F8  3401               	retlw	1
  4103  02F9  340A               	retlw	10
  4104  02FA  3401               	retlw	1
  4105  02FB  340B               	retlw	11
  4106  02FC  3401               	retlw	1
  4107  02FD  340C               	retlw	12
  4108  02FE  3401               	retlw	1
  4109  02FF  340C               	retlw	12
  4110  0300  3401               	retlw	1
  4111  0301  340D               	retlw	13
  4112  0302  3401               	retlw	1
  4113  0303  340E               	retlw	14
  4114  0304  3401               	retlw	1
  4115  0305  340F               	retlw	15
  4116  0306  3401               	retlw	1
  4117  0307  3410               	retlw	16
  4118  0308  3401               	retlw	1
  4119  0309  3411               	retlw	17
  4120  030A  3401               	retlw	1
  4121  030B  3411               	retlw	17
  4122  030C  3401               	retlw	1
  4123  030D  3412               	retlw	18
  4124  030E  3401               	retlw	1
  4125  030F  3413               	retlw	19
  4126  0310  3401               	retlw	1
  4127  0311  3414               	retlw	20
  4128  0312  3401               	retlw	1
  4129  0313  3415               	retlw	21
  4130  0314  3401               	retlw	1
  4131  0315  3416               	retlw	22
  4132  0316  3401               	retlw	1
  4133  0317  3416               	retlw	22
  4134  0318  3401               	retlw	1
  4135  0319  3417               	retlw	23
  4136  031A  3401               	retlw	1
  4137  031B  3418               	retlw	24
  4138  031C  3401               	retlw	1
  4139  031D  3419               	retlw	25
  4140  031E  3401               	retlw	1
  4141  031F  341A               	retlw	26
  4142  0320  3401               	retlw	1
  4143  0321  341A               	retlw	26
  4144  0322  3401               	retlw	1
  4145  0323  341B               	retlw	27
  4146  0324  3401               	retlw	1
  4147  0325  341C               	retlw	28
  4148  0326  3401               	retlw	1
  4149  0327  341D               	retlw	29
  4150  0328  3401               	retlw	1
  4151  0329  341E               	retlw	30
  4152  032A  3401               	retlw	1
  4153  032B  341F               	retlw	31
  4154  032C  3401               	retlw	1
  4155  032D  341F               	retlw	31
  4156  032E  3401               	retlw	1
  4157  032F  3420               	retlw	32
  4158  0330  3401               	retlw	1
  4159  0331  3421               	retlw	33
  4160  0332  3401               	retlw	1
  4161  0333  3422               	retlw	34
  4162  0334  3401               	retlw	1
  4163  0335  3423               	retlw	35
  4164  0336  3401               	retlw	1
  4165  0337  3423               	retlw	35
  4166  0338  3401               	retlw	1
  4167  0339  3424               	retlw	36
  4168  033A  3401               	retlw	1
  4169  033B  3425               	retlw	37
  4170  033C  3401               	retlw	1
  4171  033D  3426               	retlw	38
  4172  033E  3401               	retlw	1
  4173  033F  3427               	retlw	39
  4174  0340  3401               	retlw	1
  4175  0341  3428               	retlw	40
  4176  0342  3401               	retlw	1
  4177  0343  3428               	retlw	40
  4178  0344  3401               	retlw	1
  4179  0345  3429               	retlw	41
  4180  0346  3401               	retlw	1
  4181  0347  342A               	retlw	42
  4182  0348  3401               	retlw	1
  4183  0349  342B               	retlw	43
  4184  034A  3401               	retlw	1
  4185  034B  342C               	retlw	44
  4186  034C  3401               	retlw	1
  4187  034D  342D               	retlw	45
  4188  034E  3401               	retlw	1
  4189  034F  342D               	retlw	45
  4190  0350  3401               	retlw	1
  4191  0351  342E               	retlw	46
  4192  0352  3401               	retlw	1
  4193  0353  342F               	retlw	47
  4194  0354  3401               	retlw	1
  4195  0355  3430               	retlw	48
  4196  0356  3401               	retlw	1
  4197  0357  3431               	retlw	49
  4198  0358  3401               	retlw	1
  4199  0359  3431               	retlw	49
  4200  035A  3401               	retlw	1
  4201  035B  3432               	retlw	50
  4202  035C  3401               	retlw	1
  4203  035D  3433               	retlw	51
  4204  035E  3401               	retlw	1
  4205  035F  3434               	retlw	52
  4206  0360  3401               	retlw	1
  4207  0361  3435               	retlw	53
  4208  0362  3401               	retlw	1
  4209  0363  3436               	retlw	54
  4210  0364  3401               	retlw	1
  4211  0365  3436               	retlw	54
  4212  0366  3401               	retlw	1
  4213  0367  3437               	retlw	55
  4214  0368  3401               	retlw	1
  4215  0369  3438               	retlw	56
  4216  036A  3401               	retlw	1
  4217  036B  3439               	retlw	57
  4218  036C  3401               	retlw	1
  4219  036D  343A               	retlw	58
  4220  036E  3401               	retlw	1
  4221  036F  343A               	retlw	58
  4222  0370  3401               	retlw	1
  4223  0371  343B               	retlw	59
  4224  0372  3401               	retlw	1
  4225  0373  343C               	retlw	60
  4226  0374  3401               	retlw	1
  4227  0375  343D               	retlw	61
  4228  0376  3401               	retlw	1
  4229  0377  343E               	retlw	62
  4230  0378  3401               	retlw	1
  4231  0379  343F               	retlw	63
  4232  037A  3401               	retlw	1
  4233  037B  343F               	retlw	63
  4234  037C  3401               	retlw	1
  4235  037D  3440               	retlw	64
  4236  037E  3401               	retlw	1
  4237  037F  3441               	retlw	65
  4238  0380  3401               	retlw	1
  4239  0381  3442               	retlw	66
  4240  0382  3401               	retlw	1
  4241  0383  3443               	retlw	67
  4242  0384  3401               	retlw	1
  4243  0385  3444               	retlw	68
  4244  0386  3401               	retlw	1
  4245  0387  3444               	retlw	68
  4246  0388  3401               	retlw	1
  4247  0389  3445               	retlw	69
  4248  038A  3401               	retlw	1
  4249  038B  3446               	retlw	70
  4250  038C  3401               	retlw	1
  4251  038D  3447               	retlw	71
  4252  038E  3401               	retlw	1
  4253  038F  3448               	retlw	72
  4254  0390  3401               	retlw	1
  4255  0391  3448               	retlw	72
  4256  0392  3401               	retlw	1
  4257  0393  3449               	retlw	73
  4258  0394  3401               	retlw	1
  4259  0395  344A               	retlw	74
  4260  0396  3401               	retlw	1
  4261  0397  344B               	retlw	75
  4262  0398  3401               	retlw	1
  4263  0399  344C               	retlw	76
  4264  039A  3401               	retlw	1
  4265  039B  344D               	retlw	77
  4266  039C  3401               	retlw	1
  4267  039D  344D               	retlw	77
  4268  039E  3401               	retlw	1
  4269  039F  344E               	retlw	78
  4270  03A0  3401               	retlw	1
  4271  03A1  344F               	retlw	79
  4272  03A2  3401               	retlw	1
  4273  03A3  3450               	retlw	80
  4274  03A4  3401               	retlw	1
  4275  03A5  3451               	retlw	81
  4276  03A6  3401               	retlw	1
  4277  03A7  3451               	retlw	81
  4278  03A8  3401               	retlw	1
  4279  03A9  3452               	retlw	82
  4280  03AA  3401               	retlw	1
  4281  03AB  3453               	retlw	83
  4282  03AC  3401               	retlw	1
  4283  03AD  3454               	retlw	84
  4284  03AE  3401               	retlw	1
  4285  03AF  3455               	retlw	85
  4286  03B0  3401               	retlw	1
  4287  03B1  3456               	retlw	86
  4288  03B2  3401               	retlw	1
  4289  03B3  3456               	retlw	86
  4290  03B4  3401               	retlw	1
  4291  03B5  3457               	retlw	87
  4292  03B6  3401               	retlw	1
  4293  03B7  3458               	retlw	88
  4294  03B8  3401               	retlw	1
  4295  03B9  3459               	retlw	89
  4296  03BA  3401               	retlw	1
  4297  03BB  345A               	retlw	90
  4298  03BC  3401               	retlw	1
  4299  03BD  345A               	retlw	90
  4300  03BE  3401               	retlw	1
  4301  03BF  345B               	retlw	91
  4302  03C0  3401               	retlw	1
  4303  03C1  345C               	retlw	92
  4304  03C2  3401               	retlw	1
  4305  03C3  345D               	retlw	93
  4306  03C4  3401               	retlw	1
  4307  03C5  345E               	retlw	94
  4308  03C6  3401               	retlw	1
  4309  03C7  345F               	retlw	95
  4310  03C8  3401               	retlw	1
  4311  03C9  345F               	retlw	95
  4312  03CA  3401               	retlw	1
  4313  03CB  3460               	retlw	96
  4314  03CC  3401               	retlw	1
  4315  03CD  3461               	retlw	97
  4316  03CE  3401               	retlw	1
  4317  03CF  3462               	retlw	98
  4318  03D0  3401               	retlw	1
  4319  03D1  3463               	retlw	99
  4320  03D2  3401               	retlw	1
  4321  03D3  3464               	retlw	100
  4322  03D4  3401               	retlw	1
  4323  03D5  3464               	retlw	100
  4324  03D6  3401               	retlw	1
  4325  03D7  3465               	retlw	101
  4326  03D8  3401               	retlw	1
  4327  03D9  3466               	retlw	102
  4328  03DA  3401               	retlw	1
  4329  03DB  3467               	retlw	103
  4330  03DC  3401               	retlw	1
  4331  03DD  3468               	retlw	104
  4332  03DE  3401               	retlw	1
  4333  03DF  3468               	retlw	104
  4334  03E0  3401               	retlw	1
  4335  03E1  3469               	retlw	105
  4336  03E2  3401               	retlw	1
  4337  03E3  346A               	retlw	106
  4338  03E4  3401               	retlw	1
  4339  03E5  346B               	retlw	107
  4340  03E6  3401               	retlw	1
  4341  03E7  346C               	retlw	108
  4342  03E8  3401               	retlw	1
  4343  03E9  346D               	retlw	109
  4344  03EA  3401               	retlw	1
  4345  03EB  346D               	retlw	109
  4346  03EC  3401               	retlw	1
  4347  03ED  346E               	retlw	110
  4348  03EE  3401               	retlw	1
  4349  03EF  346F               	retlw	111
  4350  03F0  3401               	retlw	1
  4351  03F1  3470               	retlw	112
  4352  03F2  3401               	retlw	1
  4353  03F3  3471               	retlw	113
  4354  03F4  3401               	retlw	1
  4355  03F5  3471               	retlw	113
  4356  03F6  3401               	retlw	1
  4357  03F7  3472               	retlw	114
  4358  03F8  3401               	retlw	1
  4359  03F9  3473               	retlw	115
  4360  03FA  3401               	retlw	1
  4361  03FB  3474               	retlw	116
  4362  03FC  3401               	retlw	1
  4363  03FD  3475               	retlw	117
  4364  03FE  3401               	retlw	1
  4365  03FF  3476               	retlw	118
  4366  0400  3401               	retlw	1
  4367  0401  3476               	retlw	118
  4368  0402  3401               	retlw	1
  4369  0403  3477               	retlw	119
  4370  0404  3401               	retlw	1
  4371  0405  3478               	retlw	120
  4372  0406  3401               	retlw	1
  4373  0407  3479               	retlw	121
  4374  0408  3401               	retlw	1
  4375  0409  347A               	retlw	122
  4376  040A  3401               	retlw	1
  4377  040B  347B               	retlw	123
  4378  040C  3401               	retlw	1
  4379  040D  347B               	retlw	123
  4380  040E  3401               	retlw	1
  4381  040F  347C               	retlw	124
  4382  0410  3401               	retlw	1
  4383  0411  347D               	retlw	125
  4384  0412  3401               	retlw	1
  4385  0413  347E               	retlw	126
  4386  0414  3401               	retlw	1
  4387  0415  347F               	retlw	127
  4388  0416  3401               	retlw	1
  4389  0417  347F               	retlw	127
  4390  0418  3401               	retlw	1
  4391  0419  3480               	retlw	128
  4392  041A  3401               	retlw	1
  4393  041B  3481               	retlw	129
  4394  041C  3401               	retlw	1
  4395  041D  3482               	retlw	130
  4396  041E  3401               	retlw	1
  4397  041F  3483               	retlw	131
  4398  0420  3401               	retlw	1
  4399  0421  3484               	retlw	132
  4400  0422  3401               	retlw	1
  4401  0423  3484               	retlw	132
  4402  0424  3401               	retlw	1
  4403  0425  3485               	retlw	133
  4404  0426  3401               	retlw	1
  4405  0427  3486               	retlw	134
  4406  0428  3401               	retlw	1
  4407  0429  3487               	retlw	135
  4408  042A  3401               	retlw	1
  4409  042B  3488               	retlw	136
  4410  042C  3401               	retlw	1
  4411  042D  3488               	retlw	136
  4412  042E  3401               	retlw	1
  4413  042F  3489               	retlw	137
  4414  0430  3401               	retlw	1
  4415  0431  348A               	retlw	138
  4416  0432  3401               	retlw	1
  4417  0433  348B               	retlw	139
  4418  0434  3401               	retlw	1
  4419  0435  348C               	retlw	140
  4420  0436  3401               	retlw	1
  4421  0437  348D               	retlw	141
  4422  0438  3401               	retlw	1
  4423  0439  348D               	retlw	141
  4424  043A  3401               	retlw	1
  4425  043B  348E               	retlw	142
  4426  043C  3401               	retlw	1
  4427  043D  348F               	retlw	143
  4428  043E  3401               	retlw	1
  4429  043F  3490               	retlw	144
  4430  0440  3401               	retlw	1
  4431  0441  3491               	retlw	145
  4432  0442  3401               	retlw	1
  4433  0443  3492               	retlw	146
  4434  0444  3401               	retlw	1
  4435  0445  3492               	retlw	146
  4436  0446  3401               	retlw	1
  4437  0447  3493               	retlw	147
  4438  0448  3401               	retlw	1
  4439  0449  3494               	retlw	148
  4440  044A  3401               	retlw	1
  4441  044B  3495               	retlw	149
  4442  044C  3401               	retlw	1
  4443  044D  3496               	retlw	150
  4444  044E  3401               	retlw	1
  4445  044F  3496               	retlw	150
  4446  0450  3401               	retlw	1
  4447  0451  3497               	retlw	151
  4448  0452  3401               	retlw	1
  4449  0453  3498               	retlw	152
  4450  0454  3401               	retlw	1
  4451  0455  3499               	retlw	153
  4452  0456  3401               	retlw	1
  4453  0457  349A               	retlw	154
  4454  0458  3401               	retlw	1
  4455  0459  349B               	retlw	155
  4456  045A  3401               	retlw	1
  4457  045B  349B               	retlw	155
  4458  045C  3401               	retlw	1
  4459  045D  349C               	retlw	156
  4460  045E  3401               	retlw	1
  4461  045F  349D               	retlw	157
  4462  0460  3401               	retlw	1
  4463  0461  349E               	retlw	158
  4464  0462  3401               	retlw	1
  4465  0463  349F               	retlw	159
  4466  0464  3401               	retlw	1
  4467  0465  349F               	retlw	159
  4468  0466  3401               	retlw	1
  4469  0467  34A0               	retlw	160
  4470  0468  3401               	retlw	1
  4471  0469  34A1               	retlw	161
  4472  046A  3401               	retlw	1
  4473  046B  34A2               	retlw	162
  4474  046C  3401               	retlw	1
  4475  046D  34A3               	retlw	163
  4476  046E  3401               	retlw	1
  4477  046F  34A4               	retlw	164
  4478  0470  3401               	retlw	1
  4479  0471  34A4               	retlw	164
  4480  0472  3401               	retlw	1
  4481  0473  34A5               	retlw	165
  4482  0474  3401               	retlw	1
  4483  0475  34A6               	retlw	166
  4484  0476  3401               	retlw	1
  4485  0477  34A7               	retlw	167
  4486  0478  3401               	retlw	1
  4487  0479  34A8               	retlw	168
  4488  047A  3401               	retlw	1
  4489  047B  34A8               	retlw	168
  4490  047C  3401               	retlw	1
  4491  047D  34A9               	retlw	169
  4492  047E  3401               	retlw	1
  4493  047F  34AA               	retlw	170
  4494  0480  3401               	retlw	1
  4495  0481  34AB               	retlw	171
  4496  0482  3401               	retlw	1
  4497  0483  34AC               	retlw	172
  4498  0484  3401               	retlw	1
  4499  0485  34AD               	retlw	173
  4500  0486  3401               	retlw	1
  4501  0487  34AD               	retlw	173
  4502  0488  3401               	retlw	1
  4503  0489  34AE               	retlw	174
  4504  048A  3401               	retlw	1
  4505  048B  34AF               	retlw	175
  4506  048C  3401               	retlw	1
  4507  048D  34B0               	retlw	176
  4508  048E  3401               	retlw	1
  4509  048F  34B1               	retlw	177
  4510  0490  3401               	retlw	1
  4511  0491  34B2               	retlw	178
  4512  0492  3401               	retlw	1
  4513  0493  34B2               	retlw	178
  4514  0494  3401               	retlw	1
  4515  0495  34B3               	retlw	179
  4516  0496  3401               	retlw	1
  4517  0497  34B4               	retlw	180
  4518  0498  3401               	retlw	1
  4519  0499  34B5               	retlw	181
  4520  049A  3401               	retlw	1
  4521  049B  34B6               	retlw	182
  4522  049C  3401               	retlw	1
  4523  049D  34B6               	retlw	182
  4524  049E  3401               	retlw	1
  4525  049F  34B7               	retlw	183
  4526  04A0  3401               	retlw	1
  4527  04A1  34B8               	retlw	184
  4528  04A2  3401               	retlw	1
  4529  04A3  34B9               	retlw	185
  4530  04A4  3401               	retlw	1
  4531  04A5  34BA               	retlw	186
  4532  04A6  3401               	retlw	1
  4533  04A7  34BB               	retlw	187
  4534  04A8  3401               	retlw	1
  4535  04A9  34BB               	retlw	187
  4536  04AA  3401               	retlw	1
  4537  04AB  34BC               	retlw	188
  4538  04AC  3401               	retlw	1
  4539  04AD  34BD               	retlw	189
  4540  04AE  3401               	retlw	1
  4541  04AF  34BE               	retlw	190
  4542  04B0  3401               	retlw	1
  4543  04B1  34BF               	retlw	191
  4544  04B2  3401               	retlw	1
  4545  04B3  34BF               	retlw	191
  4546  04B4  3401               	retlw	1
  4547  04B5  34C0               	retlw	192
  4548  04B6  3401               	retlw	1
  4549  04B7  34C1               	retlw	193
  4550  04B8  3401               	retlw	1
  4551  04B9  34C2               	retlw	194
  4552  04BA  3401               	retlw	1
  4553  04BB  34C3               	retlw	195
  4554  04BC  3401               	retlw	1
  4555  04BD  34C4               	retlw	196
  4556  04BE  3401               	retlw	1
  4557  04BF  34C4               	retlw	196
  4558  04C0  3401               	retlw	1
  4559  04C1  34C5               	retlw	197
  4560  04C2  3401               	retlw	1
  4561  04C3  34C6               	retlw	198
  4562  04C4  3401               	retlw	1
  4563  04C5  34C7               	retlw	199
  4564  04C6  3401               	retlw	1
  4565  04C7  34C8               	retlw	200
  4566  04C8  3401               	retlw	1
  4567  04C9  34C9               	retlw	201
  4568  04CA  3401               	retlw	1
  4569  04CB  34C9               	retlw	201
  4570  04CC  3401               	retlw	1
  4571  04CD  34CA               	retlw	202
  4572  04CE  3401               	retlw	1
  4573  04CF  34CB               	retlw	203
  4574  04D0  3401               	retlw	1
  4575  04D1  34CC               	retlw	204
  4576  04D2  3401               	retlw	1
  4577  04D3  34CD               	retlw	205
  4578  04D4  3401               	retlw	1
  4579  04D5  34CD               	retlw	205
  4580  04D6  3401               	retlw	1
  4581  04D7  34CE               	retlw	206
  4582  04D8  3401               	retlw	1
  4583  04D9  34CF               	retlw	207
  4584  04DA  3401               	retlw	1
  4585  04DB  34D0               	retlw	208
  4586  04DC  3401               	retlw	1
  4587  04DD  34D1               	retlw	209
  4588  04DE  3401               	retlw	1
  4589  04DF  34D2               	retlw	210
  4590  04E0  3401               	retlw	1
  4591  04E1  34D2               	retlw	210
  4592  04E2  3401               	retlw	1
  4593  04E3  34D3               	retlw	211
  4594  04E4  3401               	retlw	1
  4595  04E5  34D4               	retlw	212
  4596  04E6  3401               	retlw	1
  4597  04E7  34D5               	retlw	213
  4598  04E8  3401               	retlw	1
  4599  04E9  34D6               	retlw	214
  4600  04EA  3401               	retlw	1
  4601  04EB  34D6               	retlw	214
  4602  04EC  3401               	retlw	1
  4603  04ED  34D7               	retlw	215
  4604  04EE  3401               	retlw	1
  4605  04EF  34D8               	retlw	216
  4606  04F0  3401               	retlw	1
  4607  04F1  34D9               	retlw	217
  4608  04F2  3401               	retlw	1
  4609  04F3  34DA               	retlw	218
  4610  04F4  3401               	retlw	1
  4611  04F5  34DB               	retlw	219
  4612  04F6  3401               	retlw	1
  4613  04F7  34DB               	retlw	219
  4614  04F8  3401               	retlw	1
  4615  04F9  34DC               	retlw	220
  4616  04FA  3401               	retlw	1
  4617  04FB  34DD               	retlw	221
  4618  04FC  3401               	retlw	1
  4619  04FD  34DE               	retlw	222
  4620  04FE  3401               	retlw	1
  4621  04FF  34DF               	retlw	223
  4622  0500  3401               	retlw	1
  4623  0501  34E0               	retlw	224
  4624  0502  3401               	retlw	1
  4625  0503  34E0               	retlw	224
  4626  0504  3401               	retlw	1
  4627  0505  34E1               	retlw	225
  4628  0506  3401               	retlw	1
  4629  0507  34E2               	retlw	226
  4630  0508  3401               	retlw	1
  4631  0509  34E3               	retlw	227
  4632  050A  3401               	retlw	1
  4633  050B  34E4               	retlw	228
  4634  050C  3401               	retlw	1
  4635  050D  34E4               	retlw	228
  4636  050E  3401               	retlw	1
  4637  050F  34E5               	retlw	229
  4638  0510  3401               	retlw	1
  4639  0511  34E6               	retlw	230
  4640  0512  3401               	retlw	1
  4641  0513  34E7               	retlw	231
  4642  0514  3401               	retlw	1
  4643  0515  34E8               	retlw	232
  4644  0516  3401               	retlw	1
  4645  0517  34E9               	retlw	233
  4646  0518  3401               	retlw	1
  4647  0519  34E9               	retlw	233
  4648  051A  3401               	retlw	1
  4649  051B  34EA               	retlw	234
  4650  051C  3401               	retlw	1
  4651  051D  34EB               	retlw	235
  4652  051E  3401               	retlw	1
  4653  051F  34EC               	retlw	236
  4654  0520  3401               	retlw	1
  4655  0521  34ED               	retlw	237
  4656  0522  3401               	retlw	1
  4657  0523  34ED               	retlw	237
  4658  0524  3401               	retlw	1
  4659  0525  34EE               	retlw	238
  4660  0526  3401               	retlw	1
  4661  0527  34EF               	retlw	239
  4662  0528  3401               	retlw	1
  4663  0529  34F0               	retlw	240
  4664  052A  3401               	retlw	1
  4665  052B  34F1               	retlw	241
  4666  052C  3401               	retlw	1
  4667  052D  34F2               	retlw	242
  4668  052E  3401               	retlw	1
  4669  052F  34F2               	retlw	242
  4670  0530  3401               	retlw	1
  4671  0531  34F3               	retlw	243
  4672  0532  3401               	retlw	1
  4673  0533  34F4               	retlw	244
  4674  0534  3401               	retlw	1
  4675  0535  34F5               	retlw	245
  4676  0536  3401               	retlw	1
  4677  0537  34F6               	retlw	246
  4678  0538  3401               	retlw	1
  4679  0539  34F6               	retlw	246
  4680  053A  3401               	retlw	1
  4681  053B  34F7               	retlw	247
  4682  053C  3401               	retlw	1
  4683  053D  34F8               	retlw	248
  4684  053E  3401               	retlw	1
  4685  053F  34F9               	retlw	249
  4686  0540  3401               	retlw	1
  4687  0541  34FA               	retlw	250
  4688  0542  3401               	retlw	1
  4689  0543  34FB               	retlw	251
  4690  0544  3401               	retlw	1
  4691  0545  34FB               	retlw	251
  4692  0546  3401               	retlw	1
  4693  0547  34FC               	retlw	252
  4694  0548  3401               	retlw	1
  4695  0549  34FD               	retlw	253
  4696  054A  3401               	retlw	1
  4697  054B  34FE               	retlw	254
  4698  054C  3401               	retlw	1
  4699  054D  34FF               	retlw	255
  4700  054E  3401               	retlw	1
  4701  054F  3400               	retlw	0
  4702  0550  3402               	retlw	2
  4703  0551  3400               	retlw	0
  4704  0552  3402               	retlw	2
  4705  0553  3401               	retlw	1
  4706  0554  3402               	retlw	2
  4707  0555  3402               	retlw	2
  4708  0556  3402               	retlw	2
  4709  0557  3403               	retlw	3
  4710  0558  3402               	retlw	2
  4711  0559  3404               	retlw	4
  4712  055A  3402               	retlw	2
  4713  055B  3404               	retlw	4
  4714  055C  3402               	retlw	2
  4715  055D  3405               	retlw	5
  4716  055E  3402               	retlw	2
  4717  055F  3406               	retlw	6
  4718  0560  3402               	retlw	2
  4719  0561  3407               	retlw	7
  4720  0562  3402               	retlw	2
  4721  0563  3408               	retlw	8
  4722  0564  3402               	retlw	2
  4723  0565  3409               	retlw	9
  4724  0566  3402               	retlw	2
  4725  0567  3409               	retlw	9
  4726  0568  3402               	retlw	2
  4727  0569  340A               	retlw	10
  4728  056A  3402               	retlw	2
  4729  056B  340B               	retlw	11
  4730  056C  3402               	retlw	2
  4731  056D  340C               	retlw	12
  4732  056E  3402               	retlw	2
  4733  056F  340D               	retlw	13
  4734  0570  3402               	retlw	2
  4735  0571  340D               	retlw	13
  4736  0572  3402               	retlw	2
  4737  0573  340E               	retlw	14
  4738  0574  3402               	retlw	2
  4739  0575  340F               	retlw	15
  4740  0576  3402               	retlw	2
  4741  0577  3410               	retlw	16
  4742  0578  3402               	retlw	2
  4743  0579  3411               	retlw	17
  4744  057A  3402               	retlw	2
  4745  057B  3412               	retlw	18
  4746  057C  3402               	retlw	2
  4747  057D  3412               	retlw	18
  4748  057E  3402               	retlw	2
  4749  057F  3413               	retlw	19
  4750  0580  3402               	retlw	2
  4751  0581  3414               	retlw	20
  4752  0582  3402               	retlw	2
  4753  0583  3415               	retlw	21
  4754  0584  3402               	retlw	2
  4755  0585  3416               	retlw	22
  4756  0586  3402               	retlw	2
  4757  0587  3417               	retlw	23
  4758  0588  3402               	retlw	2
  4759  0589  3417               	retlw	23
  4760  058A  3402               	retlw	2
  4761  058B  3418               	retlw	24
  4762  058C  3402               	retlw	2
  4763  058D  3419               	retlw	25
  4764  058E  3402               	retlw	2
  4765  058F  341A               	retlw	26
  4766  0590  3402               	retlw	2
  4767  0591  341B               	retlw	27
  4768  0592  3402               	retlw	2
  4769  0593  341B               	retlw	27
  4770  0594  3402               	retlw	2
  4771  0595  341C               	retlw	28
  4772  0596  3402               	retlw	2
  4773  0597  341D               	retlw	29
  4774  0598  3402               	retlw	2
  4775  0599  341E               	retlw	30
  4776  059A  3402               	retlw	2
  4777  059B  341F               	retlw	31
  4778  059C  3402               	retlw	2
  4779  059D  3420               	retlw	32
  4780  059E  3402               	retlw	2
  4781  059F  3420               	retlw	32
  4782  05A0  3402               	retlw	2
  4783  05A1  3421               	retlw	33
  4784  05A2  3402               	retlw	2
  4785  05A3  3422               	retlw	34
  4786  05A4  3402               	retlw	2
  4787  05A5  3423               	retlw	35
  4788  05A6  3402               	retlw	2
  4789  05A7  3424               	retlw	36
  4790  05A8  3402               	retlw	2
  4791  05A9  3424               	retlw	36
  4792  05AA  3402               	retlw	2
  4793  05AB  3425               	retlw	37
  4794  05AC  3402               	retlw	2
  4795  05AD  3426               	retlw	38
  4796  05AE  3402               	retlw	2
  4797  05AF  3427               	retlw	39
  4798  05B0  3402               	retlw	2
  4799  05B1  3428               	retlw	40
  4800  05B2  3402               	retlw	2
  4801  05B3  3429               	retlw	41
  4802  05B4  3402               	retlw	2
  4803  05B5  3429               	retlw	41
  4804  05B6  3402               	retlw	2
  4805  05B7  342A               	retlw	42
  4806  05B8  3402               	retlw	2
  4807  05B9  342B               	retlw	43
  4808  05BA  3402               	retlw	2
  4809  05BB  342C               	retlw	44
  4810  05BC  3402               	retlw	2
  4811  05BD  342D               	retlw	45
  4812  05BE  3402               	retlw	2
  4813  05BF  342E               	retlw	46
  4814  05C0  3402               	retlw	2
  4815  05C1  342E               	retlw	46
  4816  05C2  3402               	retlw	2
  4817  05C3  342F               	retlw	47
  4818  05C4  3402               	retlw	2
  4819  05C5  3430               	retlw	48
  4820  05C6  3402               	retlw	2
  4821  05C7  3431               	retlw	49
  4822  05C8  3402               	retlw	2
  4823  05C9  3432               	retlw	50
  4824  05CA  3402               	retlw	2
  4825  05CB  3432               	retlw	50
  4826  05CC  3402               	retlw	2
  4827  05CD  3433               	retlw	51
  4828  05CE  3402               	retlw	2
  4829  05CF  3434               	retlw	52
  4830  05D0  3402               	retlw	2
  4831  05D1  3435               	retlw	53
  4832  05D2  3402               	retlw	2
  4833  05D3  3436               	retlw	54
  4834  05D4  3402               	retlw	2
  4835  05D5  3437               	retlw	55
  4836  05D6  3402               	retlw	2
  4837  05D7  3437               	retlw	55
  4838  05D8  3402               	retlw	2
  4839  05D9  3438               	retlw	56
  4840  05DA  3402               	retlw	2
  4841  05DB  3439               	retlw	57
  4842  05DC  3402               	retlw	2
  4843  05DD  343A               	retlw	58
  4844  05DE  3402               	retlw	2
  4845  05DF  343B               	retlw	59
  4846  05E0  3402               	retlw	2
  4847  05E1  343B               	retlw	59
  4848  05E2  3402               	retlw	2
  4849  05E3  343C               	retlw	60
  4850  05E4  3402               	retlw	2
  4851  05E5  343D               	retlw	61
  4852  05E6  3402               	retlw	2
  4853  05E7  343E               	retlw	62
  4854  05E8  3402               	retlw	2
  4855  05E9  343F               	retlw	63
  4856  05EA  3402               	retlw	2
  4857  05EB  3440               	retlw	64
  4858  05EC  3402               	retlw	2
  4859  05ED  3440               	retlw	64
  4860  05EE  3402               	retlw	2
  4861  05EF  3441               	retlw	65
  4862  05F0  3402               	retlw	2
  4863  05F1  3442               	retlw	66
  4864  05F2  3402               	retlw	2
  4865  05F3  3443               	retlw	67
  4866  05F4  3402               	retlw	2
  4867  05F5  3444               	retlw	68
  4868  05F6  3402               	retlw	2
  4869  05F7  3444               	retlw	68
  4870  05F8  3402               	retlw	2
  4871  05F9  3445               	retlw	69
  4872  05FA  3402               	retlw	2
  4873  05FB  3446               	retlw	70
  4874  05FC  3402               	retlw	2
  4875  05FD  3447               	retlw	71
  4876  05FE  3402               	retlw	2
  4877  05FF  3448               	retlw	72
  4878  0600  3402               	retlw	2
  4879  0601  3449               	retlw	73
  4880  0602  3402               	retlw	2
  4881  0603  3449               	retlw	73
  4882  0604  3402               	retlw	2
  4883  0605  344A               	retlw	74
  4884  0606  3402               	retlw	2
  4885  0607  344B               	retlw	75
  4886  0608  3402               	retlw	2
  4887  0609  344C               	retlw	76
  4888  060A  3402               	retlw	2
  4889  060B  344D               	retlw	77
  4890  060C  3402               	retlw	2
  4891  060D  344E               	retlw	78
  4892  060E  3402               	retlw	2
  4893  060F  344E               	retlw	78
  4894  0610  3402               	retlw	2
  4895  0611  344F               	retlw	79
  4896  0612  3402               	retlw	2
  4897  0613  3450               	retlw	80
  4898  0614  3402               	retlw	2
  4899  0615  3451               	retlw	81
  4900  0616  3402               	retlw	2
  4901  0617  3452               	retlw	82
  4902  0618  3402               	retlw	2
  4903  0619  3452               	retlw	82
  4904  061A  3402               	retlw	2
  4905  061B  3453               	retlw	83
  4906  061C  3402               	retlw	2
  4907  061D  3454               	retlw	84
  4908  061E  3402               	retlw	2
  4909  061F  3455               	retlw	85
  4910  0620  3402               	retlw	2
  4911  0621  3456               	retlw	86
  4912  0622  3402               	retlw	2
  4913  0623  3457               	retlw	87
  4914  0624  3402               	retlw	2
  4915  0625  3457               	retlw	87
  4916  0626  3402               	retlw	2
  4917  0627  3458               	retlw	88
  4918  0628  3402               	retlw	2
  4919  0629  3459               	retlw	89
  4920  062A  3402               	retlw	2
  4921  062B  345A               	retlw	90
  4922  062C  3402               	retlw	2
  4923  062D  345B               	retlw	91
  4924  062E  3402               	retlw	2
  4925  062F  345B               	retlw	91
  4926  0630  3402               	retlw	2
  4927  0631  345C               	retlw	92
  4928  0632  3402               	retlw	2
  4929  0633  345D               	retlw	93
  4930  0634  3402               	retlw	2
  4931  0635  345E               	retlw	94
  4932  0636  3402               	retlw	2
  4933  0637  345F               	retlw	95
  4934  0638  3402               	retlw	2
  4935  0639  3460               	retlw	96
  4936  063A  3402               	retlw	2
  4937  063B  3460               	retlw	96
  4938  063C  3402               	retlw	2
  4939  063D  3461               	retlw	97
  4940  063E  3402               	retlw	2
  4941  063F  3462               	retlw	98
  4942  0640  3402               	retlw	2
  4943  0641  3463               	retlw	99
  4944  0642  3402               	retlw	2
  4945  0643  3464               	retlw	100
  4946  0644  3402               	retlw	2
  4947  0645  3465               	retlw	101
  4948  0646  3402               	retlw	2
  4949  0647  3465               	retlw	101
  4950  0648  3402               	retlw	2
  4951  0649  3466               	retlw	102
  4952  064A  3402               	retlw	2
  4953  064B  3467               	retlw	103
  4954  064C  3402               	retlw	2
  4955  064D  3468               	retlw	104
  4956  064E  3402               	retlw	2
  4957  064F  3469               	retlw	105
  4958  0650  3402               	retlw	2
  4959  0651  3469               	retlw	105
  4960  0652  3402               	retlw	2
  4961  0653  346A               	retlw	106
  4962  0654  3402               	retlw	2
  4963  0655  346B               	retlw	107
  4964  0656  3402               	retlw	2
  4965  0657  346C               	retlw	108
  4966  0658  3402               	retlw	2
  4967  0659  346D               	retlw	109
  4968  065A  3402               	retlw	2
  4969  065B  346E               	retlw	110
  4970  065C  3402               	retlw	2
  4971  065D  346E               	retlw	110
  4972  065E  3402               	retlw	2
  4973  065F  346F               	retlw	111
  4974  0660  3402               	retlw	2
  4975  0661  3470               	retlw	112
  4976  0662  3402               	retlw	2
  4977  0663  3471               	retlw	113
  4978  0664  3402               	retlw	2
  4979  0665  3472               	retlw	114
  4980  0666  3402               	retlw	2
  4981  0667  3472               	retlw	114
  4982  0668  3402               	retlw	2
  4983  0669  3473               	retlw	115
  4984  066A  3402               	retlw	2
  4985  066B  3474               	retlw	116
  4986  066C  3402               	retlw	2
  4987  066D  3475               	retlw	117
  4988  066E  3402               	retlw	2
  4989  066F  3476               	retlw	118
  4990  0670  3402               	retlw	2
  4991  0671  3477               	retlw	119
  4992  0672  3402               	retlw	2
  4993  0673  3477               	retlw	119
  4994  0674  3402               	retlw	2
  4995  0675  3478               	retlw	120
  4996  0676  3402               	retlw	2
  4997  0677  3479               	retlw	121
  4998  0678  3402               	retlw	2
  4999  0679  347A               	retlw	122
  5000  067A  3402               	retlw	2
  5001  067B  347B               	retlw	123
  5002  067C  3402               	retlw	2
  5003  067D  347C               	retlw	124
  5004  067E  3402               	retlw	2
  5005  067F  347C               	retlw	124
  5006  0680  3402               	retlw	2
  5007  0681  347D               	retlw	125
  5008  0682  3402               	retlw	2
  5009  0683  347E               	retlw	126
  5010  0684  3402               	retlw	2
  5011  0685  347F               	retlw	127
  5012  0686  3402               	retlw	2
  5013  0687  3480               	retlw	128
  5014  0688  3402               	retlw	2
  5015  0689  3480               	retlw	128
  5016  068A  3402               	retlw	2
  5017  068B  3481               	retlw	129
  5018  068C  3402               	retlw	2
  5019  068D  3482               	retlw	130
  5020  068E  3402               	retlw	2
  5021  068F  3483               	retlw	131
  5022  0690  3402               	retlw	2
  5023  0691  3484               	retlw	132
  5024  0692  3402               	retlw	2
  5025  0693  3485               	retlw	133
  5026  0694  3402               	retlw	2
  5027  0695  3485               	retlw	133
  5028  0696  3402               	retlw	2
  5029  0697  3486               	retlw	134
  5030  0698  3402               	retlw	2
  5031  0699  3487               	retlw	135
  5032  069A  3402               	retlw	2
  5033  069B  3488               	retlw	136
  5034  069C  3402               	retlw	2
  5035  069D  3489               	retlw	137
  5036  069E  3402               	retlw	2
  5037  069F  3489               	retlw	137
  5038  06A0  3402               	retlw	2
  5039  06A1  348A               	retlw	138
  5040  06A2  3402               	retlw	2
  5041  06A3  348B               	retlw	139
  5042  06A4  3402               	retlw	2
  5043  06A5  348C               	retlw	140
  5044  06A6  3402               	retlw	2
  5045  06A7  348D               	retlw	141
  5046  06A8  3402               	retlw	2
  5047  06A9  348E               	retlw	142
  5048  06AA  3402               	retlw	2
  5049  06AB  348E               	retlw	142
  5050  06AC  3402               	retlw	2
  5051  06AD  348F               	retlw	143
  5052  06AE  3402               	retlw	2
  5053  06AF  3490               	retlw	144
  5054  06B0  3402               	retlw	2
  5055  06B1  3491               	retlw	145
  5056  06B2  3402               	retlw	2
  5057  06B3  3492               	retlw	146
  5058  06B4  3402               	retlw	2
  5059  06B5  3492               	retlw	146
  5060  06B6  3402               	retlw	2
  5061  06B7  3493               	retlw	147
  5062  06B8  3402               	retlw	2
  5063  06B9  3494               	retlw	148
  5064  06BA  3402               	retlw	2
  5065  06BB  3495               	retlw	149
  5066  06BC  3402               	retlw	2
  5067  06BD  3496               	retlw	150
  5068  06BE  3402               	retlw	2
  5069  06BF  3497               	retlw	151
  5070  06C0  3402               	retlw	2
  5071  06C1  3497               	retlw	151
  5072  06C2  3402               	retlw	2
  5073  06C3  3498               	retlw	152
  5074  06C4  3402               	retlw	2
  5075  06C5  3499               	retlw	153
  5076  06C6  3402               	retlw	2
  5077  06C7  349A               	retlw	154
  5078  06C8  3402               	retlw	2
  5079  06C9  349B               	retlw	155
  5080  06CA  3402               	retlw	2
  5081  06CB  349C               	retlw	156
  5082  06CC  3402               	retlw	2
  5083  06CD  349C               	retlw	156
  5084  06CE  3402               	retlw	2
  5085  06CF  349D               	retlw	157
  5086  06D0  3402               	retlw	2
  5087  06D1  349E               	retlw	158
  5088  06D2  3402               	retlw	2
  5089  06D3  349F               	retlw	159
  5090  06D4  3402               	retlw	2
  5091  06D5  34A0               	retlw	160
  5092  06D6  3402               	retlw	2
  5093  06D7  34A0               	retlw	160
  5094  06D8  3402               	retlw	2
  5095  06D9  34A1               	retlw	161
  5096  06DA  3402               	retlw	2
  5097  06DB  34A2               	retlw	162
  5098  06DC  3402               	retlw	2
  5099  06DD  34A3               	retlw	163
  5100  06DE  3402               	retlw	2
  5101  06DF  34A4               	retlw	164
  5102  06E0  3402               	retlw	2
  5103  06E1  34A5               	retlw	165
  5104  06E2  3402               	retlw	2
  5105  06E3  34A5               	retlw	165
  5106  06E4  3402               	retlw	2
  5107  06E5  34A6               	retlw	166
  5108  06E6  3402               	retlw	2
  5109  06E7  34A7               	retlw	167
  5110  06E8  3402               	retlw	2
  5111  06E9  34A8               	retlw	168
  5112  06EA  3402               	retlw	2
  5113  06EB  34A9               	retlw	169
  5114  06EC  3402               	retlw	2
  5115  06ED  34A9               	retlw	169
  5116  06EE  3402               	retlw	2
  5117  06EF  34AA               	retlw	170
  5118  06F0  3402               	retlw	2
  5119  06F1  34AB               	retlw	171
  5120  06F2  3402               	retlw	2
  5121  06F3  34AC               	retlw	172
  5122  06F4  3402               	retlw	2
  5123  06F5  34AD               	retlw	173
  5124  06F6  3402               	retlw	2
  5125  06F7  34AE               	retlw	174
  5126  06F8  3402               	retlw	2
  5127  06F9  34AE               	retlw	174
  5128  06FA  3402               	retlw	2
  5129  06FB  34AF               	retlw	175
  5130  06FC  3402               	retlw	2
  5131  06FD  34B0               	retlw	176
  5132  06FE  3402               	retlw	2
  5133  06FF  34B1               	retlw	177
  5134  0700  3402               	retlw	2
  5135  0701  34B2               	retlw	178
  5136  0702  3402               	retlw	2
  5137  0703  34B3               	retlw	179
  5138  0704  3402               	retlw	2
  5139  0705  34B3               	retlw	179
  5140  0706  3402               	retlw	2
  5141  0707  34B4               	retlw	180
  5142  0708  3402               	retlw	2
  5143  0709  34B5               	retlw	181
  5144  070A  3402               	retlw	2
  5145  070B  34B6               	retlw	182
  5146  070C  3402               	retlw	2
  5147  070D  34B7               	retlw	183
  5148  070E  3402               	retlw	2
  5149  070F  34B7               	retlw	183
  5150  0710  3402               	retlw	2
  5151  0711  34B8               	retlw	184
  5152  0712  3402               	retlw	2
  5153  0713  34B9               	retlw	185
  5154  0714  3402               	retlw	2
  5155  0715  34BA               	retlw	186
  5156  0716  3402               	retlw	2
  5157  0717  34BB               	retlw	187
  5158  0718  3402               	retlw	2
  5159  0719  34BC               	retlw	188
  5160  071A  3402               	retlw	2
  5161  071B  34BC               	retlw	188
  5162  071C  3402               	retlw	2
  5163  071D  34BD               	retlw	189
  5164  071E  3402               	retlw	2
  5165  071F  34BE               	retlw	190
  5166  0720  3402               	retlw	2
  5167  0721  34BF               	retlw	191
  5168  0722  3402               	retlw	2
  5169  0723  34C0               	retlw	192
  5170  0724  3402               	retlw	2
  5171  0725  34C0               	retlw	192
  5172  0726  3402               	retlw	2
  5173  0727  34C1               	retlw	193
  5174  0728  3402               	retlw	2
  5175  0729  34C2               	retlw	194
  5176  072A  3402               	retlw	2
  5177  072B  34C3               	retlw	195
  5178  072C  3402               	retlw	2
  5179  072D  34C4               	retlw	196
  5180  072E  3402               	retlw	2
  5181  072F  34C5               	retlw	197
  5182  0730  3402               	retlw	2
  5183  0731  34C5               	retlw	197
  5184  0732  3402               	retlw	2
  5185  0733  34C6               	retlw	198
  5186  0734  3402               	retlw	2
  5187  0735  34C7               	retlw	199
  5188  0736  3402               	retlw	2
  5189  0737  34C8               	retlw	200
  5190  0738  3402               	retlw	2
  5191  0739  34C9               	retlw	201
  5192  073A  3402               	retlw	2
  5193  073B  34CA               	retlw	202
  5194  073C  3402               	retlw	2
  5195  073D  34CA               	retlw	202
  5196  073E  3402               	retlw	2
  5197  073F  34CB               	retlw	203
  5198  0740  3402               	retlw	2
  5199  0741  34CC               	retlw	204
  5200  0742  3402               	retlw	2
  5201  0743  34CD               	retlw	205
  5202  0744  3402               	retlw	2
  5203  0745  34CE               	retlw	206
  5204  0746  3402               	retlw	2
  5205  0747  34CE               	retlw	206
  5206  0748  3402               	retlw	2
  5207  0749  34CF               	retlw	207
  5208  074A  3402               	retlw	2
  5209  074B  34D0               	retlw	208
  5210  074C  3402               	retlw	2
  5211  074D  34D1               	retlw	209
  5212  074E  3402               	retlw	2
  5213  074F  34D2               	retlw	210
  5214  0750  3402               	retlw	2
  5215  0751  34D3               	retlw	211
  5216  0752  3402               	retlw	2
  5217  0753  34D3               	retlw	211
  5218  0754  3402               	retlw	2
  5219  0755  34D4               	retlw	212
  5220  0756  3402               	retlw	2
  5221  0757  34D5               	retlw	213
  5222  0758  3402               	retlw	2
  5223  0759  34D6               	retlw	214
  5224  075A  3402               	retlw	2
  5225  075B  34D7               	retlw	215
  5226  075C  3402               	retlw	2
  5227  075D  34D7               	retlw	215
  5228  075E  3402               	retlw	2
  5229  075F  34D8               	retlw	216
  5230  0760  3402               	retlw	2
  5231  0761  34D9               	retlw	217
  5232  0762  3402               	retlw	2
  5233  0763  34DA               	retlw	218
  5234  0764  3402               	retlw	2
  5235  0765  34DB               	retlw	219
  5236  0766  3402               	retlw	2
  5237  0767  34DC               	retlw	220
  5238  0768  3402               	retlw	2
  5239  0769  34DC               	retlw	220
  5240  076A  3402               	retlw	2
  5241  076B  34DD               	retlw	221
  5242  076C  3402               	retlw	2
  5243  076D  34DE               	retlw	222
  5244  076E  3402               	retlw	2
  5245  076F  34DF               	retlw	223
  5246  0770  3402               	retlw	2
  5247  0771  34E0               	retlw	224
  5248  0772  3402               	retlw	2
  5249  0773  34E1               	retlw	225
  5250  0774  3402               	retlw	2
  5251  0775  34E1               	retlw	225
  5252  0776  3402               	retlw	2
  5253  0777  34E2               	retlw	226
  5254  0778  3402               	retlw	2
  5255  0779  34E3               	retlw	227
  5256  077A  3402               	retlw	2
  5257  077B  34E4               	retlw	228
  5258  077C  3402               	retlw	2
  5259  077D  34E5               	retlw	229
  5260  077E  3402               	retlw	2
  5261  077F  34E5               	retlw	229
  5262  0780  3402               	retlw	2
  5263  0781  34E6               	retlw	230
  5264  0782  3402               	retlw	2
  5265  0783  34E7               	retlw	231
  5266  0784  3402               	retlw	2
  5267  0785  34E8               	retlw	232
  5268  0786  3402               	retlw	2
  5269  0787  34E9               	retlw	233
  5270  0788  3402               	retlw	2
  5271  0789  34EA               	retlw	234
  5272  078A  3402               	retlw	2
  5273  078B  34EA               	retlw	234
  5274  078C  3402               	retlw	2
  5275  078D  34EB               	retlw	235
  5276  078E  3402               	retlw	2
  5277  078F  34EC               	retlw	236
  5278  0790  3402               	retlw	2
  5279  0791  34ED               	retlw	237
  5280  0792  3402               	retlw	2
  5281  0793  34EE               	retlw	238
  5282  0794  3402               	retlw	2
  5283  0795  34EE               	retlw	238
  5284  0796  3402               	retlw	2
  5285  0797  34EF               	retlw	239
  5286  0798  3402               	retlw	2
  5287  0799  34F0               	retlw	240
  5288  079A  3402               	retlw	2
  5289  079B  34F1               	retlw	241
  5290  079C  3402               	retlw	2
  5291  079D  34F2               	retlw	242
  5292  079E  3402               	retlw	2
  5293  079F  34F3               	retlw	243
  5294  07A0  3402               	retlw	2
  5295  07A1  34F3               	retlw	243
  5296  07A2  3402               	retlw	2
  5297  07A3  34F4               	retlw	244
  5298  07A4  3402               	retlw	2
  5299  07A5  34F5               	retlw	245
  5300  07A6  3402               	retlw	2
  5301  07A7  34F6               	retlw	246
  5302  07A8  3402               	retlw	2
  5303  07A9  34F7               	retlw	247
  5304  07AA  3402               	retlw	2
  5305  07AB  34F7               	retlw	247
  5306  07AC  3402               	retlw	2
  5307  07AD  34F8               	retlw	248
  5308  07AE  3402               	retlw	2
  5309  07AF  34F9               	retlw	249
  5310  07B0  3402               	retlw	2
  5311  07B1  34FA               	retlw	250
  5312  07B2  3402               	retlw	2
  5313  07B3  34FB               	retlw	251
  5314  07B4  3402               	retlw	2
  5315  07B5  34FC               	retlw	252
  5316  07B6  3402               	retlw	2
  5317  07B7  34FC               	retlw	252
  5318  07B8  3402               	retlw	2
  5319  07B9  34FD               	retlw	253
  5320  07BA  3402               	retlw	2
  5321  07BB  34FE               	retlw	254
  5322  07BC  3402               	retlw	2
  5323  07BD  34FF               	retlw	255
  5324  07BE  3402               	retlw	2
  5325  07BF  3400               	retlw	0
  5326  07C0  3403               	retlw	3
  5327  07C1  3401               	retlw	1
  5328  07C2  3403               	retlw	3
  5329  07C3  3401               	retlw	1
  5330  07C4  3403               	retlw	3
  5331  07C5  3402               	retlw	2
  5332  07C6  3403               	retlw	3
  5333  07C7  3403               	retlw	3
  5334  07C8  3403               	retlw	3
  5335  07C9  3404               	retlw	4
  5336  07CA  3403               	retlw	3
  5337  07CB  3405               	retlw	5
  5338  07CC  3403               	retlw	3
  5339  07CD  3405               	retlw	5
  5340  07CE  3403               	retlw	3
  5341  07CF  3406               	retlw	6
  5342  07D0  3403               	retlw	3
  5343  07D1  3407               	retlw	7
  5344  07D2  3403               	retlw	3
  5345  07D3  3408               	retlw	8
  5346  07D4  3403               	retlw	3
  5347  07D5  3409               	retlw	9
  5348  07D6  3403               	retlw	3
  5349  07D7  340A               	retlw	10
  5350  07D8  3403               	retlw	3
  5351  07D9  340A               	retlw	10
  5352  07DA  3403               	retlw	3
  5353  07DB  340B               	retlw	11
  5354  07DC  3403               	retlw	3
  5355  07DD  340C               	retlw	12
  5356  07DE  3403               	retlw	3
  5357  07DF  340D               	retlw	13
  5358  07E0  3403               	retlw	3
  5359  07E1  340E               	retlw	14
  5360  07E2  3403               	retlw	3
  5361  07E3  340E               	retlw	14
  5362  07E4  3403               	retlw	3
  5363  07E5  340F               	retlw	15
  5364  07E6  3403               	retlw	3
  5365  07E7  3410               	retlw	16
  5366  07E8  3403               	retlw	3
  5367  07E9  3411               	retlw	17
  5368  07EA  3403               	retlw	3
  5369  07EB  3412               	retlw	18
  5370  07EC  3403               	retlw	3
  5371  07ED  3413               	retlw	19
  5372  07EE  3403               	retlw	3
  5373  07EF  3413               	retlw	19
  5374  07F0  3403               	retlw	3
  5375  07F1  3414               	retlw	20
  5376  07F2  3403               	retlw	3
  5377  07F3  3415               	retlw	21
  5378  07F4  3403               	retlw	3
  5379  07F5  3416               	retlw	22
  5380  07F6  3403               	retlw	3
  5381  07F7  3417               	retlw	23
  5382  07F8  3403               	retlw	3
  5383  07F9  3418               	retlw	24
  5384  07FA  3403               	retlw	3
  5385  07FB  3418               	retlw	24
  5386  07FC  3403               	retlw	3
  5387  07FD  3419               	retlw	25
  5388  07FE  3403               	retlw	3
  5389  07FF  341A               	retlw	26
  5390  0800  3403               	retlw	3
  5391  0801  341B               	retlw	27
  5392  0802  3403               	retlw	3
  5393  0803  341C               	retlw	28
  5394  0804  3403               	retlw	3
  5395  0805  341C               	retlw	28
  5396  0806  3403               	retlw	3
  5397  0807  341D               	retlw	29
  5398  0808  3403               	retlw	3
  5399  0809  341E               	retlw	30
  5400  080A  3403               	retlw	3
  5401  080B  341F               	retlw	31
  5402  080C  3403               	retlw	3
  5403  080D  3420               	retlw	32
  5404  080E  3403               	retlw	3
  5405  080F  3421               	retlw	33
  5406  0810  3403               	retlw	3
  5407  0811  3421               	retlw	33
  5408  0812  3403               	retlw	3
  5409  0813  3422               	retlw	34
  5410  0814  3403               	retlw	3
  5411  0815  3423               	retlw	35
  5412  0816  3403               	retlw	3
  5413  0817  3424               	retlw	36
  5414  0818  3403               	retlw	3
  5415  0819  3425               	retlw	37
  5416  081A  3403               	retlw	3
  5417  081B  3425               	retlw	37
  5418  081C  3403               	retlw	3
  5419  081D  3426               	retlw	38
  5420  081E  3403               	retlw	3
  5421  081F  3427               	retlw	39
  5422  0820  3403               	retlw	3
  5423  0821  3428               	retlw	40
  5424  0822  3403               	retlw	3
  5425  0823  3429               	retlw	41
  5426  0824  3403               	retlw	3
  5427  0825  342A               	retlw	42
  5428  0826  3403               	retlw	3
  5429  0827  342A               	retlw	42
  5430  0828  3403               	retlw	3
  5431  0829  342B               	retlw	43
  5432  082A  3403               	retlw	3
  5433  082B  342C               	retlw	44
  5434  082C  3403               	retlw	3
  5435  082D  342D               	retlw	45
  5436  082E  3403               	retlw	3
  5437  082F  342E               	retlw	46
  5438  0830  3403               	retlw	3
  5439  0831  342F               	retlw	47
  5440  0832  3403               	retlw	3
  5441  0833  342F               	retlw	47
  5442  0834  3403               	retlw	3
  5443  0835  3430               	retlw	48
  5444  0836  3403               	retlw	3
  5445  0837  3431               	retlw	49
  5446  0838  3403               	retlw	3
  5447  0839  3432               	retlw	50
  5448  083A  3403               	retlw	3
  5449  083B  3433               	retlw	51
  5450  083C  3403               	retlw	3
  5451  083D  3433               	retlw	51
  5452  083E  3403               	retlw	3
  5453  083F  3434               	retlw	52
  5454  0840  3403               	retlw	3
  5455  0841  3435               	retlw	53
  5456  0842  3403               	retlw	3
  5457  0843  3436               	retlw	54
  5458  0844  3403               	retlw	3
  5459  0845  3437               	retlw	55
  5460  0846  3403               	retlw	3
  5461  0847  3438               	retlw	56
  5462  0848  3403               	retlw	3
  5463  0849  3438               	retlw	56
  5464  084A  3403               	retlw	3
  5465  084B  3439               	retlw	57
  5466  084C  3403               	retlw	3
  5467  084D  343A               	retlw	58
  5468  084E  3403               	retlw	3
  5469  084F  343B               	retlw	59
  5470  0850  3403               	retlw	3
  5471  0851  343C               	retlw	60
  5472  0852  3403               	retlw	3
  5473  0853  343C               	retlw	60
  5474  0854  3403               	retlw	3
  5475  0855  343D               	retlw	61
  5476  0856  3403               	retlw	3
  5477  0857  343E               	retlw	62
  5478  0858  3403               	retlw	3
  5479  0859  343F               	retlw	63
  5480  085A  3403               	retlw	3
  5481  085B  3440               	retlw	64
  5482  085C  3403               	retlw	3
  5483  085D  3441               	retlw	65
  5484  085E  3403               	retlw	3
  5485  085F  3441               	retlw	65
  5486  0860  3403               	retlw	3
  5487  0861  3442               	retlw	66
  5488  0862  3403               	retlw	3
  5489  0863  3443               	retlw	67
  5490  0864  3403               	retlw	3
  5491  0865  3444               	retlw	68
  5492  0866  3403               	retlw	3
  5493  0867  3445               	retlw	69
  5494  0868  3403               	retlw	3
  5495  0869  3445               	retlw	69
  5496  086A  3403               	retlw	3
  5497  086B  3446               	retlw	70
  5498  086C  3403               	retlw	3
  5499  086D  3447               	retlw	71
  5500  086E  3403               	retlw	3
  5501  086F  3448               	retlw	72
  5502  0870  3403               	retlw	3
  5503  0871                     __end_of_v_table:	
  5504                           
  5505                           	psect	stringtext2
  5506  10B3                     __pstringtext2:	
  5507  10B3                     _invalid_arg:	
  5508  10B3  3445               	retlw	69
  5509  10B4  3472               	retlw	114
  5510  10B5  3472               	retlw	114
  5511  10B6  346F               	retlw	111
  5512  10B7  3472               	retlw	114
  5513  10B8  343A               	retlw	58
  5514  10B9  3420               	retlw	32
  5515  10BA  3469               	retlw	105
  5516  10BB  346E               	retlw	110
  5517  10BC  3476               	retlw	118
  5518  10BD  3461               	retlw	97
  5519  10BE  346C               	retlw	108
  5520  10BF  3469               	retlw	105
  5521  10C0  3464               	retlw	100
  5522  10C1  3420               	retlw	32
  5523  10C2  3461               	retlw	97
  5524  10C3  3472               	retlw	114
  5525  10C4  3467               	retlw	103
  5526  10C5  342E               	retlw	46
  5527  10C6  340D               	retlw	13
  5528  10C7  340A               	retlw	10
  5529  10C8  3400               	retlw	0
  5530  10C9                     __end_of_invalid_arg:	
  5531                           
  5532                           	psect	stringtext3
  5533  10C9                     __pstringtext3:	
  5534  10C9                     _invalid_com:	
  5535  10C9  3445               	retlw	69
  5536  10CA  3472               	retlw	114
  5537  10CB  3472               	retlw	114
  5538  10CC  346F               	retlw	111
  5539  10CD  3472               	retlw	114
  5540  10CE  343A               	retlw	58
  5541  10CF  3420               	retlw	32
  5542  10D0  3469               	retlw	105
  5543  10D1  346E               	retlw	110
  5544  10D2  3476               	retlw	118
  5545  10D3  3461               	retlw	97
  5546  10D4  346C               	retlw	108
  5547  10D5  3469               	retlw	105
  5548  10D6  3464               	retlw	100
  5549  10D7  3420               	retlw	32
  5550  10D8  3463               	retlw	99
  5551  10D9  346F               	retlw	111
  5552  10DA  346D               	retlw	109
  5553  10DB  342E               	retlw	46
  5554  10DC  340D               	retlw	13
  5555  10DD  340A               	retlw	10
  5556  10DE  3400               	retlw	0
  5557  10DF                     __end_of_invalid_com:	
  5558                           
  5559                           	psect	nvBANK2
  5560  015F                     __pnvBANK2:	
  5561  015F                     _TMR1_InterruptHandler:	
  5562  015F                     	ds	2
  5563  0161                     _timer1ReloadVal:	
  5564  0161                     	ds	2
  5565  0163                     _ADC_InterruptHandler:	
  5566  0163                     	ds	2
  5567  0165                     _TMR2_InterruptHandler:	
  5568  0165                     	ds	2
  5569  0167                     _EUSART_ErrorHandler:	
  5570  0167                     	ds	2
  5571  0169                     _EUSART_OverrunErrorHandler:	
  5572  0169                     	ds	2
  5573  016B                     _EUSART_FramingErrorHandler:	
  5574  016B                     	ds	2
  5575  016D                     _EUSART_RxDefaultInterruptHandler:	
  5576  016D                     	ds	2
  5577  0018                     _T1CONbits	set	24
  5578  0018                     _T1CON	set	24
  5579  0016                     _TMR1L	set	22
  5580  0017                     _TMR1H	set	23
  5581  0019                     _T1GCON	set	25
  5582  0012                     _PIR2bits	set	18
  5583  001C                     _T2CONbits	set	28
  5584  001C                     _T2CON	set	28
  5585  001A                     _TMR2	set	26
  5586  001B                     _PR2	set	27
  5587  000B                     _INTCONbits	set	11
  5588  0011                     _PIR1bits	set	17
  5589  008C                     _TRISAbits	set	140
  5590  0095                     _OPTION_REGbits	set	149
  5591  008E                     _TRISC	set	142
  5592  008C                     _TRISA	set	140
  5593  0097                     _WDTCON	set	151
  5594  0098                     _OSCTUNE	set	152
  5595  009A                     _OSCSTAT	set	154
  5596  0099                     _OSCCON	set	153
  5597  009D                     _ADCON0bits	set	157
  5598  009C                     _ADRESH	set	156
  5599  009B                     _ADRESL	set	155
  5600  009F                     _ADCON2	set	159
  5601  009E                     _ADCON1	set	158
  5602  009D                     _ADCON0	set	157
  5603  0091                     _PIE1bits	set	145
  5604  010E                     _LATCbits	set	270
  5605  010C                     _LATAbits	set	268
  5606  010E                     _LATC	set	270
  5607  010C                     _LATA	set	268
  5608  0116                     _BORCON	set	278
  5609  018C                     _ANSELA	set	396
  5610  018E                     _ANSELC	set	398
  5611  0196                     _PMCON2	set	406
  5612  0193                     _PMDATL	set	403
  5613  0194                     _PMDATH	set	404
  5614  0195                     _PMCON1bits	set	405
  5615  0192                     _PMADRH	set	402
  5616  0191                     _PMADRL	set	401
  5617  0199                     _RC1REG	set	409
  5618  019D                     _RC1STAbits	set	413
  5619  019A                     _TX1REG	set	410
  5620  019E                     _TX1STAbits	set	414
  5621  019C                     _SP1BRGH	set	412
  5622  019B                     _SP1BRGL	set	411
  5623  019E                     _TX1STA	set	414
  5624  019D                     _RC1STA	set	413
  5625  019F                     _BAUD1CON	set	415
  5626  020E                     _WPUC	set	526
  5627  020C                     _WPUA	set	524
  5628  028E                     _ODCONC	set	654
  5629  028C                     _ODCONA	set	652
  5630  029E                     _CCPTMRSbits	set	670
  5631  030E                     _SLRCONC	set	782
  5632  030C                     _SLRCONA	set	780
  5633  038E                     _INLVLC	set	910
  5634  038C                     _INLVLA	set	908
  5635  0417                     _T4CON	set	1047
  5636  0415                     _TMR4	set	1045
  5637  0416                     _PR4	set	1046
  5638  0617                     _PWM3DCL	set	1559
  5639  0618                     _PWM3DCH	set	1560
  5640  0619                     _PWM3CON	set	1561
  5641  0E24                     _RXPPS	set	3620
  5642  0EA2                     _RC2PPS	set	3746
  5643  0EA1                     _RC1PPS	set	3745
  5644  0EA0                     _RC0PPS	set	3744
  5645                           
  5646                           	psect	stringtext4
  5647  1000                     __pstringtext4:	
  5648  1000                     STR_14:	
  5649  1000  3420               	retlw	32	;' '
  5650  1001  3420               	retlw	32	;' '
  5651  1002  344E               	retlw	78	;'N'
  5652  1003  344E               	retlw	78	;'N'
  5653  1004  344E               	retlw	78	;'N'
  5654  1005  344E               	retlw	78	;'N'
  5655  1006  343A               	retlw	58	;':'
  5656  1007  3420               	retlw	32	;' '
  5657  1008  346E               	retlw	110	;'n'
  5658  1009  3475               	retlw	117	;'u'
  5659  100A  346D               	retlw	109	;'m'
  5660  100B  3462               	retlw	98	;'b'
  5661  100C  3465               	retlw	101	;'e'
  5662  100D  3472               	retlw	114	;'r'
  5663  100E  3420               	retlw	32	;' '
  5664  100F  3466               	retlw	102	;'f'
  5665  1010  3472               	retlw	114	;'r'
  5666  1011  346F               	retlw	111	;'o'
  5667  1012  346D               	retlw	109	;'m'
  5668  1013  3420               	retlw	32	;' '
  5669  1014  3430               	retlw	48	;'0'
  5670  1015  3420               	retlw	32	;' '
  5671  1016  3474               	retlw	116	;'t'
  5672  1017  346F               	retlw	111	;'o'
  5673  1018  3420               	retlw	32	;' '
  5674  1019  3439               	retlw	57	;'9'
  5675  101A  3439               	retlw	57	;'9'
  5676  101B  3439               	retlw	57	;'9'
  5677  101C  3439               	retlw	57	;'9'
  5678  101D  340D               	retlw	13
  5679  101E  340A               	retlw	10
  5680  101F  340D               	retlw	13
  5681  1020  340A               	retlw	10
  5682  1021  3400               	retlw	0
  5683                           
  5684                           	psect	stringtext5
  5685  1022                     __pstringtext5:	
  5686  1022                     STR_8:	
  5687  1022  3445               	retlw	69	;'E'
  5688  1023  3452               	retlw	82	;'R'
  5689  1024  3452               	retlw	82	;'R'
  5690  1025  344F               	retlw	79	;'O'
  5691  1026  3452               	retlw	82	;'R'
  5692  1027  343A               	retlw	58	;':'
  5693  1028  3420               	retlw	32	;' '
  5694  1029  3469               	retlw	105	;'i'
  5695  102A  346E               	retlw	110	;'n'
  5696  102B  3476               	retlw	118	;'v'
  5697  102C  3461               	retlw	97	;'a'
  5698  102D  346C               	retlw	108	;'l'
  5699  102E  3469               	retlw	105	;'i'
  5700  102F  3464               	retlw	100	;'d'
  5701  1030  3420               	retlw	32	;' '
  5702  1031  3473               	retlw	115	;'s'
  5703  1032  3479               	retlw	121	;'y'
  5704  1033  346E               	retlw	110	;'n'
  5705  1034  3474               	retlw	116	;'t'
  5706  1035  3461               	retlw	97	;'a'
  5707  1036  3478               	retlw	120	;'x'
  5708  1037  342E               	retlw	46	;'.'
  5709  1038  340D               	retlw	13
  5710  1039  340A               	retlw	10
  5711  103A  3400               	retlw	0
  5712                           
  5713                           	psect	stringtext6
  5714  103B                     __pstringtext6:	
  5715  103B                     STR_19:	
  5716  103B  3420               	retlw	32	;' '
  5717  103C  3420               	retlw	32	;' '
  5718  103D  3449               	retlw	73	;'I'
  5719  103E  343A               	retlw	58	;':'
  5720  103F  3420               	retlw	32	;' '
  5721  1040  3470               	retlw	112	;'p'
  5722  1041  3472               	retlw	114	;'r'
  5723  1042  3469               	retlw	105	;'i'
  5724  1043  346E               	retlw	110	;'n'
  5725  1044  3474               	retlw	116	;'t'
  5726  1045  3420               	retlw	32	;' '
  5727  1046  3473               	retlw	115	;'s'
  5728  1047  3479               	retlw	121	;'y'
  5729  1048  3473               	retlw	115	;'s'
  5730  1049  3474               	retlw	116	;'t'
  5731  104A  3465               	retlw	101	;'e'
  5732  104B  346D               	retlw	109	;'m'
  5733  104C  3420               	retlw	32	;' '
  5734  104D  3449               	retlw	73	;'I'
  5735  104E  344E               	retlw	78	;'N'
  5736  104F  3446               	retlw	70	;'F'
  5737  1050  344F               	retlw	79	;'O'
  5738  1051  340D               	retlw	13
  5739  1052  340A               	retlw	10
  5740  1053  3400               	retlw	0
  5741                           
  5742                           	psect	stringtext7
  5743  1054                     __pstringtext7:	
  5744  1054                     STR_20:	
  5745  1054  3420               	retlw	32	;' '
  5746  1055  3420               	retlw	32	;' '
  5747  1056  343F               	retlw	63	;'?'
  5748  1057  343A               	retlw	58	;':'
  5749  1058  3420               	retlw	32	;' '
  5750  1059  3470               	retlw	112	;'p'
  5751  105A  3472               	retlw	114	;'r'
  5752  105B  3469               	retlw	105	;'i'
  5753  105C  346E               	retlw	110	;'n'
  5754  105D  3474               	retlw	116	;'t'
  5755  105E  3420               	retlw	32	;' '
  5756  105F  3474               	retlw	116	;'t'
  5757  1060  3468               	retlw	104	;'h'
  5758  1061  3469               	retlw	105	;'i'
  5759  1062  3473               	retlw	115	;'s'
  5760  1063  3420               	retlw	32	;' '
  5761  1064  3473               	retlw	115	;'s'
  5762  1065  3463               	retlw	99	;'c'
  5763  1066  3472               	retlw	114	;'r'
  5764  1067  3465               	retlw	101	;'e'
  5765  1068  3465               	retlw	101	;'e'
  5766  1069  346E               	retlw	110	;'n'
  5767  106A  340D               	retlw	13
  5768  106B  340A               	retlw	10
  5769  106C  3400               	retlw	0
  5770                           
  5771                           	psect	stringtext8
  5772  106D                     __pstringtext8:	
  5773  106D                     STR_17:	
  5774  106D  3420               	retlw	32	;' '
  5775  106E  3420               	retlw	32	;' '
  5776  106F  3448               	retlw	72	;'H'
  5777  1070  343A               	retlw	58	;':'
  5778  1071  3420               	retlw	32	;' '
  5779  1072  3473               	retlw	115	;'s'
  5780  1073  3465               	retlw	101	;'e'
  5781  1074  3474               	retlw	116	;'t'
  5782  1075  3420               	retlw	32	;' '
  5783  1076  3448               	retlw	72	;'H'
  5784  1077  3449               	retlw	73	;'I'
  5785  1078  3447               	retlw	71	;'G'
  5786  1079  3448               	retlw	72	;'H'
  5787  107A  3420               	retlw	32	;' '
  5788  107B  3476               	retlw	118	;'v'
  5789  107C  346F               	retlw	111	;'o'
  5790  107D  346C               	retlw	108	;'l'
  5791  107E  3474               	retlw	116	;'t'
  5792  107F  3461               	retlw	97	;'a'
  5793  1080  3467               	retlw	103	;'g'
  5794  1081  3465               	retlw	101	;'e'
  5795  1082  340D               	retlw	13
  5796  1083  340A               	retlw	10
  5797  1084  3400               	retlw	0
  5798                           
  5799                           	psect	stringtext9
  5800  1085                     __pstringtext9:	
  5801  1085                     STR_10:	
  5802  1085  340D               	retlw	13
  5803  1086  340A               	retlw	10
  5804  1087  340D               	retlw	13
  5805  1088  340A               	retlw	10
  5806  1089  342D               	retlw	45	;'-'
  5807  108A  342D               	retlw	45	;'-'
  5808  108B  342D               	retlw	45	;'-'
  5809  108C  342D               	retlw	45	;'-'
  5810  108D  342D               	retlw	45	;'-'
  5811  108E  342D               	retlw	45	;'-'
  5812  108F  342D               	retlw	45	;'-'
  5813  1090  342D               	retlw	45	;'-'
  5814  1091  342D               	retlw	45	;'-'
  5815  1092  342D               	retlw	45	;'-'
  5816  1093  342D               	retlw	45	;'-'
  5817  1094  342D               	retlw	45	;'-'
  5818  1095  342D               	retlw	45	;'-'
  5819  1096  342D               	retlw	45	;'-'
  5820  1097  342D               	retlw	45	;'-'
  5821  1098  342D               	retlw	45	;'-'
  5822  1099  340D               	retlw	13
  5823  109A  340A               	retlw	10
  5824  109B  3400               	retlw	0
  5825                           
  5826                           	psect	stringtext10
  5827  109C                     __pstringtext10:	
  5828  109C                     STR_16:	
  5829  109C  3420               	retlw	32	;' '
  5830  109D  3420               	retlw	32	;' '
  5831  109E  344C               	retlw	76	;'L'
  5832  109F  343A               	retlw	58	;':'
  5833  10A0  3420               	retlw	32	;' '
  5834  10A1  3473               	retlw	115	;'s'
  5835  10A2  3465               	retlw	101	;'e'
  5836  10A3  3474               	retlw	116	;'t'
  5837  10A4  3420               	retlw	32	;' '
  5838  10A5  344C               	retlw	76	;'L'
  5839  10A6  344F               	retlw	79	;'O'
  5840  10A7  3457               	retlw	87	;'W'
  5841  10A8  3420               	retlw	32	;' '
  5842  10A9  3476               	retlw	118	;'v'
  5843  10AA  346F               	retlw	111	;'o'
  5844  10AB  346C               	retlw	108	;'l'
  5845  10AC  3474               	retlw	116	;'t'
  5846  10AD  3461               	retlw	97	;'a'
  5847  10AE  3467               	retlw	103	;'g'
  5848  10AF  3465               	retlw	101	;'e'
  5849  10B0  340D               	retlw	13
  5850  10B1  340A               	retlw	10
  5851  10B2  3400               	retlw	0
  5852                           
  5853                           	psect	stringtext11
  5854  10DF                     __pstringtext11:	
  5855  10DF                     STR_15:	
  5856  10DF  3441               	retlw	65	;'A'
  5857  10E0  3476               	retlw	118	;'v'
  5858  10E1  3461               	retlw	97	;'a'
  5859  10E2  3469               	retlw	105	;'i'
  5860  10E3  346C               	retlw	108	;'l'
  5861  10E4  3461               	retlw	97	;'a'
  5862  10E5  3462               	retlw	98	;'b'
  5863  10E6  346C               	retlw	108	;'l'
  5864  10E7  3465               	retlw	101	;'e'
  5865  10E8  3420               	retlw	32	;' '
  5866  10E9  3443               	retlw	67	;'C'
  5867  10EA  346F               	retlw	111	;'o'
  5868  10EB  346D               	retlw	109	;'m'
  5869  10EC  346D               	retlw	109	;'m'
  5870  10ED  3461               	retlw	97	;'a'
  5871  10EE  346E               	retlw	110	;'n'
  5872  10EF  3464               	retlw	100	;'d'
  5873  10F0  3473               	retlw	115	;'s'
  5874  10F1  343A               	retlw	58	;':'
  5875  10F2  340D               	retlw	13
  5876  10F3  340A               	retlw	10
  5877  10F4  3400               	retlw	0
  5878                           
  5879                           	psect	stringtext12
  5880  10F5                     __pstringtext12:	
  5881  10F5                     STR_18:	
  5882  10F5  3420               	retlw	32	;' '
  5883  10F6  3420               	retlw	32	;' '
  5884  10F7  3454               	retlw	84	;'T'
  5885  10F8  343A               	retlw	58	;':'
  5886  10F9  3420               	retlw	32	;' '
  5887  10FA  3473               	retlw	115	;'s'
  5888  10FB  3465               	retlw	101	;'e'
  5889  10FC  3474               	retlw	116	;'t'
  5890  10FD  3420               	retlw	32	;' '
  5891  10FE  3464               	retlw	100	;'d'
  5892  10FF  3465               	retlw	101	;'e'
  5893  1100  346C               	retlw	108	;'l'
  5894  1101  3461               	retlw	97	;'a'
  5895  1102  3479               	retlw	121	;'y'
  5896  1103  3420               	retlw	32	;' '
  5897  1104  3454               	retlw	84	;'T'
  5898  1105  3449               	retlw	73	;'I'
  5899  1106  344D               	retlw	77	;'M'
  5900  1107  3445               	retlw	69	;'E'
  5901  1108  340D               	retlw	13
  5902  1109  340A               	retlw	10
  5903  110A  3400               	retlw	0
  5904                           
  5905                           	psect	stringtext13
  5906  110B                     __pstringtext13:	
  5907  110B                     STR_11:	
  5908  110B  3420               	retlw	32	;' '
  5909  110C  3420               	retlw	32	;' '
  5910  110D  3448               	retlw	72	;'H'
  5911  110E  3465               	retlw	101	;'e'
  5912  110F  346C               	retlw	108	;'l'
  5913  1110  3470               	retlw	112	;'p'
  5914  1111  3420               	retlw	32	;' '
  5915  1112  3453               	retlw	83	;'S'
  5916  1113  3463               	retlw	99	;'c'
  5917  1114  3472               	retlw	114	;'r'
  5918  1115  3465               	retlw	101	;'e'
  5919  1116  3465               	retlw	101	;'e'
  5920  1117  346E               	retlw	110	;'n'
  5921  1118  340D               	retlw	13
  5922  1119  340A               	retlw	10
  5923  111A  340D               	retlw	13
  5924  111B  340A               	retlw	10
  5925  111C  3400               	retlw	0
  5926                           
  5927                           	psect	stringtext14
  5928  1800                     __pstringtext14:	
  5929  1800                     STR_12:	
  5930  1800  3453               	retlw	83	;'S'
  5931  1801  3479               	retlw	121	;'y'
  5932  1802  346E               	retlw	110	;'n'
  5933  1803  3474               	retlw	116	;'t'
  5934  1804  3461               	retlw	97	;'a'
  5935  1805  3478               	retlw	120	;'x'
  5936  1806  343A               	retlw	58	;':'
  5937  1807  3420               	retlw	32	;' '
  5938  1808  3443               	retlw	67	;'C'
  5939  1809  344E               	retlw	78	;'N'
  5940  180A  344E               	retlw	78	;'N'
  5941  180B  344E               	retlw	78	;'N'
  5942  180C  344E               	retlw	78	;'N'
  5943  180D  340D               	retlw	13
  5944  180E  340A               	retlw	10
  5945  180F  3400               	retlw	0
  5946                           
  5947                           	psect	stringtext15
  5948  1810                     __pstringtext15:	
  5949  1810                     STR_13:	
  5950  1810  3420               	retlw	32	;' '
  5951  1811  3420               	retlw	32	;' '
  5952  1812  3443               	retlw	67	;'C'
  5953  1813  343A               	retlw	58	;':'
  5954  1814  3420               	retlw	32	;' '
  5955  1815  3463               	retlw	99	;'c'
  5956  1816  346F               	retlw	111	;'o'
  5957  1817  346D               	retlw	109	;'m'
  5958  1818  346D               	retlw	109	;'m'
  5959  1819  3461               	retlw	97	;'a'
  5960  181A  346E               	retlw	110	;'n'
  5961  181B  3464               	retlw	100	;'d'
  5962  181C  340D               	retlw	13
  5963  181D  340A               	retlw	10
  5964  181E  3400               	retlw	0
  5965                           
  5966                           	psect	stringtext16
  5967  181F                     __pstringtext16:	
  5968  181F                     STR_2:	
  5969  181F  3420               	retlw	32	;' '
  5970  1820  3420               	retlw	32	;' '
  5971  1821  3448               	retlw	72	;'H'
  5972  1822  343A               	retlw	58	;':'
  5973  1823  3420               	retlw	32	;' '
  5974  1824  3400               	retlw	0
  5975                           
  5976                           	psect	stringtext17
  5977  1825                     __pstringtext17:	
  5978  1825                     STR_4:	
  5979  1825  3420               	retlw	32	;' '
  5980  1826  3420               	retlw	32	;' '
  5981  1827  344C               	retlw	76	;'L'
  5982  1828  343A               	retlw	58	;':'
  5983  1829  3420               	retlw	32	;' '
  5984  182A  3400               	retlw	0
  5985                           
  5986                           	psect	stringtext18
  5987  182B                     __pstringtext18:	
  5988  182B                     STR_6:	
  5989  182B  3420               	retlw	32	;' '
  5990  182C  3420               	retlw	32	;' '
  5991  182D  3454               	retlw	84	;'T'
  5992  182E  343A               	retlw	58	;':'
  5993  182F  3420               	retlw	32	;' '
  5994  1830  3400               	retlw	0
  5995                           
  5996                           	psect	stringtext19
  5997  1831                     __pstringtext19:	
  5998  1831                     STR_9:	
  5999  1831  344F               	retlw	79	;'O'
  6000  1832  344B               	retlw	75	;'K'
  6001  1833  340D               	retlw	13
  6002  1834  340A               	retlw	10
  6003  1835  3400               	retlw	0
  6004                           
  6005                           	psect	stringtext20
  6006  1836                     __pstringtext20:	
  6007  1836                     STR_1:	
  6008  1836  343E               	retlw	62	;'>'
  6009  1837  343E               	retlw	62	;'>'
  6010  1838  3420               	retlw	32	;' '
  6011  1839  3420               	retlw	32	;' '
  6012  183A  3400               	retlw	0
  6013                           
  6014                           	psect	stringtext21
  6015  0000                     __pstringtext21:	
  6016  101F                     
  6017                           ; #config settings
  6018  0000                     
  6019                           	psect	cinit
  6020  0036                     start_initialization:	
  6021  0036                     __initialization:	
  6022                           
  6023                           ; Initialize objects allocated to BANK0
  6024  0036  30EF               	movlw	low __pidataBANK0
  6025  0037  0084               	movwf	4
  6026  0038  3096               	movlw	(high __pidataBANK0)| (0+128)
  6027  0039  0085               	movwf	5
  6028  003A  3061               	movlw	low __pdataBANK0
  6029  003B  0086               	movwf	6
  6030  003C  3000               	movlw	high __pdataBANK0
  6031  003D  0087               	movwf	7
  6032  003E  3004               	movlw	4
  6033  003F  3197  271F  3180   	fcall	init_ram
  6034                           
  6035                           ; Initialize objects allocated to BANK1
  6036  0042  3065               	movlw	low __pidataBANK1
  6037  0043  0084               	movwf	4
  6038  0044  3097               	movlw	(high __pidataBANK1)| (0+128)
  6039  0045  0085               	movwf	5
  6040  0046  30E8               	movlw	low __pdataBANK1
  6041  0047  0086               	movwf	6
  6042  0048  3000               	movlw	high __pdataBANK1
  6043  0049  0087               	movwf	7
  6044  004A  3008               	movlw	8
  6045  004B  3197  271F  3180   	fcall	init_ram
  6046                           
  6047                           ; Clear objects allocated to BANK0
  6048  004E  3020               	movlw	low __pbssBANK0
  6049  004F  0084               	movwf	4
  6050  0050  3000               	movlw	high __pbssBANK0
  6051  0051  0085               	movwf	5
  6052  0052  3022               	movlw	34
  6053  0053  3197  2719  3180   	fcall	clear_ram0
  6054                           
  6055                           ; Clear objects allocated to BANK1
  6056  0056  30E0               	movlw	low __pbssBANK1
  6057  0057  0084               	movwf	4
  6058  0058  3000               	movlw	high __pbssBANK1
  6059  0059  0085               	movwf	5
  6060  005A  3008               	movlw	8
  6061  005B  3197  2719  3180   	fcall	clear_ram0
  6062                           
  6063                           ; Clear objects allocated to BANK2
  6064  005E  3020               	movlw	low __pbssBANK2
  6065  005F  0084               	movwf	4
  6066  0060  3001               	movlw	high __pbssBANK2
  6067  0061  0085               	movwf	5
  6068  0062  303F               	movlw	63
  6069  0063  3197  2719  3180   	fcall	clear_ram0
  6070                           
  6071                           ; Clear objects allocated to BANK3
  6072  0066  30A0               	movlw	low __pbssBANK3
  6073  0067  0084               	movwf	4
  6074  0068  3001               	movlw	high __pbssBANK3
  6075  0069  0085               	movwf	5
  6076  006A  3010               	movlw	16
  6077  006B  3197  2719         	fcall	clear_ram0
  6078  006D                     end_of_initialization:	
  6079                           ;End of C runtime variable initialization code
  6080                           
  6081  006D                     __end_of__initialization:	
  6082  006D  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  6083  006E  0020               	movlb	0
  6084  006F  318C  2C17         	ljmp	_main	;jump to C main() function
  6085                           
  6086                           	psect	bssBANK0
  6087  0020                     __pbssBANK0:	
  6088  0020                     _current_duty:	
  6089  0020                     	ds	2
  6090  0022                     _target_duty:	
  6091  0022                     	ds	2
  6092  0024                     _pwm_duty:	
  6093  0024                     	ds	2
  6094  0026                     UartParser@tx_idx:	
  6095  0026                     	ds	1
  6096  0027                     UartParser@st:	
  6097  0027                     	ds	1
  6098  0028                     _isr_timer:	
  6099  0028                     	ds	1
  6100  0029                     UartParser@rx_idx:	
  6101  0029                     	ds	1
  6102  002A                     _system_counter:	
  6103  002A                     	ds	1
  6104  002B                     _st:	
  6105  002B                     	ds	1
  6106  002C                     _chopper_active:	
  6107  002C                     	ds	1
  6108  002D                     _diff_positive:	
  6109  002D                     	ds	1
  6110  002E                     _vcs_sub_st:	
  6111  002E                     	ds	1
  6112  002F                     _vcs_st:	
  6113  002F                     	ds	1
  6114  0030                     _tx_len:	
  6115  0030                     	ds	1
  6116  0031                     _tx_idx:	
  6117  0031                     	ds	1
  6118  0032                     _command_error:	
  6119  0032                     	ds	1
  6120  0033                     _command_pending:	
  6121  0033                     	ds	1
  6122  0034                     _rx_idx:	
  6123  0034                     	ds	1
  6124  0035                     _Commands:	
  6125  0035                     	ds	1
  6126  0036                     _eusartRxLastError:	
  6127  0036                     	ds	1
  6128  0037                     _eusartRxCount:	
  6129  0037                     	ds	1
  6130  0038                     _eusartRxTail:	
  6131  0038                     	ds	1
  6132  0039                     _eusartRxHead:	
  6133  0039                     	ds	1
  6134  003A                     _vdc:	
  6135  003A                     	ds	2
  6136  003C                     _vdc_critic:	
  6137  003C                     	ds	2
  6138  003E                     _vdc_max:	
  6139  003E                     	ds	2
  6140  0040                     _vdc_min:	
  6141  0040                     	ds	2
  6142                           
  6143                           	psect	dataBANK0
  6144  0061                     __pdataBANK0:	
  6145  0061                     _duty_inc:	
  6146  0061                     	ds	2
  6147  0063                     _lock_isr:	
  6148  0063                     	ds	1
  6149  0064                     _init_required:	
  6150  0064                     	ds	1
  6151                           
  6152                           	psect	bssBANK1
  6153  00E0                     __pbssBANK1:	
  6154  00E0                     _duty_count_down:	
  6155  00E0                     	ds	2
  6156  00E2                     _duty_count_up:	
  6157  00E2                     	ds	2
  6158  00E4                     _vdc_prev:	
  6159  00E4                     	ds	2
  6160  00E6                     _tx_string:	
  6161  00E6                     	ds	2
  6162                           
  6163                           	psect	dataBANK1
  6164  00E8                     __pdataBANK1:	
  6165  00E8                     _duty_count_down_max:	
  6166  00E8                     	ds	2
  6167  00EA                     _duty_pwm_dec:	
  6168  00EA                     	ds	2
  6169  00EC                     _duty_count_up_max:	
  6170  00EC                     	ds	2
  6171  00EE                     _duty_pwm_inc:	
  6172  00EE                     	ds	2
  6173                           
  6174                           	psect	bssBANK2
  6175  0120                     __pbssBANK2:	
  6176  0120                     UartParser@rx_buffer:	
  6177  0120                     	ds	32
  6178  0140                     _eusartRxStatusBuffer:	
  6179  0140                     	ds	8
  6180  0148                     _eusartRxBuffer:	
  6181  0148                     	ds	8
  6182  0150                     _delta_duty:	
  6183  0150                     	ds	2
  6184  0152                     _diff_vdc:	
  6185  0152                     	ds	2
  6186  0154                     _VoltageLow:	
  6187  0154                     	ds	2
  6188  0156                     _VoltageHigh:	
  6189  0156                     	ds	2
  6190  0158                     _DeltaT:	
  6191  0158                     	ds	2
  6192  015A                     _num_buffer:	
  6193  015A                     	ds	5
  6194                           
  6195                           	psect	bssBANK3
  6196  01A0                     __pbssBANK3:	
  6197  01A0                     _rx_buffer:	
  6198  01A0                     	ds	16
  6199                           
  6200                           	psect	inittext
  6201  171F                     init_ram:	
  6202  171F  00FE               	movwf	126
  6203  1720                     initloop:	
  6204  1720  0012               	moviw fsr0++
  6205  1721  001E               	movwi fsr1++
  6206  1722  0BFE               	decfsz	126,f
  6207  1723  2F20               	goto	initloop
  6208  1724  3400               	retlw	0
  6209                           
  6210                           	psect	clrtext
  6211  1719                     clear_ram0:	
  6212                           ;	Called with FSR0 containing the base address, and
  6213                           ;	WREG with the size to clear
  6214                           
  6215  1719  0064               	clrwdt	;clear the watchdog before getting into this loop
  6216  171A                     clrloop0:	
  6217  171A  0180               	clrf	0	;clear RAM location pointed to by FSR
  6218  171B  3101               	addfsr 0,1
  6219  171C  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  6220  171D  2F1A               	goto	clrloop0	;have we reached the end yet?
  6221  171E  3400               	retlw	0	;all done for this memory range, return
  6222                           
  6223                           	psect	cstackBANK3
  6224  01B0                     __pcstackBANK3:	
  6225  01B0                     uart_task@xor:	
  6226                           
  6227                           ; 1 bytes @ 0x0
  6228  01B0                     	ds	1
  6229  01B1                     uart_task@xor_1523:	
  6230                           
  6231                           ; 1 bytes @ 0x1
  6232  01B1                     	ds	1
  6233  01B2                     uart_task@val_1524:	
  6234                           
  6235                           ; 2 bytes @ 0x2
  6236  01B2                     	ds	2
  6237  01B4                     uart_task@i:	
  6238                           
  6239                           ; 1 bytes @ 0x4
  6240  01B4                     	ds	1
  6241  01B5                     uart_task@i_1522:	
  6242                           
  6243                           ; 1 bytes @ 0x5
  6244  01B5                     	ds	1
  6245  01B6                     uart_task@val:	
  6246                           
  6247                           ; 2 bytes @ 0x6
  6248  01B6                     	ds	2
  6249  01B8                     uart_task@val_1516:	
  6250                           
  6251                           ; 2 bytes @ 0x8
  6252  01B8                     	ds	2
  6253                           
  6254                           	psect	cstackBANK1
  6255  00A0                     __pcstackBANK1:	
  6256  00A0                     save_to_flash@buff:	
  6257                           
  6258                           ; 64 bytes @ 0x0
  6259  00A0                     	ds	64
  6260                           
  6261                           	psect	cstackCOMMON
  6262  0070                     __pcstackCOMMON:	
  6263  0070                     ?_EUSART_Receive_ISR:	
  6264  0070                     ?_EUSART_DefaultFramingErrorHandler:	
  6265                           ; 1 bytes @ 0x0
  6266                           
  6267  0070                     ??_EUSART_DefaultFramingErrorHandler:	
  6268                           ; 1 bytes @ 0x0
  6269                           
  6270  0070                     ?_EUSART_DefaultOverrunErrorHandler:	
  6271                           ; 1 bytes @ 0x0
  6272                           
  6273  0070                     ??_EUSART_DefaultOverrunErrorHandler:	
  6274                           ; 1 bytes @ 0x0
  6275                           
  6276  0070                     ?_EUSART_DefaultErrorHandler:	
  6277                           ; 1 bytes @ 0x0
  6278                           
  6279  0070                     ?_EUSART_RxDataHandler:	
  6280                           ; 1 bytes @ 0x0
  6281                           
  6282  0070                     ??_EUSART_RxDataHandler:	
  6283                           ; 1 bytes @ 0x0
  6284                           
  6285  0070                     ?_TMR2_DefaultInterruptHandler:	
  6286                           ; 1 bytes @ 0x0
  6287                           
  6288  0070                     ??_TMR2_DefaultInterruptHandler:	
  6289                           ; 1 bytes @ 0x0
  6290                           
  6291  0070                     ?_TMR2_CallBack:	
  6292                           ; 1 bytes @ 0x0
  6293                           
  6294  0070                     ?_ADC_DefaultInterruptHandler:	
  6295                           ; 1 bytes @ 0x0
  6296                           
  6297  0070                     ??_ADC_DefaultInterruptHandler:	
  6298                           ; 1 bytes @ 0x0
  6299                           
  6300  0070                     ?_PIN_MANAGER_Initialize:	
  6301                           ; 1 bytes @ 0x0
  6302                           
  6303  0070                     ?_OSCILLATOR_Initialize:	
  6304                           ; 1 bytes @ 0x0
  6305                           
  6306  0070                     ?_WDT_Initialize:	
  6307                           ; 1 bytes @ 0x0
  6308                           
  6309  0070                     ?_TMR4_Initialize:	
  6310                           ; 1 bytes @ 0x0
  6311                           
  6312  0070                     ?_TMR1_Initialize:	
  6313                           ; 1 bytes @ 0x0
  6314                           
  6315  0070                     ?_TMR1_ISR:	
  6316                           ; 1 bytes @ 0x0
  6317                           
  6318  0070                     ?_TMR1_DefaultInterruptHandler:	
  6319                           ; 1 bytes @ 0x0
  6320                           
  6321  0070                     ??_TMR1_DefaultInterruptHandler:	
  6322                           ; 1 bytes @ 0x0
  6323                           
  6324  0070                     ?_TMR1_CallBack:	
  6325                           ; 1 bytes @ 0x0
  6326                           
  6327  0070                     ?_start_chopper:	
  6328                           ; 1 bytes @ 0x0
  6329                           
  6330  0070                     ?_init_chopper:	
  6331                           ; 1 bytes @ 0x0
  6332                           
  6333  0070                     ?_uart_start:	
  6334                           ; 1 bytes @ 0x0
  6335                           
  6336  0070                     ?_uart_task:	
  6337                           ; 1 bytes @ 0x0
  6338                           
  6339  0070                     ?_TMR2_DutyControlHandler_ISR:	
  6340                           ; 1 bytes @ 0x0
  6341                           
  6342  0070                     ?_ADC_VoltageControlHandler_ISR:	
  6343                           ; 1 bytes @ 0x0
  6344                           
  6345  0070                     ?_TMR1_SystemTimer_ISR:	
  6346                           ; 1 bytes @ 0x0
  6347                           
  6348  0070                     ??_TMR1_SystemTimer_ISR:	
  6349                           ; 1 bytes @ 0x0
  6350                           
  6351  0070                     ?_PWM3_Initialize:	
  6352                           ; 1 bytes @ 0x0
  6353                           
  6354  0070                     ?_PWM3_LoadDutyValue:	
  6355                           ; 1 bytes @ 0x0
  6356                           
  6357  0070                     ?_EUSART_Initialize:	
  6358                           ; 1 bytes @ 0x0
  6359                           
  6360  0070                     ?_TMR2_Initialize:	
  6361                           ; 1 bytes @ 0x0
  6362                           
  6363  0070                     ?_TMR2_StartTimer:	
  6364                           ; 1 bytes @ 0x0
  6365                           
  6366  0070                     ?_TMR2_ISR:	
  6367                           ; 1 bytes @ 0x0
  6368                           
  6369  0070                     ?_ADC_Initialize:	
  6370                           ; 1 bytes @ 0x0
  6371                           
  6372  0070                     ?_ADC_SelectChannel:	
  6373                           ; 1 bytes @ 0x0
  6374                           
  6375  0070                     ?_ADC_StartConversion:	
  6376                           ; 1 bytes @ 0x0
  6377                           
  6378  0070                     ?_ADC_ISR:	
  6379                           ; 1 bytes @ 0x0
  6380                           
  6381  0070                     ?_SYSTEM_Initialize:	
  6382                           ; 1 bytes @ 0x0
  6383                           
  6384  0070                     ?_INTERRUPT_InterruptManager:	
  6385                           ; 1 bytes @ 0x0
  6386                           
  6387  0070                     ?_TMR1_WriteTimer:	
  6388                           ; 1 bytes @ 0x0
  6389                           
  6390  0070                     ?_main:	
  6391                           ; 1 bytes @ 0x0
  6392                           
  6393  0070                     ?_LoadDutyValue:	
  6394                           ; 1 bytes @ 0x0
  6395                           
  6396  0070                     ?_stop_chopper:	
  6397                           ; 1 bytes @ 0x0
  6398                           
  6399  0070                     ?_is_chopper_active:	
  6400                           ; 1 bytes @ 0x0
  6401                           
  6402  0070                     ?_save_to_flash:	
  6403                           ; 1 bytes @ 0x0
  6404                           
  6405  0070                     ?_EUSART_CommandHandler_ISR:	
  6406                           ; 1 bytes @ 0x0
  6407                           
  6408  0070                     ??_EUSART_CommandHandler_ISR:	
  6409                           ; 1 bytes @ 0x0
  6410                           
  6411  0070                     ?_ADC_GetConversionResult:	
  6412                           ; 1 bytes @ 0x0
  6413                           
  6414  0070                     ?___lmul:	
  6415                           ; 2 bytes @ 0x0
  6416                           
  6417  0070                     ?___lldiv:	
  6418                           ; 4 bytes @ 0x0
  6419                           
  6420  0070                     PWM3_LoadDutyValue@dutyValue:	
  6421                           ; 4 bytes @ 0x0
  6422                           
  6423  0070                     TMR1_WriteTimer@timerVal:	
  6424                           ; 2 bytes @ 0x0
  6425                           
  6426  0070                     LoadDutyValue@duty:	
  6427                           ; 2 bytes @ 0x0
  6428                           
  6429  0070                     ___lmul@multiplier:	
  6430                           ; 2 bytes @ 0x0
  6431                           
  6432  0070                     ___lldiv@divisor:	
  6433                           ; 4 bytes @ 0x0
  6434                           
  6435                           
  6436                           ; 4 bytes @ 0x0
  6437  0070                     	ds	1
  6438  0071                     ??_EUSART_Receive_ISR:	
  6439  0071                     ??_EUSART_DefaultErrorHandler:	
  6440                           ; 1 bytes @ 0x1
  6441                           
  6442  0071                     ??_TMR1_CallBack:	
  6443                           ; 1 bytes @ 0x1
  6444                           
  6445  0071                     EUSART_CommandHandler_ISR@rx_data:	
  6446                           ; 1 bytes @ 0x1
  6447                           
  6448                           
  6449                           ; 1 bytes @ 0x1
  6450  0071                     	ds	1
  6451  0072                     ??_TMR1_ISR:	
  6452  0072                     ??_PWM3_LoadDutyValue:	
  6453                           ; 1 bytes @ 0x2
  6454                           
  6455  0072                     ??_ADC_GetConversionResult:	
  6456                           ; 1 bytes @ 0x2
  6457                           
  6458  0072                     ??_TMR1_WriteTimer:	
  6459                           ; 1 bytes @ 0x2
  6460                           
  6461  0072                     ??_LoadDutyValue:	
  6462                           ; 1 bytes @ 0x2
  6463                           
  6464                           
  6465                           ; 1 bytes @ 0x2
  6466  0072                     	ds	2
  6467  0074                     ??_TMR2_DutyControlHandler_ISR:	
  6468  0074                     ___lmul@multiplicand:	
  6469                           ; 1 bytes @ 0x4
  6470                           
  6471  0074                     ___lldiv@dividend:	
  6472                           ; 4 bytes @ 0x4
  6473                           
  6474                           
  6475                           ; 4 bytes @ 0x4
  6476  0074                     	ds	2
  6477  0076                     ??_TMR2_CallBack:	
  6478  0076                     ??_TMR2_ISR:	
  6479                           ; 1 bytes @ 0x6
  6480                           
  6481                           
  6482                           ; 1 bytes @ 0x6
  6483  0076                     	ds	2
  6484  0078                     ??___lmul:	
  6485  0078                     ??___lldiv:	
  6486                           ; 1 bytes @ 0x8
  6487                           
  6488  0078                     ___lmul@product:	
  6489                           ; 1 bytes @ 0x8
  6490                           
  6491                           
  6492                           ; 4 bytes @ 0x8
  6493  0078                     	ds	1
  6494  0079                     ___lldiv@quotient:	
  6495                           
  6496                           ; 4 bytes @ 0x9
  6497  0079                     	ds	4
  6498  007D                     ___lldiv@counter:	
  6499                           
  6500                           ; 1 bytes @ 0xD
  6501  007D                     	ds	1
  6502  007E                     ??_ADC_ISR:	
  6503  007E                     ??_INTERRUPT_InterruptManager:	
  6504                           ; 1 bytes @ 0xE
  6505                           
  6506                           
  6507                           	psect	cstackBANK0
  6508  0042                     __pcstackBANK0:	
  6509                           ; 1 bytes @ 0xE
  6510                           
  6511  0042                     ??_ADC_VoltageControlHandler_ISR:	
  6512                           
  6513                           ; 1 bytes @ 0x0
  6514  0042                     	ds	4
  6515  0046                     ADC_VoltageControlHandler_ISR@force_inc:	
  6516                           
  6517                           ; 1 bytes @ 0x4
  6518  0046                     	ds	1
  6519  0047                     ADC_VoltageControlHandler_ISR@pwm:	
  6520                           
  6521                           ; 4 bytes @ 0x5
  6522  0047                     	ds	4
  6523  004B                     ?_EUSART_SetRxInterruptHandler:	
  6524  004B                     ?_EUSART_SetFramingErrorHandler:	
  6525                           ; 1 bytes @ 0x9
  6526                           
  6527  004B                     ?_EUSART_SetOverrunErrorHandler:	
  6528                           ; 1 bytes @ 0x9
  6529                           
  6530  004B                     ?_EUSART_SetErrorHandler:	
  6531                           ; 1 bytes @ 0x9
  6532                           
  6533  004B                     ?_FLASH_EraseBlock:	
  6534                           ; 1 bytes @ 0x9
  6535                           
  6536  004B                     ?_TMR2_SetInterruptHandler:	
  6537                           ; 1 bytes @ 0x9
  6538                           
  6539  004B                     ?_ADC_SetInterruptHandler:	
  6540                           ; 1 bytes @ 0x9
  6541                           
  6542  004B                     ??_PIN_MANAGER_Initialize:	
  6543                           ; 1 bytes @ 0x9
  6544                           
  6545  004B                     ??_OSCILLATOR_Initialize:	
  6546                           ; 1 bytes @ 0x9
  6547                           
  6548  004B                     ??_WDT_Initialize:	
  6549                           ; 1 bytes @ 0x9
  6550                           
  6551  004B                     ??_TMR4_Initialize:	
  6552                           ; 1 bytes @ 0x9
  6553                           
  6554  004B                     ?_TMR1_SetInterruptHandler:	
  6555                           ; 1 bytes @ 0x9
  6556                           
  6557  004B                     ?_set_vdc_speed:	
  6558                           ; 1 bytes @ 0x9
  6559                           
  6560  004B                     ??_PWM3_Initialize:	
  6561                           ; 1 bytes @ 0x9
  6562                           
  6563  004B                     ??_TMR2_StartTimer:	
  6564                           ; 1 bytes @ 0x9
  6565                           
  6566  004B                     ??_ADC_SelectChannel:	
  6567                           ; 1 bytes @ 0x9
  6568                           
  6569  004B                     ??_ADC_StartConversion:	
  6570                           ; 1 bytes @ 0x9
  6571                           
  6572  004B                     ?_set_vdc_threshold:	
  6573                           ; 1 bytes @ 0x9
  6574                           
  6575  004B                     ??_stop_chopper:	
  6576                           ; 1 bytes @ 0x9
  6577                           
  6578  004B                     ??_is_chopper_active:	
  6579                           ; 1 bytes @ 0x9
  6580                           
  6581  004B                     ?_FLASH_ReadWord:	
  6582                           ; 1 bytes @ 0x9
  6583                           
  6584  004B                     ?_get_vdc_min:	
  6585                           ; 2 bytes @ 0x9
  6586                           
  6587  004B                     ?_get_vdc_max:	
  6588                           ; 2 bytes @ 0x9
  6589                           
  6590  004B                     ?_get_vdc_critic:	
  6591                           ; 2 bytes @ 0x9
  6592                           
  6593  004B                     ?_get_vdc:	
  6594                           ; 2 bytes @ 0x9
  6595                           
  6596  004B                     ?___wmul:	
  6597                           ; 2 bytes @ 0x9
  6598                           
  6599  004B                     EUSART_SetFramingErrorHandler@interruptHandler:	
  6600                           ; 2 bytes @ 0x9
  6601                           
  6602  004B                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  6603                           ; 2 bytes @ 0x9
  6604                           
  6605  004B                     EUSART_SetErrorHandler@interruptHandler:	
  6606                           ; 2 bytes @ 0x9
  6607                           
  6608  004B                     EUSART_SetRxInterruptHandler@interruptHandler:	
  6609                           ; 2 bytes @ 0x9
  6610                           
  6611  004B                     FLASH_ReadWord@flashAddr:	
  6612                           ; 2 bytes @ 0x9
  6613                           
  6614  004B                     FLASH_EraseBlock@startAddr:	
  6615                           ; 2 bytes @ 0x9
  6616                           
  6617  004B                     TMR2_SetInterruptHandler@InterruptHandler:	
  6618                           ; 2 bytes @ 0x9
  6619                           
  6620  004B                     ADC_SetInterruptHandler@InterruptHandler:	
  6621                           ; 2 bytes @ 0x9
  6622                           
  6623  004B                     TMR1_SetInterruptHandler@InterruptHandler:	
  6624                           ; 2 bytes @ 0x9
  6625                           
  6626  004B                     set_vdc_threshold@v_val:	
  6627                           ; 2 bytes @ 0x9
  6628                           
  6629  004B                     set_vdc_speed@msDelay:	
  6630                           ; 2 bytes @ 0x9
  6631                           
  6632  004B                     ___wmul@multiplier:	
  6633                           ; 2 bytes @ 0x9
  6634                           
  6635                           
  6636                           ; 2 bytes @ 0x9
  6637  004B                     	ds	1
  6638  004C                     ADC_SelectChannel@channel:	
  6639                           
  6640                           ; 1 bytes @ 0xA
  6641  004C                     	ds	1
  6642  004D                     ??_EUSART_SetRxInterruptHandler:	
  6643  004D                     ??_EUSART_SetFramingErrorHandler:	
  6644                           ; 1 bytes @ 0xB
  6645                           
  6646  004D                     ??_EUSART_SetOverrunErrorHandler:	
  6647                           ; 1 bytes @ 0xB
  6648                           
  6649  004D                     ??_EUSART_SetErrorHandler:	
  6650                           ; 1 bytes @ 0xB
  6651                           
  6652  004D                     ??_FLASH_EraseBlock:	
  6653                           ; 1 bytes @ 0xB
  6654                           
  6655  004D                     ??_TMR2_SetInterruptHandler:	
  6656                           ; 1 bytes @ 0xB
  6657                           
  6658  004D                     ??_ADC_SetInterruptHandler:	
  6659                           ; 1 bytes @ 0xB
  6660                           
  6661  004D                     ??_TMR1_Initialize:	
  6662                           ; 1 bytes @ 0xB
  6663                           
  6664  004D                     ??_TMR1_SetInterruptHandler:	
  6665                           ; 1 bytes @ 0xB
  6666                           
  6667  004D                     ??_set_vdc_speed:	
  6668                           ; 1 bytes @ 0xB
  6669                           
  6670  004D                     ??_init_chopper:	
  6671                           ; 1 bytes @ 0xB
  6672                           
  6673  004D                     ??_uart_start:	
  6674                           ; 1 bytes @ 0xB
  6675                           
  6676  004D                     ??_EUSART_Initialize:	
  6677                           ; 1 bytes @ 0xB
  6678                           
  6679  004D                     ??_FLASH_ReadWord:	
  6680                           ; 1 bytes @ 0xB
  6681                           
  6682  004D                     ??_TMR2_Initialize:	
  6683                           ; 1 bytes @ 0xB
  6684                           
  6685  004D                     ??_ADC_Initialize:	
  6686                           ; 1 bytes @ 0xB
  6687                           
  6688  004D                     ??_SYSTEM_Initialize:	
  6689                           ; 1 bytes @ 0xB
  6690                           
  6691  004D                     ??_get_vdc_min:	
  6692                           ; 1 bytes @ 0xB
  6693                           
  6694  004D                     ??_get_vdc_max:	
  6695                           ; 1 bytes @ 0xB
  6696                           
  6697  004D                     ??_get_vdc_critic:	
  6698                           ; 1 bytes @ 0xB
  6699                           
  6700  004D                     ??_get_vdc:	
  6701                           ; 1 bytes @ 0xB
  6702                           
  6703  004D                     FLASH_ReadWord@GIEBitValue:	
  6704                           ; 1 bytes @ 0xB
  6705                           
  6706  004D                     FLASH_EraseBlock@GIEBitValue:	
  6707                           ; 1 bytes @ 0xB
  6708                           
  6709  004D                     set_vdc_threshold@v_target:	
  6710                           ; 1 bytes @ 0xB
  6711                           
  6712  004D                     ___wmul@multiplicand:	
  6713                           ; 1 bytes @ 0xB
  6714                           
  6715                           
  6716                           ; 2 bytes @ 0xB
  6717  004D                     	ds	1
  6718  004E                     ?_FLASH_WriteBlock:	
  6719  004E                     ?_set_vdc_min:	
  6720                           ; 1 bytes @ 0xC
  6721                           
  6722  004E                     ?_set_vdc_max:	
  6723                           ; 1 bytes @ 0xC
  6724                           
  6725  004E                     ?_set_vdc_critic:	
  6726                           ; 1 bytes @ 0xC
  6727                           
  6728  004E                     ??_start_chopper:	
  6729                           ; 1 bytes @ 0xC
  6730                           
  6731  004E                     ??_set_vdc_threshold:	
  6732                           ; 1 bytes @ 0xC
  6733                           
  6734  004E                     FLASH_WriteBlock@writeAddr:	
  6735                           ; 1 bytes @ 0xC
  6736                           
  6737  004E                     set_vdc_min@vmin:	
  6738                           ; 2 bytes @ 0xC
  6739                           
  6740  004E                     set_vdc_max@vmax:	
  6741                           ; 2 bytes @ 0xC
  6742                           
  6743  004E                     set_vdc_critic@vc:	
  6744                           ; 2 bytes @ 0xC
  6745                           
  6746                           
  6747                           ; 2 bytes @ 0xC
  6748  004E                     	ds	1
  6749  004F                     ??___wmul:	
  6750  004F                     ___wmul@product:	
  6751                           ; 1 bytes @ 0xD
  6752                           
  6753                           
  6754                           ; 2 bytes @ 0xD
  6755  004F                     	ds	1
  6756  0050                     ??_set_vdc_min:	
  6757  0050                     ??_set_vdc_max:	
  6758                           ; 1 bytes @ 0xE
  6759                           
  6760  0050                     ??_set_vdc_critic:	
  6761                           ; 1 bytes @ 0xE
  6762                           
  6763  0050                     FLASH_WriteBlock@flashWordArray:	
  6764                           ; 1 bytes @ 0xE
  6765                           
  6766                           
  6767                           ; 1 bytes @ 0xE
  6768  0050                     	ds	1
  6769  0051                     ??_FLASH_WriteBlock:	
  6770  0051                     ?_get_vdc_speed:	
  6771                           ; 1 bytes @ 0xF
  6772                           
  6773                           
  6774                           ; 2 bytes @ 0xF
  6775  0051                     	ds	2
  6776  0053                     ??_get_vdc_speed:	
  6777                           
  6778                           ; 1 bytes @ 0x11
  6779  0053                     	ds	1
  6780  0054                     FLASH_WriteBlock@blockStartAddr:	
  6781                           
  6782                           ; 2 bytes @ 0x12
  6783  0054                     	ds	2
  6784  0056                     FLASH_WriteBlock@GIEBitValue:	
  6785                           
  6786                           ; 1 bytes @ 0x14
  6787  0056                     	ds	1
  6788  0057                     FLASH_WriteBlock@i:	
  6789                           
  6790                           ; 1 bytes @ 0x15
  6791  0057                     	ds	1
  6792  0058                     ??_save_to_flash:	
  6793                           
  6794                           ; 1 bytes @ 0x16
  6795  0058                     	ds	1
  6796  0059                     ??_uart_task:	
  6797                           
  6798                           ; 1 bytes @ 0x17
  6799  0059                     	ds	4
  6800  005D                     ??_main:	
  6801  005D                     main@chopper_state:	
  6802                           ; 1 bytes @ 0x1B
  6803                           
  6804                           
  6805                           ; 2 bytes @ 0x1B
  6806  005D                     	ds	2
  6807  005F                     main@val:	
  6808                           
  6809                           ; 2 bytes @ 0x1D
  6810  005F                     	ds	2
  6811                           
  6812                           	psect	maintext
  6813  0C17                     __pmaintext:	
  6814 ;;
  6815 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  6816 ;;
  6817 ;; *************** function _main *****************
  6818 ;; Defined at:
  6819 ;;		line 52 in file "main.c"
  6820 ;; Parameters:    Size  Location     Type
  6821 ;;		None
  6822 ;; Auto vars:     Size  Location     Type
  6823 ;;  val             2   29[BANK0 ] unsigned short 
  6824 ;;  chopper_stat    2   27[BANK0 ] unsigned short 
  6825 ;; Return value:  Size  Location     Type
  6826 ;;                  1    wreg      void 
  6827 ;; Registers used:
  6828 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6829 ;; Tracked objects:
  6830 ;;		On entry : B1F/0
  6831 ;;		On exit  : 0/0
  6832 ;;		Unchanged: 0/0
  6833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6834 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6835 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6837 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6838 ;;Total ram usage:        4 bytes
  6839 ;; Hardware stack levels required when called:    9
  6840 ;; This function calls:
  6841 ;;		_FLASH_ReadWord
  6842 ;;		_SYSTEM_Initialize
  6843 ;;		_init_chopper
  6844 ;;		_set_vdc_critic
  6845 ;;		_set_vdc_max
  6846 ;;		_set_vdc_min
  6847 ;;		_set_vdc_speed
  6848 ;;		_start_chopper
  6849 ;;		_uart_start
  6850 ;;		_uart_task
  6851 ;; This function is called by:
  6852 ;;		Startup code after reset
  6853 ;; This function uses a non-reentrant model
  6854 ;;
  6855                           
  6856                           
  6857                           ;psect for function _main
  6858  0C17                     _main:	
  6859                           
  6860                           ;main.c: 55:     SYSTEM_Initialize();
  6861                           
  6862                           ;incstack = 0
  6863                           ; Regs used in _main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6864  0C17  3189  2133  318C   	fcall	_SYSTEM_Initialize
  6865                           
  6866                           ;main.c: 60:     {;main.c: 61:         uint16_t chopper_state;;main.c: 62:         chopp
      +                          er_state = FLASH_ReadWord(0x1F00);
  6867  0C1A  3000               	movlw	0
  6868  0C1B  0020               	movlb	0	; select bank0
  6869  0C1C  00CB               	movwf	FLASH_ReadWord@flashAddr
  6870  0C1D  301F               	movlw	31
  6871  0C1E  00CC               	movwf	FLASH_ReadWord@flashAddr+1
  6872  0C1F  3189  2185  318C   	fcall	_FLASH_ReadWord
  6873  0C22  084C               	movf	?_FLASH_ReadWord+1,w
  6874  0C23  00DE               	movwf	main@chopper_state+1
  6875  0C24  084B               	movf	?_FLASH_ReadWord,w
  6876  0C25  00DD               	movwf	main@chopper_state
  6877                           
  6878                           ;main.c: 63:         if( chopper_state == 0x0ABC || chopper_state == 0x0CBA )
  6879  0C26  30BC               	movlw	188
  6880  0C27  065D               	xorwf	main@chopper_state,w
  6881  0C28  300A               	movlw	10
  6882  0C29  1903               	skipnz
  6883  0C2A  065E               	xorwf	main@chopper_state+1,w
  6884  0C2B  1903               	btfsc	3,2
  6885  0C2C  2C34               	goto	l3598
  6886  0C2D  30BA               	movlw	186
  6887  0C2E  065D               	xorwf	main@chopper_state,w
  6888  0C2F  300C               	movlw	12
  6889  0C30  1903               	skipnz
  6890  0C31  065E               	xorwf	main@chopper_state+1,w
  6891  0C32  1D03               	btfss	3,2
  6892  0C33  2CA3               	goto	l3626
  6893  0C34                     l3598:	
  6894                           
  6895                           ;main.c: 64:         {;main.c: 65:             uint16_t val;;main.c: 66:             val
      +                           = FLASH_ReadWord(0x1F00 +1);
  6896  0C34  3001               	movlw	1
  6897  0C35  00CB               	movwf	FLASH_ReadWord@flashAddr
  6898  0C36  301F               	movlw	31
  6899  0C37  00CC               	movwf	FLASH_ReadWord@flashAddr+1
  6900  0C38  3189  2185  318C   	fcall	_FLASH_ReadWord
  6901  0C3B  084C               	movf	?_FLASH_ReadWord+1,w
  6902  0C3C  00E0               	movwf	main@val+1
  6903  0C3D  084B               	movf	?_FLASH_ReadWord,w
  6904  0C3E  00DF               	movwf	main@val
  6905                           
  6906                           ;main.c: 67:             if( val <= 800 )
  6907  0C3F  3003               	movlw	3
  6908  0C40  0260               	subwf	main@val+1,w
  6909  0C41  3021               	movlw	33
  6910  0C42  1903               	skipnz
  6911  0C43  025F               	subwf	main@val,w
  6912  0C44  1803               	skipnc
  6913  0C45  2C4D               	goto	l3604
  6914                           
  6915                           ;main.c: 68:                 set_vdc_min(val);
  6916  0C46  0860               	movf	main@val+1,w
  6917  0C47  00CF               	movwf	set_vdc_min@vmin+1
  6918  0C48  085F               	movf	main@val,w
  6919  0C49  00CE               	movwf	set_vdc_min@vmin
  6920  0C4A  3197  27AE  318C   	fcall	_set_vdc_min
  6921  0C4D                     l3604:	
  6922                           
  6923                           ;main.c: 69:             val = FLASH_ReadWord(0x1F00 +2);
  6924  0C4D  3002               	movlw	2
  6925  0C4E  00CB               	movwf	FLASH_ReadWord@flashAddr
  6926  0C4F  301F               	movlw	31
  6927  0C50  00CC               	movwf	FLASH_ReadWord@flashAddr+1
  6928  0C51  3189  2185  318C   	fcall	_FLASH_ReadWord
  6929  0C54  084C               	movf	?_FLASH_ReadWord+1,w
  6930  0C55  00E0               	movwf	main@val+1
  6931  0C56  084B               	movf	?_FLASH_ReadWord,w
  6932  0C57  00DF               	movwf	main@val
  6933                           
  6934                           ;main.c: 70:             if( val <= 800 )
  6935  0C58  3003               	movlw	3
  6936  0C59  0260               	subwf	main@val+1,w
  6937  0C5A  3021               	movlw	33
  6938  0C5B  1903               	skipnz
  6939  0C5C  025F               	subwf	main@val,w
  6940  0C5D  1803               	skipnc
  6941  0C5E  2C66               	goto	l3610
  6942                           
  6943                           ;main.c: 71:                 set_vdc_max(val);
  6944  0C5F  0860               	movf	main@val+1,w
  6945  0C60  00CF               	movwf	set_vdc_max@vmax+1
  6946  0C61  085F               	movf	main@val,w
  6947  0C62  00CE               	movwf	set_vdc_max@vmax
  6948  0C63  3197  27A3  318C   	fcall	_set_vdc_max
  6949  0C66                     l3610:	
  6950                           
  6951                           ;main.c: 72:             val = FLASH_ReadWord(0x1F00 +3);
  6952  0C66  3003               	movlw	3
  6953  0C67  00CB               	movwf	FLASH_ReadWord@flashAddr
  6954  0C68  301F               	movlw	31
  6955  0C69  00CC               	movwf	FLASH_ReadWord@flashAddr+1
  6956  0C6A  3189  2185  318C   	fcall	_FLASH_ReadWord
  6957  0C6D  084C               	movf	?_FLASH_ReadWord+1,w
  6958  0C6E  00E0               	movwf	main@val+1
  6959  0C6F  084B               	movf	?_FLASH_ReadWord,w
  6960  0C70  00DF               	movwf	main@val
  6961                           
  6962                           ;main.c: 73:             if( val <= 800 )
  6963  0C71  3003               	movlw	3
  6964  0C72  0260               	subwf	main@val+1,w
  6965  0C73  3021               	movlw	33
  6966  0C74  1903               	skipnz
  6967  0C75  025F               	subwf	main@val,w
  6968  0C76  1803               	skipnc
  6969  0C77  2C7F               	goto	l3616
  6970                           
  6971                           ;main.c: 74:                 set_vdc_critic(val);
  6972  0C78  0860               	movf	main@val+1,w
  6973  0C79  00CF               	movwf	set_vdc_critic@vc+1
  6974  0C7A  085F               	movf	main@val,w
  6975  0C7B  00CE               	movwf	set_vdc_critic@vc
  6976  0C7C  3197  2798  318C   	fcall	_set_vdc_critic
  6977  0C7F                     l3616:	
  6978                           
  6979                           ;main.c: 75:             val = FLASH_ReadWord(0x1F00 +4);
  6980  0C7F  3004               	movlw	4
  6981  0C80  00CB               	movwf	FLASH_ReadWord@flashAddr
  6982  0C81  301F               	movlw	31
  6983  0C82  00CC               	movwf	FLASH_ReadWord@flashAddr+1
  6984  0C83  3189  2185  318C   	fcall	_FLASH_ReadWord
  6985  0C86  084C               	movf	?_FLASH_ReadWord+1,w
  6986  0C87  00E0               	movwf	main@val+1
  6987  0C88  084B               	movf	?_FLASH_ReadWord,w
  6988  0C89  00DF               	movwf	main@val
  6989                           
  6990                           ;main.c: 76:             if( val <= 10000 )
  6991  0C8A  3027               	movlw	39
  6992  0C8B  0260               	subwf	main@val+1,w
  6993  0C8C  3011               	movlw	17
  6994  0C8D  1903               	skipnz
  6995  0C8E  025F               	subwf	main@val,w
  6996  0C8F  1803               	skipnc
  6997  0C90  2C98               	goto	l3622
  6998                           
  6999                           ;main.c: 77:                 set_vdc_speed(val);
  7000  0C91  0860               	movf	main@val+1,w
  7001  0C92  00CC               	movwf	set_vdc_speed@msDelay+1
  7002  0C93  085F               	movf	main@val,w
  7003  0C94  00CB               	movwf	set_vdc_speed@msDelay
  7004  0C95  3189  2119  318C   	fcall	_set_vdc_speed
  7005  0C98                     l3622:	
  7006                           
  7007                           ;main.c: 78:             if( chopper_state == 0x0ABC )
  7008  0C98  30BC               	movlw	188
  7009  0C99  0020               	movlb	0	; select bank0
  7010  0C9A  065D               	xorwf	main@chopper_state,w
  7011  0C9B  300A               	movlw	10
  7012  0C9C  1903               	skipnz
  7013  0C9D  065E               	xorwf	main@chopper_state+1,w
  7014  0C9E  1D03               	btfss	3,2
  7015  0C9F  2CA3               	goto	l3626
  7016                           
  7017                           ;main.c: 79:                 start_chopper();
  7018  0CA0  3188  20D0  318C   	fcall	_start_chopper
  7019  0CA3                     l3626:	
  7020                           
  7021                           ;main.c: 81:     };main.c: 84:     (INTCONbits.GIE = 1);
  7022  0CA3  178B               	bsf	11,7	;volatile
  7023                           
  7024                           ;main.c: 87:     (INTCONbits.PEIE = 1);
  7025  0CA4  170B               	bsf	11,6	;volatile
  7026                           
  7027                           ;main.c: 95:     init_chopper();
  7028  0CA5  3189  21E3  318C   	fcall	_init_chopper
  7029                           
  7030                           ;main.c: 96:     uart_start();
  7031  0CA8  3188  20BA  318C   	fcall	_uart_start
  7032  0CAB                     l3630:	
  7033                           
  7034                           ;main.c: 98:     {;main.c: 99:         uart_task();
  7035  0CAB  318D  25E7  318C   	fcall	_uart_task
  7036  0CAE  0064               	clrwdt	;# 
  7037  0CAF  2CAB               	goto	l3630
  7038  0CB0                     __end_of_main:	
  7039                           
  7040                           	psect	text1
  7041  0DE7                     __ptext1:	
  7042 ;; *************** function _uart_task *****************
  7043 ;; Defined at:
  7044 ;;		line 60 in file "UartParser.c"
  7045 ;; Parameters:    Size  Location     Type
  7046 ;;		None
  7047 ;; Auto vars:     Size  Location     Type
  7048 ;;  val             2    2[BANK3 ] unsigned short 
  7049 ;;  val             2    8[BANK3 ] unsigned short 
  7050 ;;  i               1    5[BANK3 ] unsigned char 
  7051 ;;  xor             1    1[BANK3 ] unsigned char 
  7052 ;;  val             2    6[BANK3 ] unsigned short 
  7053 ;;  i               1    4[BANK3 ] unsigned char 
  7054 ;;  xor             1    0[BANK3 ] unsigned char 
  7055 ;; Return value:  Size  Location     Type
  7056 ;;                  1    wreg      void 
  7057 ;; Registers used:
  7058 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7059 ;; Tracked objects:
  7060 ;;		On entry : 0/0
  7061 ;;		On exit  : 1C/0
  7062 ;;		Unchanged: 0/0
  7063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7064 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7065 ;;      Locals:         0       0       0       0      10       0       0       0       0       0       0       0       
      +0       0
  7066 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7067 ;;      Totals:         0       4       0       0      10       0       0       0       0       0       0       0       
      +0       0
  7068 ;;Total ram usage:       14 bytes
  7069 ;; Hardware stack levels used:    1
  7070 ;; Hardware stack levels required when called:    8
  7071 ;; This function calls:
  7072 ;;		_get_vdc
  7073 ;;		_get_vdc_critic
  7074 ;;		_get_vdc_max
  7075 ;;		_get_vdc_min
  7076 ;;		_get_vdc_speed
  7077 ;;		_is_chopper_active
  7078 ;;		_save_to_flash
  7079 ;;		_set_vdc_critic
  7080 ;;		_set_vdc_max
  7081 ;;		_set_vdc_min
  7082 ;;		_set_vdc_speed
  7083 ;;		_start_chopper
  7084 ;;		_stop_chopper
  7085 ;; This function is called by:
  7086 ;;		_main
  7087 ;; This function uses a non-reentrant model
  7088 ;;
  7089                           
  7090                           
  7091                           ;psect for function _uart_task
  7092  0DE7                     _uart_task:	
  7093                           
  7094                           ;UartParser.c: 62:     if( st == SHUTDOWN )
  7095                           
  7096                           ;incstack = 0
  7097                           ; Regs used in _uart_task: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7098  0DE7  0020               	movlb	0	; select bank0
  7099  0DE8  0827               	movf	UartParser@st,w
  7100  0DE9  1903               	btfsc	3,2
  7101  0DEA  0008               	return
  7102                           
  7103                           ;UartParser.c: 64:     if( st == INIT )
  7104  0DEB  0327               	decf	UartParser@st,w
  7105  0DEC  1D03               	btfss	3,2
  7106  0DED  2DF9               	goto	l3428
  7107                           
  7108                           ;UartParser.c: 65:     {;UartParser.c: 66:         isr_timer = ((uint8_t)((uint8_t)~syst
      +                          em_counter)+((uint8_t)1));
  7109  0DEE  032A               	decf	_system_counter,w
  7110  0DEF  3AFF               	xorlw	255
  7111  0DF0  00D9               	movwf	??_uart_task
  7112  0DF1  0859               	movf	??_uart_task,w
  7113  0DF2  00A8               	movwf	_isr_timer
  7114                           
  7115                           ;UartParser.c: 67:         lock_isr = 0;
  7116  0DF3  01E3               	clrf	_lock_isr
  7117                           
  7118                           ;UartParser.c: 68:         st = WAIT_IDLE;
  7119  0DF4  3002               	movlw	2
  7120  0DF5  00D9               	movwf	??_uart_task
  7121  0DF6  0859               	movf	??_uart_task,w
  7122  0DF7  00A7               	movwf	UartParser@st
  7123  0DF8  0008               	return
  7124  0DF9                     l3428:	
  7125                           
  7126                           ;UartParser.c: 71:     if( st == WAIT_IDLE )
  7127  0DF9  3002               	movlw	2
  7128  0DFA  0627               	xorwf	UartParser@st,w
  7129  0DFB  1D03               	btfss	3,2
  7130  0DFC  2E0A               	goto	l3440
  7131                           
  7132                           ;UartParser.c: 72:     {;UartParser.c: 73:         if( ((uint8_t)(system_counter + isr_t
      +                          imer) >= ((uint8_t)3)) == 0 )
  7133  0DFD  0828               	movf	_isr_timer,w
  7134  0DFE  072A               	addwf	_system_counter,w
  7135  0DFF  00D9               	movwf	??_uart_task
  7136  0E00  3003               	movlw	3
  7137  0E01  0259               	subwf	??_uart_task,w
  7138  0E02  1C03               	btfss	3,0
  7139  0E03  0008               	return
  7140                           
  7141                           ;UartParser.c: 75:         rx_idx = 0;
  7142  0E04  01A9               	clrf	UartParser@rx_idx
  7143                           
  7144                           ;UartParser.c: 76:         st = READ_FRAME;
  7145  0E05  3003               	movlw	3
  7146  0E06  00D9               	movwf	??_uart_task
  7147  0E07  0859               	movf	??_uart_task,w
  7148  0E08  00A7               	movwf	UartParser@st
  7149  0E09  0008               	return
  7150  0E0A                     l3440:	
  7151                           
  7152                           ;UartParser.c: 79:     if( st == READ_FRAME )
  7153  0E0A  3003               	movlw	3
  7154  0E0B  0627               	xorwf	UartParser@st,w
  7155  0E0C  1D03               	btfss	3,2
  7156  0E0D  2E5D               	goto	l3478
  7157                           
  7158                           ;UartParser.c: 80:     {;UartParser.c: 81:         if( rx_idx == 0 )
  7159  0E0E  0829               	movf	UartParser@rx_idx,w
  7160  0E0F  1903               	btfsc	3,2
  7161  0E10  0008               	return
  7162                           
  7163                           ;UartParser.c: 83:         if( ((uint8_t)(system_counter + isr_timer) >= ((uint8_t)3)) =
      +                          = 0 )
  7164  0E11  0828               	movf	_isr_timer,w
  7165  0E12  072A               	addwf	_system_counter,w
  7166  0E13  00D9               	movwf	??_uart_task
  7167  0E14  3003               	movlw	3
  7168  0E15  0259               	subwf	??_uart_task,w
  7169  0E16  1C03               	btfss	3,0
  7170  0E17  0008               	return
  7171                           
  7172                           ;UartParser.c: 86:         lock_isr = 1;
  7173  0E18  01E3               	clrf	_lock_isr
  7174  0E19  0AE3               	incf	_lock_isr,f
  7175                           
  7176                           ;UartParser.c: 88:         uint8_t i;;UartParser.c: 89:         uint8_t xor = rx_buffer[
      +                          0];
  7177  0E1A  0022               	movlb	2	; select bank2
  7178  0E1B  0820               	movf	UartParser@rx_buffer^(0+256),w
  7179  0E1C  0020               	movlb	0	; select bank0
  7180  0E1D  00D9               	movwf	??_uart_task
  7181  0E1E  0859               	movf	??_uart_task,w
  7182  0E1F  0023               	movlb	3	; select bank3
  7183  0E20  00B0               	movwf	uart_task@xor^(0+384)
  7184                           
  7185                           ;UartParser.c: 90:         for( i=1 ; i<rx_idx ; i++ )
  7186  0E21  01B4               	clrf	uart_task@i^(0+384)
  7187  0E22  0AB4               	incf	uart_task@i^(0+384),f
  7188  0E23                     l3458:	
  7189  0E23  0020               	movlb	0	; select bank0
  7190  0E24  0829               	movf	UartParser@rx_idx,w
  7191  0E25  0023               	movlb	3	; select bank3
  7192  0E26  0234               	subwf	uart_task@i^(0+384),w
  7193  0E27  1803               	btfsc	3,0
  7194  0E28  2E3B               	goto	l3460
  7195                           
  7196                           ;UartParser.c: 91:             xor ^= rx_buffer[i];
  7197  0E29  0834               	movf	uart_task@i^(0+384),w
  7198  0E2A  3E20               	addlw	(low (UartParser@rx_buffer| (0+256)))& (0+255)
  7199  0E2B  0086               	movwf	6
  7200  0E2C  3001               	movlw	1	; select bank2/3
  7201  0E2D  0087               	movwf	7
  7202  0E2E  0801               	movf	1,w
  7203  0E2F  0020               	movlb	0	; select bank0
  7204  0E30  00D9               	movwf	??_uart_task
  7205  0E31  0859               	movf	??_uart_task,w
  7206  0E32  0023               	movlb	3	; select bank3
  7207  0E33  06B0               	xorwf	uart_task@xor^(0+384),f
  7208  0E34  3001               	movlw	1
  7209  0E35  0020               	movlb	0	; select bank0
  7210  0E36  00D9               	movwf	??_uart_task
  7211  0E37  0859               	movf	??_uart_task,w
  7212  0E38  0023               	movlb	3	; select bank3
  7213  0E39  07B4               	addwf	uart_task@i^(0+384),f
  7214  0E3A  2E23               	goto	l3458
  7215  0E3B                     l3460:	
  7216                           
  7217                           ;UartParser.c: 92:         if( xor != 0 ||
  7218  0E3B  0830               	movf	uart_task@xor^(0+384),w
  7219  0E3C  1D03               	btfss	3,2
  7220  0E3D  2E54               	goto	l3472
  7221  0E3E  30AA               	movlw	170
  7222  0E3F  0022               	movlb	2	; select bank2
  7223  0E40  0620               	xorwf	UartParser@rx_buffer^(0+256),w
  7224  0E41  1903               	btfsc	3,2
  7225  0E42  2E4B               	goto	l3468
  7226  0E43  3055               	movlw	85
  7227  0E44  0620               	xorwf	UartParser@rx_buffer^(0+256),w
  7228  0E45  1903               	btfsc	3,2
  7229  0E46  2E4B               	goto	l3468
  7230  0E47  30A5               	movlw	165
  7231  0E48  0620               	xorwf	UartParser@rx_buffer^(0+256),w
  7232  0E49  1D03               	btfss	3,2
  7233  0E4A  2E54               	goto	l3472
  7234  0E4B                     l3468:	
  7235  0E4B  300B               	movlw	11
  7236  0E4C  0020               	movlb	0	; select bank0
  7237  0E4D  0629               	xorwf	UartParser@rx_idx,w
  7238  0E4E  1903               	btfsc	3,2
  7239  0E4F  2E58               	goto	l3474
  7240  0E50  3002               	movlw	2
  7241  0E51  0629               	xorwf	UartParser@rx_idx,w
  7242  0E52  1903               	btfsc	3,2
  7243  0E53  2E58               	goto	l3474
  7244  0E54                     l3472:	
  7245                           
  7246                           ;UartParser.c: 95:         {;UartParser.c: 96:             rx_idx = 0;
  7247  0E54  0020               	movlb	0	; select bank0
  7248  0E55  01A9               	clrf	UartParser@rx_idx
  7249                           
  7250                           ;UartParser.c: 97:             lock_isr = 0;
  7251  0E56  01E3               	clrf	_lock_isr
  7252                           
  7253                           ;UartParser.c: 98:         }
  7254  0E57  0008               	return
  7255  0E58                     l3474:	
  7256                           
  7257                           ;UartParser.c: 100:             st = PARSE_FRAME;
  7258  0E58  3004               	movlw	4
  7259  0E59  00D9               	movwf	??_uart_task
  7260  0E5A  0859               	movf	??_uart_task,w
  7261  0E5B  00A7               	movwf	UartParser@st
  7262  0E5C  0008               	return
  7263  0E5D                     l3478:	
  7264                           
  7265                           ;UartParser.c: 103:     if( st == PARSE_FRAME )
  7266  0E5D  3004               	movlw	4
  7267  0E5E  0627               	xorwf	UartParser@st,w
  7268  0E5F  1D03               	btfss	3,2
  7269  0E60  2FE6               	goto	l3580
  7270                           
  7271                           ;UartParser.c: 104:     {;UartParser.c: 105:         if( rx_buffer[0] == SET_PARAMS && r
      +                          x_idx == 11 )
  7272  0E61  30AA               	movlw	170
  7273  0E62  0022               	movlb	2	; select bank2
  7274  0E63  0620               	xorwf	UartParser@rx_buffer^(0+256),w
  7275  0E64  1D03               	btfss	3,2
  7276  0E65  2F20               	goto	l3516
  7277  0E66  300B               	movlw	11
  7278  0E67  0020               	movlb	0	; select bank0
  7279  0E68  0629               	xorwf	UartParser@rx_idx,w
  7280  0E69  1D03               	btfss	3,2
  7281  0E6A  2F20               	goto	l3516
  7282                           
  7283                           ;UartParser.c: 106:         {;UartParser.c: 107:             uint16_t val;;UartParser.c:
      +                           108:             val = rx_buffer[1];
  7284  0E6B  0022               	movlb	2	; select bank2
  7285  0E6C  0821               	movf	(UartParser@rx_buffer^(0+256)+1),w
  7286  0E6D  0020               	movlb	0	; select bank0
  7287  0E6E  00D9               	movwf	??_uart_task
  7288  0E6F  01DA               	clrf	??_uart_task+1
  7289  0E70  0859               	movf	??_uart_task,w
  7290  0E71  0023               	movlb	3	; select bank3
  7291  0E72  00B6               	movwf	uart_task@val^(0+384)
  7292  0E73  0020               	movlb	0	; select bank0
  7293  0E74  085A               	movf	??_uart_task+1,w
  7294  0E75  0023               	movlb	3	; select bank3
  7295  0E76  00B7               	movwf	(uart_task@val+1)^(0+384)
  7296                           
  7297                           ;UartParser.c: 109:             val = val<<8 | rx_buffer[2];
  7298  0E77  0022               	movlb	2	; select bank2
  7299  0E78  0822               	movf	(UartParser@rx_buffer^(0+256)+2),w
  7300  0E79  0020               	movlb	0	; select bank0
  7301  0E7A  00D9               	movwf	??_uart_task
  7302  0E7B  01DA               	clrf	??_uart_task+1
  7303  0E7C  0023               	movlb	3	; select bank3
  7304  0E7D  0836               	movf	uart_task@val^(0+384),w
  7305  0E7E  0020               	movlb	0	; select bank0
  7306  0E7F  00DC               	movwf	??_uart_task+3
  7307  0E80  01DB               	clrf	??_uart_task+2
  7308  0E81  0859               	movf	??_uart_task,w
  7309  0E82  045B               	iorwf	??_uart_task+2,w
  7310  0E83  0023               	movlb	3	; select bank3
  7311  0E84  00B6               	movwf	uart_task@val^(0+384)
  7312  0E85  0020               	movlb	0	; select bank0
  7313  0E86  085A               	movf	??_uart_task+1,w
  7314  0E87  045C               	iorwf	??_uart_task+3,w
  7315  0E88  0023               	movlb	3	; select bank3
  7316  0E89  00B7               	movwf	(uart_task@val+1)^(0+384)
  7317                           
  7318                           ;UartParser.c: 110:             set_vdc_min(val);
  7319  0E8A  0837               	movf	(uart_task@val+1)^(0+384),w
  7320  0E8B  0020               	movlb	0	; select bank0
  7321  0E8C  00CF               	movwf	set_vdc_min@vmin+1
  7322  0E8D  0023               	movlb	3	; select bank3
  7323  0E8E  0836               	movf	uart_task@val^(0+384),w
  7324  0E8F  0020               	movlb	0	; select bank0
  7325  0E90  00CE               	movwf	set_vdc_min@vmin
  7326  0E91  3197  27AE  318D   	fcall	_set_vdc_min
  7327                           
  7328                           ;UartParser.c: 111:             val = rx_buffer[3];
  7329  0E94  0022               	movlb	2	; select bank2
  7330  0E95  0823               	movf	(UartParser@rx_buffer^(0+256)+3),w
  7331  0E96  0020               	movlb	0	; select bank0
  7332  0E97  00D9               	movwf	??_uart_task
  7333  0E98  01DA               	clrf	??_uart_task+1
  7334  0E99  0859               	movf	??_uart_task,w
  7335  0E9A  0023               	movlb	3	; select bank3
  7336  0E9B  00B6               	movwf	uart_task@val^(0+384)
  7337  0E9C  0020               	movlb	0	; select bank0
  7338  0E9D  085A               	movf	??_uart_task+1,w
  7339  0E9E  0023               	movlb	3	; select bank3
  7340  0E9F  00B7               	movwf	(uart_task@val+1)^(0+384)
  7341                           
  7342                           ;UartParser.c: 112:             val = val<<8 | rx_buffer[4];
  7343  0EA0  0022               	movlb	2	; select bank2
  7344  0EA1  0824               	movf	(UartParser@rx_buffer^(0+256)+4),w
  7345  0EA2  0020               	movlb	0	; select bank0
  7346  0EA3  00D9               	movwf	??_uart_task
  7347  0EA4  01DA               	clrf	??_uart_task+1
  7348  0EA5  0023               	movlb	3	; select bank3
  7349  0EA6  0836               	movf	uart_task@val^(0+384),w
  7350  0EA7  0020               	movlb	0	; select bank0
  7351  0EA8  00DC               	movwf	??_uart_task+3
  7352  0EA9  01DB               	clrf	??_uart_task+2
  7353  0EAA  0859               	movf	??_uart_task,w
  7354  0EAB  045B               	iorwf	??_uart_task+2,w
  7355  0EAC  0023               	movlb	3	; select bank3
  7356  0EAD  00B6               	movwf	uart_task@val^(0+384)
  7357  0EAE  0020               	movlb	0	; select bank0
  7358  0EAF  085A               	movf	??_uart_task+1,w
  7359  0EB0  045C               	iorwf	??_uart_task+3,w
  7360  0EB1  0023               	movlb	3	; select bank3
  7361  0EB2  00B7               	movwf	(uart_task@val+1)^(0+384)
  7362                           
  7363                           ;UartParser.c: 113:             set_vdc_max(val);
  7364  0EB3  0837               	movf	(uart_task@val+1)^(0+384),w
  7365  0EB4  0020               	movlb	0	; select bank0
  7366  0EB5  00CF               	movwf	set_vdc_max@vmax+1
  7367  0EB6  0023               	movlb	3	; select bank3
  7368  0EB7  0836               	movf	uart_task@val^(0+384),w
  7369  0EB8  0020               	movlb	0	; select bank0
  7370  0EB9  00CE               	movwf	set_vdc_max@vmax
  7371  0EBA  3197  27A3  318D   	fcall	_set_vdc_max
  7372                           
  7373                           ;UartParser.c: 114:             val = rx_buffer[5];
  7374  0EBD  0022               	movlb	2	; select bank2
  7375  0EBE  0825               	movf	(UartParser@rx_buffer^(0+256)+5),w
  7376  0EBF  0020               	movlb	0	; select bank0
  7377  0EC0  00D9               	movwf	??_uart_task
  7378  0EC1  01DA               	clrf	??_uart_task+1
  7379  0EC2  0859               	movf	??_uart_task,w
  7380  0EC3  0023               	movlb	3	; select bank3
  7381  0EC4  00B6               	movwf	uart_task@val^(0+384)
  7382  0EC5  0020               	movlb	0	; select bank0
  7383  0EC6  085A               	movf	??_uart_task+1,w
  7384  0EC7  0023               	movlb	3	; select bank3
  7385  0EC8  00B7               	movwf	(uart_task@val+1)^(0+384)
  7386                           
  7387                           ;UartParser.c: 115:             val = val<<8 | rx_buffer[6];
  7388  0EC9  0022               	movlb	2	; select bank2
  7389  0ECA  0826               	movf	(UartParser@rx_buffer^(0+256)+6),w
  7390  0ECB  0020               	movlb	0	; select bank0
  7391  0ECC  00D9               	movwf	??_uart_task
  7392  0ECD  01DA               	clrf	??_uart_task+1
  7393  0ECE  0023               	movlb	3	; select bank3
  7394  0ECF  0836               	movf	uart_task@val^(0+384),w
  7395  0ED0  0020               	movlb	0	; select bank0
  7396  0ED1  00DC               	movwf	??_uart_task+3
  7397  0ED2  01DB               	clrf	??_uart_task+2
  7398  0ED3  0859               	movf	??_uart_task,w
  7399  0ED4  045B               	iorwf	??_uart_task+2,w
  7400  0ED5  0023               	movlb	3	; select bank3
  7401  0ED6  00B6               	movwf	uart_task@val^(0+384)
  7402  0ED7  0020               	movlb	0	; select bank0
  7403  0ED8  085A               	movf	??_uart_task+1,w
  7404  0ED9  045C               	iorwf	??_uart_task+3,w
  7405  0EDA  0023               	movlb	3	; select bank3
  7406  0EDB  00B7               	movwf	(uart_task@val+1)^(0+384)
  7407                           
  7408                           ;UartParser.c: 116:             set_vdc_critic(val);
  7409  0EDC  0837               	movf	(uart_task@val+1)^(0+384),w
  7410  0EDD  0020               	movlb	0	; select bank0
  7411  0EDE  00CF               	movwf	set_vdc_critic@vc+1
  7412  0EDF  0023               	movlb	3	; select bank3
  7413  0EE0  0836               	movf	uart_task@val^(0+384),w
  7414  0EE1  0020               	movlb	0	; select bank0
  7415  0EE2  00CE               	movwf	set_vdc_critic@vc
  7416  0EE3  3197  2798  318D   	fcall	_set_vdc_critic
  7417                           
  7418                           ;UartParser.c: 117:             val = rx_buffer[7];
  7419  0EE6  0022               	movlb	2	; select bank2
  7420  0EE7  0827               	movf	(UartParser@rx_buffer^(0+256)+7),w
  7421  0EE8  0020               	movlb	0	; select bank0
  7422  0EE9  00D9               	movwf	??_uart_task
  7423  0EEA  01DA               	clrf	??_uart_task+1
  7424  0EEB  0859               	movf	??_uart_task,w
  7425  0EEC  0023               	movlb	3	; select bank3
  7426  0EED  00B6               	movwf	uart_task@val^(0+384)
  7427  0EEE  0020               	movlb	0	; select bank0
  7428  0EEF  085A               	movf	??_uart_task+1,w
  7429  0EF0  0023               	movlb	3	; select bank3
  7430  0EF1  00B7               	movwf	(uart_task@val+1)^(0+384)
  7431                           
  7432                           ;UartParser.c: 118:             val = val<<8 | rx_buffer[8];
  7433  0EF2  0022               	movlb	2	; select bank2
  7434  0EF3  0828               	movf	(UartParser@rx_buffer^(0+256)+8),w
  7435  0EF4  0020               	movlb	0	; select bank0
  7436  0EF5  00D9               	movwf	??_uart_task
  7437  0EF6  01DA               	clrf	??_uart_task+1
  7438  0EF7  0023               	movlb	3	; select bank3
  7439  0EF8  0836               	movf	uart_task@val^(0+384),w
  7440  0EF9  0020               	movlb	0	; select bank0
  7441  0EFA  00DC               	movwf	??_uart_task+3
  7442  0EFB  01DB               	clrf	??_uart_task+2
  7443  0EFC  0859               	movf	??_uart_task,w
  7444  0EFD  045B               	iorwf	??_uart_task+2,w
  7445  0EFE  0023               	movlb	3	; select bank3
  7446  0EFF  00B6               	movwf	uart_task@val^(0+384)
  7447  0F00  0020               	movlb	0	; select bank0
  7448  0F01  085A               	movf	??_uart_task+1,w
  7449  0F02  045C               	iorwf	??_uart_task+3,w
  7450  0F03  0023               	movlb	3	; select bank3
  7451  0F04  00B7               	movwf	(uart_task@val+1)^(0+384)
  7452                           
  7453                           ;UartParser.c: 119:             set_vdc_speed(val);
  7454  0F05  0837               	movf	(uart_task@val+1)^(0+384),w
  7455  0F06  0020               	movlb	0	; select bank0
  7456  0F07  00CC               	movwf	set_vdc_speed@msDelay+1
  7457  0F08  0023               	movlb	3	; select bank3
  7458  0F09  0836               	movf	uart_task@val^(0+384),w
  7459  0F0A  0020               	movlb	0	; select bank0
  7460  0F0B  00CB               	movwf	set_vdc_speed@msDelay
  7461  0F0C  3189  2119  318D   	fcall	_set_vdc_speed
  7462                           
  7463                           ;UartParser.c: 120:             if( rx_buffer[9] == 0 )
  7464  0F0F  0022               	movlb	2	; select bank2
  7465  0F10  0829               	movf	(UartParser@rx_buffer^(0+256)+9),w
  7466  0F11  1D03               	btfss	3,2
  7467  0F12  2F17               	goto	l3506
  7468                           
  7469                           ;UartParser.c: 121:                 stop_chopper();
  7470  0F13  3188  2073  318D   	fcall	_stop_chopper
  7471  0F16  2F1A               	goto	l3508
  7472  0F17                     l3506:	
  7473                           
  7474                           ;UartParser.c: 123:                 start_chopper();
  7475  0F17  3188  20D0  318D   	fcall	_start_chopper
  7476  0F1A                     l3508:	
  7477                           
  7478                           ;UartParser.c: 124:             save_to_flash();
  7479  0F1A  318A  2297         	fcall	_save_to_flash
  7480  0F1C                     l3510:	
  7481                           
  7482                           ;UartParser.c: 125:             st = INIT;
  7483  0F1C  0020               	movlb	0	; select bank0
  7484  0F1D  01A7               	clrf	UartParser@st
  7485  0F1E  0AA7               	incf	UartParser@st,f
  7486  0F1F  0008               	return
  7487  0F20                     l3516:	
  7488                           
  7489                           ;UartParser.c: 129:         {;UartParser.c: 130:             if( rx_buffer[0] == GET_PAR
      +                          AMS && rx_idx == 2 )
  7490  0F20  3055               	movlw	85
  7491  0F21  0022               	movlb	2	; select bank2
  7492  0F22  0620               	xorwf	UartParser@rx_buffer^(0+256),w
  7493  0F23  1D03               	btfss	3,2
  7494  0F24  2FBB               	goto	l3562
  7495  0F25  3002               	movlw	2
  7496  0F26  0020               	movlb	0	; select bank0
  7497  0F27  0629               	xorwf	UartParser@rx_idx,w
  7498  0F28  1D03               	btfss	3,2
  7499  0F29  2FBB               	goto	l3562
  7500                           
  7501                           ;UartParser.c: 131:             {;UartParser.c: 132:                 uint16_t val;;UartP
      +                          arser.c: 133:                 val = get_vdc_min();
  7502  0F2A  3197  2702  318D   	fcall	_get_vdc_min
  7503  0F2D  084C               	movf	?_get_vdc_min+1,w
  7504  0F2E  0023               	movlb	3	; select bank3
  7505  0F2F  00B9               	movwf	(uart_task@val_1516+1)^(0+384)
  7506  0F30  0020               	movlb	0	; select bank0
  7507  0F31  084B               	movf	?_get_vdc_min,w
  7508  0F32  0023               	movlb	3	; select bank3
  7509  0F33  00B8               	movwf	uart_task@val_1516^(0+384)
  7510                           
  7511                           ;UartParser.c: 134:                 rx_buffer[1] = (val>>8) & 0xFF;
  7512  0F34  0839               	movf	(uart_task@val_1516^(0+384)+1),w
  7513  0F35  0020               	movlb	0	; select bank0
  7514  0F36  00D9               	movwf	??_uart_task
  7515  0F37  0859               	movf	??_uart_task,w
  7516  0F38  0022               	movlb	2	; select bank2
  7517  0F39  00A1               	movwf	(UartParser@rx_buffer^(0+256)+1)
  7518                           
  7519                           ;UartParser.c: 135:                 rx_buffer[2] = val & 0xFF;
  7520  0F3A  0023               	movlb	3	; select bank3
  7521  0F3B  0838               	movf	uart_task@val_1516^(0+384),w
  7522  0F3C  0020               	movlb	0	; select bank0
  7523  0F3D  00D9               	movwf	??_uart_task
  7524  0F3E  0859               	movf	??_uart_task,w
  7525  0F3F  0022               	movlb	2	; select bank2
  7526  0F40  00A2               	movwf	(UartParser@rx_buffer^(0+256)+2)
  7527                           
  7528                           ;UartParser.c: 136:                 val = get_vdc_max();
  7529  0F41  3197  2713  318D   	fcall	_get_vdc_max
  7530  0F44  084C               	movf	?_get_vdc_max+1,w
  7531  0F45  0023               	movlb	3	; select bank3
  7532  0F46  00B9               	movwf	(uart_task@val_1516+1)^(0+384)
  7533  0F47  0020               	movlb	0	; select bank0
  7534  0F48  084B               	movf	?_get_vdc_max,w
  7535  0F49  0023               	movlb	3	; select bank3
  7536  0F4A  00B8               	movwf	uart_task@val_1516^(0+384)
  7537                           
  7538                           ;UartParser.c: 137:                 rx_buffer[3] = (val>>8) & 0xFF;
  7539  0F4B  0839               	movf	(uart_task@val_1516^(0+384)+1),w
  7540  0F4C  0020               	movlb	0	; select bank0
  7541  0F4D  00D9               	movwf	??_uart_task
  7542  0F4E  0859               	movf	??_uart_task,w
  7543  0F4F  0022               	movlb	2	; select bank2
  7544  0F50  00A3               	movwf	(UartParser@rx_buffer^(0+256)+3)
  7545                           
  7546                           ;UartParser.c: 138:                 rx_buffer[4] = val & 0xFF;
  7547  0F51  0023               	movlb	3	; select bank3
  7548  0F52  0838               	movf	uart_task@val_1516^(0+384),w
  7549  0F53  0020               	movlb	0	; select bank0
  7550  0F54  00D9               	movwf	??_uart_task
  7551  0F55  0859               	movf	??_uart_task,w
  7552  0F56  0022               	movlb	2	; select bank2
  7553  0F57  00A4               	movwf	(UartParser@rx_buffer^(0+256)+4)
  7554                           
  7555                           ;UartParser.c: 139:                 val = get_vdc_critic();
  7556  0F58  3197  270D  318D   	fcall	_get_vdc_critic
  7557  0F5B  084C               	movf	?_get_vdc_critic+1,w
  7558  0F5C  0023               	movlb	3	; select bank3
  7559  0F5D  00B9               	movwf	(uart_task@val_1516+1)^(0+384)
  7560  0F5E  0020               	movlb	0	; select bank0
  7561  0F5F  084B               	movf	?_get_vdc_critic,w
  7562  0F60  0023               	movlb	3	; select bank3
  7563  0F61  00B8               	movwf	uart_task@val_1516^(0+384)
  7564                           
  7565                           ;UartParser.c: 140:                 rx_buffer[5] = (val>>8) & 0xFF;
  7566  0F62  0839               	movf	(uart_task@val_1516^(0+384)+1),w
  7567  0F63  0020               	movlb	0	; select bank0
  7568  0F64  00D9               	movwf	??_uart_task
  7569  0F65  0859               	movf	??_uart_task,w
  7570  0F66  0022               	movlb	2	; select bank2
  7571  0F67  00A5               	movwf	(UartParser@rx_buffer^(0+256)+5)
  7572                           
  7573                           ;UartParser.c: 141:                 rx_buffer[6] = val & 0xFF;
  7574  0F68  0023               	movlb	3	; select bank3
  7575  0F69  0838               	movf	uart_task@val_1516^(0+384),w
  7576  0F6A  0020               	movlb	0	; select bank0
  7577  0F6B  00D9               	movwf	??_uart_task
  7578  0F6C  0859               	movf	??_uart_task,w
  7579  0F6D  0022               	movlb	2	; select bank2
  7580  0F6E  00A6               	movwf	(UartParser@rx_buffer^(0+256)+6)
  7581                           
  7582                           ;UartParser.c: 142:                 val = get_vdc_speed();
  7583  0F6F  3188  2091  318D   	fcall	_get_vdc_speed
  7584  0F72  0852               	movf	?_get_vdc_speed+1,w
  7585  0F73  0023               	movlb	3	; select bank3
  7586  0F74  00B9               	movwf	(uart_task@val_1516+1)^(0+384)
  7587  0F75  0020               	movlb	0	; select bank0
  7588  0F76  0851               	movf	?_get_vdc_speed,w
  7589  0F77  0023               	movlb	3	; select bank3
  7590  0F78  00B8               	movwf	uart_task@val_1516^(0+384)
  7591                           
  7592                           ;UartParser.c: 143:                 rx_buffer[7] = (val>>8) & 0xFF;
  7593  0F79  0839               	movf	(uart_task@val_1516^(0+384)+1),w
  7594  0F7A  0020               	movlb	0	; select bank0
  7595  0F7B  00D9               	movwf	??_uart_task
  7596  0F7C  0859               	movf	??_uart_task,w
  7597  0F7D  0022               	movlb	2	; select bank2
  7598  0F7E  00A7               	movwf	(UartParser@rx_buffer^(0+256)+7)
  7599                           
  7600                           ;UartParser.c: 144:                 rx_buffer[8] = val & 0xFF;
  7601  0F7F  0023               	movlb	3	; select bank3
  7602  0F80  0838               	movf	uart_task@val_1516^(0+384),w
  7603  0F81  0020               	movlb	0	; select bank0
  7604  0F82  00D9               	movwf	??_uart_task
  7605  0F83  0859               	movf	??_uart_task,w
  7606  0F84  0022               	movlb	2	; select bank2
  7607  0F85  00A8               	movwf	(UartParser@rx_buffer^(0+256)+8)
  7608                           
  7609                           ;UartParser.c: 145:                 rx_buffer[9] = is_chopper_active();
  7610  0F86  3196  26DA  318D   	fcall	_is_chopper_active
  7611  0F89  00D9               	movwf	??_uart_task
  7612  0F8A  0859               	movf	??_uart_task,w
  7613  0F8B  0022               	movlb	2	; select bank2
  7614  0F8C  00A9               	movwf	(UartParser@rx_buffer^(0+256)+9)
  7615                           
  7616                           ;UartParser.c: 146:                 uint8_t i;;UartParser.c: 147:                 uint8_
      +                          t xor = rx_buffer[0];
  7617  0F8D  0820               	movf	UartParser@rx_buffer^(0+256),w
  7618  0F8E  0020               	movlb	0	; select bank0
  7619  0F8F  00D9               	movwf	??_uart_task
  7620  0F90  0859               	movf	??_uart_task,w
  7621  0F91  0023               	movlb	3	; select bank3
  7622  0F92  00B1               	movwf	uart_task@xor_1523^(0+384)
  7623                           
  7624                           ;UartParser.c: 148:                 for( i=1 ; i<10 ; i++ )
  7625  0F93  01B5               	clrf	uart_task@i_1522^(0+384)
  7626  0F94  0AB5               	incf	uart_task@i_1522^(0+384),f
  7627  0F95                     l3550:	
  7628                           
  7629                           ;UartParser.c: 149:                     xor ^= rx_buffer[i];
  7630  0F95  0835               	movf	uart_task@i_1522^(0+384),w
  7631  0F96  3E20               	addlw	(low (UartParser@rx_buffer| (0+256)))& (0+255)
  7632  0F97  0086               	movwf	6
  7633  0F98  3001               	movlw	1	; select bank2/3
  7634  0F99  0087               	movwf	7
  7635  0F9A  0801               	movf	1,w
  7636  0F9B  0020               	movlb	0	; select bank0
  7637  0F9C  00D9               	movwf	??_uart_task
  7638  0F9D  0859               	movf	??_uart_task,w
  7639  0F9E  0023               	movlb	3	; select bank3
  7640  0F9F  06B1               	xorwf	uart_task@xor_1523^(0+384),f
  7641  0FA0  3001               	movlw	1
  7642  0FA1  0020               	movlb	0	; select bank0
  7643  0FA2  00D9               	movwf	??_uart_task
  7644  0FA3  0859               	movf	??_uart_task,w
  7645  0FA4  0023               	movlb	3	; select bank3
  7646  0FA5  07B5               	addwf	uart_task@i_1522^(0+384),f
  7647  0FA6  300A               	movlw	10
  7648  0FA7  0235               	subwf	uart_task@i_1522^(0+384),w
  7649  0FA8  1C03               	skipc
  7650  0FA9  2F95               	goto	l3550
  7651                           
  7652                           ;UartParser.c: 150:                 rx_buffer[10] = xor;
  7653  0FAA  0831               	movf	uart_task@xor_1523^(0+384),w
  7654  0FAB  0020               	movlb	0	; select bank0
  7655  0FAC  00D9               	movwf	??_uart_task
  7656  0FAD  0859               	movf	??_uart_task,w
  7657  0FAE  0022               	movlb	2	; select bank2
  7658  0FAF  00AA               	movwf	(UartParser@rx_buffer^(0+256)+10)
  7659                           
  7660                           ;UartParser.c: 151:                 rx_idx = 11;
  7661  0FB0  300B               	movlw	11
  7662  0FB1                     L1:	
  7663  0FB1  0020               	movlb	0	; select bank0
  7664  0FB2  00D9               	movwf	??_uart_task
  7665  0FB3  0859               	movf	??_uart_task,w
  7666  0FB4  00A9               	movwf	UartParser@rx_idx
  7667                           
  7668                           ;UartParser.c: 152:                 tx_idx = 0;
  7669  0FB5  01A6               	clrf	UartParser@tx_idx
  7670                           
  7671                           ;UartParser.c: 153:                 st = SEND_RESPONSE;
  7672  0FB6  3005               	movlw	5
  7673  0FB7  00D9               	movwf	??_uart_task
  7674  0FB8  0859               	movf	??_uart_task,w
  7675  0FB9  00A7               	movwf	UartParser@st
  7676                           
  7677                           ;UartParser.c: 154:             }
  7678  0FBA  0008               	return
  7679  0FBB                     l3562:	
  7680                           
  7681                           ;UartParser.c: 156:             {;UartParser.c: 157:                 if( rx_buffer[0] ==
      +                           GET_VDC && rx_idx == 2 )
  7682  0FBB  30A5               	movlw	165
  7683  0FBC  0022               	movlb	2	; select bank2
  7684  0FBD  0620               	xorwf	UartParser@rx_buffer^(0+256),w
  7685  0FBE  1D03               	btfss	3,2
  7686  0FBF  2F1C               	goto	l3510
  7687  0FC0  3002               	movlw	2
  7688  0FC1  0020               	movlb	0	; select bank0
  7689  0FC2  0629               	xorwf	UartParser@rx_idx,w
  7690  0FC3  1D03               	btfss	3,2
  7691  0FC4  2F1C               	goto	l3510
  7692                           
  7693                           ;UartParser.c: 158:                 {;UartParser.c: 159:                     uint16_t va
      +                          l;;UartParser.c: 160:                     val = get_vdc();
  7694  0FC5  3196  26FD  318D   	fcall	_get_vdc
  7695  0FC8  084C               	movf	?_get_vdc+1,w
  7696  0FC9  0023               	movlb	3	; select bank3
  7697  0FCA  00B3               	movwf	(uart_task@val_1524+1)^(0+384)
  7698  0FCB  0020               	movlb	0	; select bank0
  7699  0FCC  084B               	movf	?_get_vdc,w
  7700  0FCD  0023               	movlb	3	; select bank3
  7701  0FCE  00B2               	movwf	uart_task@val_1524^(0+384)
  7702                           
  7703                           ;UartParser.c: 161:                     rx_buffer[1] = (val>>8) & 0xFF;
  7704  0FCF  0833               	movf	(uart_task@val_1524^(0+384)+1),w
  7705  0FD0  0020               	movlb	0	; select bank0
  7706  0FD1  00D9               	movwf	??_uart_task
  7707  0FD2  0859               	movf	??_uart_task,w
  7708  0FD3  0022               	movlb	2	; select bank2
  7709  0FD4  00A1               	movwf	(UartParser@rx_buffer^(0+256)+1)
  7710                           
  7711                           ;UartParser.c: 162:                     rx_buffer[2] = val & 0xFF;
  7712  0FD5  0023               	movlb	3	; select bank3
  7713  0FD6  0832               	movf	uart_task@val_1524^(0+384),w
  7714  0FD7  0020               	movlb	0	; select bank0
  7715  0FD8  00D9               	movwf	??_uart_task
  7716  0FD9  0859               	movf	??_uart_task,w
  7717  0FDA  0022               	movlb	2	; select bank2
  7718  0FDB  00A2               	movwf	(UartParser@rx_buffer^(0+256)+2)
  7719                           
  7720                           ;UartParser.c: 163:                     rx_buffer[3] = rx_buffer[0] ^ rx_buffer[1] ^ rx_
      +                          buffer[2];
  7721  0FDC  0821               	movf	(UartParser@rx_buffer^(0+256)+1),w
  7722  0FDD  0622               	xorwf	(UartParser@rx_buffer^(0+256)+2),w
  7723  0FDE  0620               	xorwf	UartParser@rx_buffer^(0+256),w
  7724  0FDF  0020               	movlb	0	; select bank0
  7725  0FE0  00D9               	movwf	??_uart_task
  7726  0FE1  0859               	movf	??_uart_task,w
  7727  0FE2  0022               	movlb	2	; select bank2
  7728  0FE3  00A3               	movwf	(UartParser@rx_buffer^(0+256)+3)
  7729                           
  7730                           ;UartParser.c: 164:                     rx_idx = 4;
  7731  0FE4  3004               	movlw	4
  7732  0FE5  2FB1               	goto	L1
  7733  0FE6                     l3580:	
  7734                           
  7735                           ;UartParser.c: 175:     if( st == SEND_RESPONSE )
  7736  0FE6  3005               	movlw	5
  7737  0FE7  0627               	xorwf	UartParser@st,w
  7738  0FE8  1D03               	btfss	3,2
  7739  0FE9  0008               	return
  7740                           
  7741                           ;UartParser.c: 176:     {;UartParser.c: 177:         if( TX1STAbits.TRMT == 0 )
  7742  0FEA  0023               	movlb	3	; select bank3
  7743  0FEB  1C9E               	btfss	30,1	;volatile
  7744  0FEC  0008               	return
  7745                           
  7746                           ;UartParser.c: 179:         if( tx_idx < rx_idx )
  7747  0FED  0020               	movlb	0	; select bank0
  7748  0FEE  0829               	movf	UartParser@rx_idx,w
  7749  0FEF  0226               	subwf	UartParser@tx_idx,w
  7750  0FF0  1803               	skipnc
  7751  0FF1  2F1C               	goto	l3510
  7752                           
  7753                           ;UartParser.c: 180:             TX1REG = rx_buffer[tx_idx++];
  7754  0FF2  0826               	movf	UartParser@tx_idx,w
  7755  0FF3  3E20               	addlw	(low (UartParser@rx_buffer| (0+256)))& (0+255)
  7756  0FF4  0086               	movwf	6
  7757  0FF5  3001               	movlw	1	; select bank2/3
  7758  0FF6  0087               	movwf	7
  7759  0FF7  0801               	movf	1,w
  7760  0FF8  0023               	movlb	3	; select bank3
  7761  0FF9  009A               	movwf	26	;volatile
  7762  0FFA  3001               	movlw	1
  7763  0FFB  0020               	movlb	0	; select bank0
  7764  0FFC  00D9               	movwf	??_uart_task
  7765  0FFD  0859               	movf	??_uart_task,w
  7766  0FFE  07A6               	addwf	UartParser@tx_idx,f
  7767  0FFF  0008               	return
  7768  1000                     __end_of_uart_task:	
  7769                           
  7770                           	psect	text2
  7771  0873                     __ptext2:	
  7772 ;; *************** function _stop_chopper *****************
  7773 ;; Defined at:
  7774 ;;		line 233 in file "vcontrol.c"
  7775 ;; Parameters:    Size  Location     Type
  7776 ;;		None
  7777 ;; Auto vars:     Size  Location     Type
  7778 ;;		None
  7779 ;; Return value:  Size  Location     Type
  7780 ;;                  1    wreg      void 
  7781 ;; Registers used:
  7782 ;;		wreg, status,2, status,0
  7783 ;; Tracked objects:
  7784 ;;		On entry : 1F/2
  7785 ;;		On exit  : 1F/0
  7786 ;;		Unchanged: 0/0
  7787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7788 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7789 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7791 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7792 ;;Total ram usage:        0 bytes
  7793 ;; Hardware stack levels used:    1
  7794 ;; Hardware stack levels required when called:    5
  7795 ;; This function calls:
  7796 ;;		Nothing
  7797 ;; This function is called by:
  7798 ;;		_uart_task
  7799 ;; This function uses a non-reentrant model
  7800 ;;
  7801                           
  7802                           
  7803                           ;psect for function _stop_chopper
  7804  0873                     _stop_chopper:	
  7805                           
  7806                           ;vcontrol.c: 235:     if( chopper_active == 0 )
  7807                           
  7808                           ;incstack = 0
  7809                           ; Regs used in _stop_chopper: [wreg+status,2+status,0]
  7810  0873  0020               	movlb	0	; select bank0
  7811  0874  082C               	movf	_chopper_active,w
  7812  0875  1903               	btfsc	3,2
  7813  0876  0008               	return
  7814                           
  7815                           ;vcontrol.c: 238:     TRISAbits.TRISA5 = 1;
  7816  0877  0021               	movlb	1	; select bank1
  7817  0878  168C               	bsf	12,5	;volatile
  7818                           
  7819                           ;vcontrol.c: 239:     TRISAbits.TRISA4 = 1;
  7820  0879  160C               	bsf	12,4	;volatile
  7821                           
  7822                           ;vcontrol.c: 240:     target_duty = 0;
  7823  087A  0020               	movlb	0	; select bank0
  7824  087B  01A2               	clrf	_target_duty
  7825  087C  01A3               	clrf	_target_duty+1
  7826                           
  7827                           ;vcontrol.c: 241:     chopper_active = 0;
  7828  087D  01AC               	clrf	_chopper_active
  7829  087E  0008               	return
  7830  087F                     __end_of_stop_chopper:	
  7831                           
  7832                           	psect	text3
  7833  08D0                     __ptext3:	
  7834 ;; *************** function _start_chopper *****************
  7835 ;; Defined at:
  7836 ;;		line 217 in file "vcontrol.c"
  7837 ;; Parameters:    Size  Location     Type
  7838 ;;		None
  7839 ;; Auto vars:     Size  Location     Type
  7840 ;;		None
  7841 ;; Return value:  Size  Location     Type
  7842 ;;                  1    wreg      void 
  7843 ;; Registers used:
  7844 ;;		wreg, status,2, status,0, pclath, cstack
  7845 ;; Tracked objects:
  7846 ;;		On entry : 1D/0
  7847 ;;		On exit  : 1F/0
  7848 ;;		Unchanged: 0/0
  7849 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7850 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7851 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7852 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7853 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7854 ;;Total ram usage:        0 bytes
  7855 ;; Hardware stack levels used:    1
  7856 ;; Hardware stack levels required when called:    7
  7857 ;; This function calls:
  7858 ;;		_init_chopper
  7859 ;; This function is called by:
  7860 ;;		_main
  7861 ;;		_uart_task
  7862 ;; This function uses a non-reentrant model
  7863 ;;
  7864                           
  7865                           
  7866                           ;psect for function _start_chopper
  7867  08D0                     _start_chopper:	
  7868                           
  7869                           ;vcontrol.c: 219:     if( chopper_active == 1 )
  7870                           
  7871                           ;incstack = 0
  7872                           ; Regs used in _start_chopper: [wreg+status,2+status,0+pclath+cstack]
  7873  08D0  0020               	movlb	0	; select bank0
  7874  08D1  032C               	decf	_chopper_active,w
  7875  08D2  1903               	btfsc	3,2
  7876  08D3  0008               	return
  7877                           
  7878                           ;vcontrol.c: 221:     TRISAbits.TRISA5 = 0;
  7879  08D4  0021               	movlb	1	; select bank1
  7880  08D5  128C               	bcf	12,5	;volatile
  7881                           
  7882                           ;vcontrol.c: 222:     TRISAbits.TRISA4 = 0;
  7883  08D6  120C               	bcf	12,4	;volatile
  7884                           
  7885                           ;vcontrol.c: 223:     pwm_duty = 0;
  7886  08D7  0020               	movlb	0	; select bank0
  7887  08D8  01A4               	clrf	_pwm_duty
  7888  08D9  01A5               	clrf	_pwm_duty+1
  7889                           
  7890                           ;vcontrol.c: 224:     current_duty = 0;
  7891  08DA  01A0               	clrf	_current_duty
  7892  08DB  01A1               	clrf	_current_duty+1
  7893                           
  7894                           ;vcontrol.c: 225:     target_duty = 0;
  7895  08DC  01A2               	clrf	_target_duty
  7896  08DD  01A3               	clrf	_target_duty+1
  7897                           
  7898                           ;vcontrol.c: 227:     if( init_required == 1 )
  7899  08DE  0364               	decf	_init_required,w
  7900  08DF  1D03               	btfss	3,2
  7901  08E0  28E3               	goto	l3372
  7902                           
  7903                           ;vcontrol.c: 228:         init_chopper();
  7904  08E1  3189  21E3         	fcall	_init_chopper
  7905  08E3                     l3372:	
  7906                           
  7907                           ;vcontrol.c: 230:     chopper_active = 1;
  7908  08E3  0020               	movlb	0	; select bank0
  7909  08E4  01AC               	clrf	_chopper_active
  7910  08E5  0AAC               	incf	_chopper_active,f
  7911  08E6  0008               	return
  7912  08E7                     __end_of_start_chopper:	
  7913                           
  7914                           	psect	text4
  7915  09E3                     __ptext4:	
  7916 ;; *************** function _init_chopper *****************
  7917 ;; Defined at:
  7918 ;;		line 203 in file "vcontrol.c"
  7919 ;; Parameters:    Size  Location     Type
  7920 ;;		None
  7921 ;; Auto vars:     Size  Location     Type
  7922 ;;		None
  7923 ;; Return value:  Size  Location     Type
  7924 ;;                  1    wreg      void 
  7925 ;; Registers used:
  7926 ;;		wreg, status,2, status,0, pclath, cstack
  7927 ;; Tracked objects:
  7928 ;;		On entry : 1F/0
  7929 ;;		On exit  : 1D/0
  7930 ;;		Unchanged: 0/0
  7931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7932 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7933 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7934 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7935 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7936 ;;Total ram usage:        1 bytes
  7937 ;; Hardware stack levels used:    1
  7938 ;; Hardware stack levels required when called:    6
  7939 ;; This function calls:
  7940 ;;		_ADC_SelectChannel
  7941 ;;		_ADC_SetInterruptHandler
  7942 ;;		_ADC_StartConversion
  7943 ;;		_TMR2_SetInterruptHandler
  7944 ;;		_TMR2_StartTimer
  7945 ;; This function is called by:
  7946 ;;		_main
  7947 ;;		_start_chopper
  7948 ;; This function uses a non-reentrant model
  7949 ;;
  7950                           
  7951                           
  7952                           ;psect for function _init_chopper
  7953  09E3                     _init_chopper:	
  7954                           
  7955                           ;vcontrol.c: 205:     if( init_required == 0 )
  7956                           
  7957                           ;incstack = 0
  7958                           ; Regs used in _init_chopper: [wreg+status,2+status,0+pclath+cstack]
  7959  09E3  0864               	movf	_init_required,w
  7960  09E4  1903               	btfsc	3,2
  7961  09E5  0008               	return
  7962                           
  7963                           ;vcontrol.c: 207:     init_required = 0;
  7964  09E6  01E4               	clrf	_init_required
  7965                           
  7966                           ;vcontrol.c: 208:     ADC_SelectChannel(V_BUSDC);
  7967  09E7  3007               	movlw	7
  7968  09E8  3197  27E0  3189   	fcall	_ADC_SelectChannel
  7969                           
  7970                           ;vcontrol.c: 209:     _delay((unsigned long)((1)*(16000000/4000.0)));
  7971  09EB  3006               	movlw	6
  7972  09EC  0020               	movlb	0	; select bank0
  7973  09ED  00CD               	movwf	??_init_chopper
  7974  09EE  3030               	movlw	48
  7975  09EF                     u2507:	
  7976  09EF  0B89               	decfsz	9,f
  7977  09F0  29EF               	goto	u2507
  7978  09F1  0BCD               	decfsz	??_init_chopper,f
  7979  09F2  29EF               	goto	u2507
  7980  09F3  0000               	nop
  7981                           
  7982                           ;vcontrol.c: 210:     ADC_StartConversion();
  7983  09F4  3196  26DD  3189   	fcall	_ADC_StartConversion
  7984                           
  7985                           ;vcontrol.c: 211:     TMR2_StartTimer();
  7986  09F7  3196  26E0  3189   	fcall	_TMR2_StartTimer
  7987                           
  7988                           ;vcontrol.c: 213:     TMR2_SetInterruptHandler(TMR2_DutyControlHandler_ISR);
  7989  09FA  3058               	movlw	low _TMR2_DutyControlHandler_ISR
  7990  09FB  00CB               	movwf	TMR2_SetInterruptHandler@InterruptHandler
  7991  09FC  300B               	movlw	high _TMR2_DutyControlHandler_ISR
  7992  09FD  00CC               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
  7993  09FE  3197  275D  3189   	fcall	_TMR2_SetInterruptHandler
  7994                           
  7995                           ;vcontrol.c: 214:     ADC_SetInterruptHandler(ADC_VoltageControlHandler_ISR);
  7996  0A01  30B0               	movlw	low _ADC_VoltageControlHandler_ISR
  7997  0A02  0020               	movlb	0	; select bank0
  7998  0A03  00CB               	movwf	ADC_SetInterruptHandler@InterruptHandler
  7999  0A04  300C               	movlw	high _ADC_VoltageControlHandler_ISR
  8000  0A05  00CC               	movwf	ADC_SetInterruptHandler@InterruptHandler+1
  8001  0A06  3197  2725         	fcall	_ADC_SetInterruptHandler
  8002  0A08  0008               	return
  8003  0A09                     __end_of_init_chopper:	
  8004                           
  8005                           	psect	text5
  8006  16E0                     __ptext5:	
  8007 ;; *************** function _TMR2_StartTimer *****************
  8008 ;; Defined at:
  8009 ;;		line 87 in file "mcc_generated_files/tmr2.c"
  8010 ;; Parameters:    Size  Location     Type
  8011 ;;		None
  8012 ;; Auto vars:     Size  Location     Type
  8013 ;;		None
  8014 ;; Return value:  Size  Location     Type
  8015 ;;                  1    wreg      void 
  8016 ;; Registers used:
  8017 ;;		None
  8018 ;; Tracked objects:
  8019 ;;		On entry : 1F/1
  8020 ;;		On exit  : 1F/0
  8021 ;;		Unchanged: 0/0
  8022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8023 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8024 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8026 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8027 ;;Total ram usage:        0 bytes
  8028 ;; Hardware stack levels used:    1
  8029 ;; Hardware stack levels required when called:    5
  8030 ;; This function calls:
  8031 ;;		Nothing
  8032 ;; This function is called by:
  8033 ;;		_init_chopper
  8034 ;; This function uses a non-reentrant model
  8035 ;;
  8036                           
  8037                           
  8038                           ;psect for function _TMR2_StartTimer
  8039  16E0                     _TMR2_StartTimer:	
  8040                           
  8041                           ;mcc_generated_files/tmr2.c: 90:     T2CONbits.TMR2ON = 1;
  8042                           
  8043                           ;incstack = 0
  8044                           ; Regs used in _TMR2_StartTimer: []
  8045  16E0  0020               	movlb	0	; select bank0
  8046  16E1  151C               	bsf	28,2	;volatile
  8047  16E2  0008               	return
  8048  16E3                     __end_of_TMR2_StartTimer:	
  8049                           
  8050                           	psect	text6
  8051  16DD                     __ptext6:	
  8052 ;; *************** function _ADC_StartConversion *****************
  8053 ;; Defined at:
  8054 ;;		line 101 in file "mcc_generated_files/adc.c"
  8055 ;; Parameters:    Size  Location     Type
  8056 ;;		None
  8057 ;; Auto vars:     Size  Location     Type
  8058 ;;		None
  8059 ;; Return value:  Size  Location     Type
  8060 ;;                  1    wreg      void 
  8061 ;; Registers used:
  8062 ;;		None
  8063 ;; Tracked objects:
  8064 ;;		On entry : 0/1
  8065 ;;		On exit  : 1F/1
  8066 ;;		Unchanged: 0/0
  8067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8068 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8069 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8070 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8071 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8072 ;;Total ram usage:        0 bytes
  8073 ;; Hardware stack levels used:    1
  8074 ;; Hardware stack levels required when called:    5
  8075 ;; This function calls:
  8076 ;;		Nothing
  8077 ;; This function is called by:
  8078 ;;		_init_chopper
  8079 ;; This function uses a non-reentrant model
  8080 ;;
  8081                           
  8082                           
  8083                           ;psect for function _ADC_StartConversion
  8084  16DD                     _ADC_StartConversion:	
  8085                           
  8086                           ;mcc_generated_files/adc.c: 104:     ADCON0bits.GO_nDONE = 1;
  8087                           
  8088                           ;incstack = 0
  8089                           ; Regs used in _ADC_StartConversion: []
  8090  16DD  0021               	movlb	1	; select bank1
  8091  16DE  149D               	bsf	29,1	;volatile
  8092  16DF  0008               	return
  8093  16E0                     __end_of_ADC_StartConversion:	
  8094                           
  8095                           	psect	text7
  8096  17E0                     __ptext7:	
  8097 ;; *************** function _ADC_SelectChannel *****************
  8098 ;; Defined at:
  8099 ;;		line 93 in file "mcc_generated_files/adc.c"
  8100 ;; Parameters:    Size  Location     Type
  8101 ;;  channel         1    wreg     enum E4137
  8102 ;; Auto vars:     Size  Location     Type
  8103 ;;  channel         1   10[BANK0 ] enum E4137
  8104 ;; Return value:  Size  Location     Type
  8105 ;;                  1    wreg      void 
  8106 ;; Registers used:
  8107 ;;		wreg, status,2, status,0
  8108 ;; Tracked objects:
  8109 ;;		On entry : 1F/0
  8110 ;;		On exit  : 1F/1
  8111 ;;		Unchanged: 0/0
  8112 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8113 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8114 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8115 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8116 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8117 ;;Total ram usage:        2 bytes
  8118 ;; Hardware stack levels used:    1
  8119 ;; Hardware stack levels required when called:    5
  8120 ;; This function calls:
  8121 ;;		Nothing
  8122 ;; This function is called by:
  8123 ;;		_init_chopper
  8124 ;; This function uses a non-reentrant model
  8125 ;;
  8126                           
  8127                           
  8128                           ;psect for function _ADC_SelectChannel
  8129  17E0                     _ADC_SelectChannel:	
  8130                           
  8131                           ;incstack = 0
  8132                           ; Regs used in _ADC_SelectChannel: [wreg+status,2+status,0]
  8133                           ;ADC_SelectChannel@channel stored from wreg
  8134  17E0  00CC               	movwf	ADC_SelectChannel@channel
  8135                           
  8136                           ;mcc_generated_files/adc.c: 93: void ADC_SelectChannel(adc_channel_t channel);mcc_genera
      +                          ted_files/adc.c: 94: {;mcc_generated_files/adc.c: 96:     ADCON0bits.CHS = channel;
  8137  17E1  084C               	movf	ADC_SelectChannel@channel,w
  8138  17E2  00CB               	movwf	??_ADC_SelectChannel
  8139  17E3  0DCB               	rlf	??_ADC_SelectChannel,f
  8140  17E4  0DCB               	rlf	??_ADC_SelectChannel,f
  8141  17E5  0021               	movlb	1	; select bank1
  8142  17E6  081D               	movf	29,w	;volatile
  8143  17E7  0020               	movlb	0	; select bank0
  8144  17E8  064B               	xorwf	??_ADC_SelectChannel,w
  8145  17E9  3983               	andlw	-125
  8146  17EA  064B               	xorwf	??_ADC_SelectChannel,w
  8147  17EB  0021               	movlb	1	; select bank1
  8148  17EC  009D               	movwf	29	;volatile
  8149                           
  8150                           ;mcc_generated_files/adc.c: 98:     ADCON0bits.ADON = 1;
  8151  17ED  141D               	bsf	29,0	;volatile
  8152  17EE  0008               	return
  8153  17EF                     __end_of_ADC_SelectChannel:	
  8154                           
  8155                           	psect	text8
  8156  0919                     __ptext8:	
  8157 ;; *************** function _set_vdc_speed *****************
  8158 ;; Defined at:
  8159 ;;		line 265 in file "vcontrol.c"
  8160 ;; Parameters:    Size  Location     Type
  8161 ;;  msDelay         2    9[BANK0 ] unsigned short 
  8162 ;; Auto vars:     Size  Location     Type
  8163 ;;		None
  8164 ;; Return value:  Size  Location     Type
  8165 ;;                  1    wreg      void 
  8166 ;; Registers used:
  8167 ;;		wreg, status,2, status,0
  8168 ;; Tracked objects:
  8169 ;;		On entry : 1F/0
  8170 ;;		On exit  : 1E/0
  8171 ;;		Unchanged: 0/0
  8172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8173 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8176 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8177 ;;Total ram usage:        2 bytes
  8178 ;; Hardware stack levels used:    1
  8179 ;; Hardware stack levels required when called:    5
  8180 ;; This function calls:
  8181 ;;		Nothing
  8182 ;; This function is called by:
  8183 ;;		_main
  8184 ;;		_uart_task
  8185 ;; This function uses a non-reentrant model
  8186 ;;
  8187                           
  8188                           
  8189                           ;psect for function _set_vdc_speed
  8190  0919                     _set_vdc_speed:	
  8191                           
  8192                           ;vcontrol.c: 265: void set_vdc_speed(uint16_t msDelay);vcontrol.c: 266: {;vcontrol.c: 26
      +                          7:     if( msDelay == 0xFFFF )
  8193                           
  8194                           ;incstack = 0
  8195                           ; Regs used in _set_vdc_speed: [wreg+status,2+status,0]
  8196  0919  0A4B               	incf	set_vdc_speed@msDelay,w
  8197  091A  1903               	btfsc	3,2
  8198  091B  0A4C               	incf	set_vdc_speed@msDelay+1,w
  8199  091C  1903               	btfsc	3,2
  8200  091D  0008               	return
  8201                           
  8202                           ;vcontrol.c: 269:     if( msDelay > 100 )
  8203  091E  3000               	movlw	0
  8204  091F  024C               	subwf	set_vdc_speed@msDelay+1,w
  8205  0920  3065               	movlw	101
  8206  0921  1903               	skipnz
  8207  0922  024B               	subwf	set_vdc_speed@msDelay,w
  8208  0923  1C03               	skipc
  8209  0924  292B               	goto	l3360
  8210                           
  8211                           ;vcontrol.c: 270:         duty_count_up_max = 100;
  8212  0925  3064               	movlw	100
  8213  0926  0021               	movlb	1	; select bank1
  8214  0927  00EC               	movwf	_duty_count_up_max^(0+128)
  8215  0928  3000               	movlw	0
  8216  0929  00ED               	movwf	(_duty_count_up_max^(0+128)+1)
  8217  092A  0008               	return
  8218  092B                     l3360:	
  8219                           
  8220                           ;vcontrol.c: 272:         duty_count_up_max = msDelay;
  8221  092B  084C               	movf	set_vdc_speed@msDelay+1,w
  8222  092C  0021               	movlb	1	; select bank1
  8223  092D  00ED               	movwf	(_duty_count_up_max+1)^(0+128)
  8224  092E  0020               	movlb	0	; select bank0
  8225  092F  084B               	movf	set_vdc_speed@msDelay,w
  8226  0930  0021               	movlb	1	; select bank1
  8227  0931  00EC               	movwf	_duty_count_up_max^(0+128)
  8228  0932  0008               	return
  8229  0933                     __end_of_set_vdc_speed:	
  8230                           
  8231                           	psect	text9
  8232  17AE                     __ptext9:	
  8233 ;; *************** function _set_vdc_min *****************
  8234 ;; Defined at:
  8235 ;;		line 250 in file "vcontrol.c"
  8236 ;; Parameters:    Size  Location     Type
  8237 ;;  vmin            2   12[BANK0 ] unsigned short 
  8238 ;; Auto vars:     Size  Location     Type
  8239 ;;		None
  8240 ;; Return value:  Size  Location     Type
  8241 ;;                  1    wreg      void 
  8242 ;; Registers used:
  8243 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8244 ;; Tracked objects:
  8245 ;;		On entry : 1F/0
  8246 ;;		On exit  : 1F/0
  8247 ;;		Unchanged: 0/0
  8248 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8249 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8250 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8251 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8252 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8253 ;;Total ram usage:        3 bytes
  8254 ;; Hardware stack levels used:    1
  8255 ;; Hardware stack levels required when called:    6
  8256 ;; This function calls:
  8257 ;;		_set_vdc_threshold
  8258 ;; This function is called by:
  8259 ;;		_main
  8260 ;;		_uart_task
  8261 ;; This function uses a non-reentrant model
  8262 ;;
  8263                           
  8264                           
  8265                           ;psect for function _set_vdc_min
  8266  17AE                     _set_vdc_min:	
  8267                           
  8268                           ;vcontrol.c: 250: void set_vdc_min(uint16_t vmin);vcontrol.c: 251: {;vcontrol.c: 252:   
      +                            set_vdc_threshold(vmin,&vdc_min);
  8269                           
  8270                           ;incstack = 0
  8271                           ; Regs used in _set_vdc_min: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8272  17AE  084F               	movf	set_vdc_min@vmin+1,w
  8273  17AF  00CC               	movwf	set_vdc_threshold@v_val+1
  8274  17B0  084E               	movf	set_vdc_min@vmin,w
  8275  17B1  00CB               	movwf	set_vdc_threshold@v_val
  8276  17B2  3040               	movlw	(low (_vdc_min| 0))& (0+255)
  8277  17B3  00D0               	movwf	??_set_vdc_min
  8278  17B4  0850               	movf	??_set_vdc_min,w
  8279  17B5  00CD               	movwf	set_vdc_threshold@v_target
  8280  17B6  3189  2169         	fcall	_set_vdc_threshold
  8281  17B8  0008               	return
  8282  17B9                     __end_of_set_vdc_min:	
  8283                           
  8284                           	psect	text10
  8285  17A3                     __ptext10:	
  8286 ;; *************** function _set_vdc_max *****************
  8287 ;; Defined at:
  8288 ;;		line 255 in file "vcontrol.c"
  8289 ;; Parameters:    Size  Location     Type
  8290 ;;  vmax            2   12[BANK0 ] unsigned short 
  8291 ;; Auto vars:     Size  Location     Type
  8292 ;;		None
  8293 ;; Return value:  Size  Location     Type
  8294 ;;                  1    wreg      void 
  8295 ;; Registers used:
  8296 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8297 ;; Tracked objects:
  8298 ;;		On entry : 1F/0
  8299 ;;		On exit  : 1F/0
  8300 ;;		Unchanged: 0/0
  8301 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8302 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8303 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8304 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8305 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8306 ;;Total ram usage:        3 bytes
  8307 ;; Hardware stack levels used:    1
  8308 ;; Hardware stack levels required when called:    6
  8309 ;; This function calls:
  8310 ;;		_set_vdc_threshold
  8311 ;; This function is called by:
  8312 ;;		_main
  8313 ;;		_uart_task
  8314 ;; This function uses a non-reentrant model
  8315 ;;
  8316                           
  8317                           
  8318                           ;psect for function _set_vdc_max
  8319  17A3                     _set_vdc_max:	
  8320                           
  8321                           ;vcontrol.c: 255: void set_vdc_max(uint16_t vmax);vcontrol.c: 256: {;vcontrol.c: 257:   
      +                            set_vdc_threshold(vmax,&vdc_max);
  8322                           
  8323                           ;incstack = 0
  8324                           ; Regs used in _set_vdc_max: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8325  17A3  084F               	movf	set_vdc_max@vmax+1,w
  8326  17A4  00CC               	movwf	set_vdc_threshold@v_val+1
  8327  17A5  084E               	movf	set_vdc_max@vmax,w
  8328  17A6  00CB               	movwf	set_vdc_threshold@v_val
  8329  17A7  303E               	movlw	(low (_vdc_max| 0))& (0+255)
  8330  17A8  00D0               	movwf	??_set_vdc_max
  8331  17A9  0850               	movf	??_set_vdc_max,w
  8332  17AA  00CD               	movwf	set_vdc_threshold@v_target
  8333  17AB  3189  2169         	fcall	_set_vdc_threshold
  8334  17AD  0008               	return
  8335  17AE                     __end_of_set_vdc_max:	
  8336                           
  8337                           	psect	text11
  8338  1798                     __ptext11:	
  8339 ;; *************** function _set_vdc_critic *****************
  8340 ;; Defined at:
  8341 ;;		line 260 in file "vcontrol.c"
  8342 ;; Parameters:    Size  Location     Type
  8343 ;;  vc              2   12[BANK0 ] unsigned short 
  8344 ;; Auto vars:     Size  Location     Type
  8345 ;;		None
  8346 ;; Return value:  Size  Location     Type
  8347 ;;                  1    wreg      void 
  8348 ;; Registers used:
  8349 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8350 ;; Tracked objects:
  8351 ;;		On entry : 1F/0
  8352 ;;		On exit  : 1F/0
  8353 ;;		Unchanged: 0/0
  8354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8355 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8356 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8357 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8358 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8359 ;;Total ram usage:        3 bytes
  8360 ;; Hardware stack levels used:    1
  8361 ;; Hardware stack levels required when called:    6
  8362 ;; This function calls:
  8363 ;;		_set_vdc_threshold
  8364 ;; This function is called by:
  8365 ;;		_main
  8366 ;;		_uart_task
  8367 ;; This function uses a non-reentrant model
  8368 ;;
  8369                           
  8370                           
  8371                           ;psect for function _set_vdc_critic
  8372  1798                     _set_vdc_critic:	
  8373                           
  8374                           ;vcontrol.c: 260: void set_vdc_critic(uint16_t vc);vcontrol.c: 261: {;vcontrol.c: 262:  
      +                             set_vdc_threshold(vc,&vdc_critic);
  8375                           
  8376                           ;incstack = 0
  8377                           ; Regs used in _set_vdc_critic: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8378  1798  084F               	movf	set_vdc_critic@vc+1,w
  8379  1799  00CC               	movwf	set_vdc_threshold@v_val+1
  8380  179A  084E               	movf	set_vdc_critic@vc,w
  8381  179B  00CB               	movwf	set_vdc_threshold@v_val
  8382  179C  303C               	movlw	(low (_vdc_critic| 0))& (0+255)
  8383  179D  00D0               	movwf	??_set_vdc_critic
  8384  179E  0850               	movf	??_set_vdc_critic,w
  8385  179F  00CD               	movwf	set_vdc_threshold@v_target
  8386  17A0  3189  2169         	fcall	_set_vdc_threshold
  8387  17A2  0008               	return
  8388  17A3                     __end_of_set_vdc_critic:	
  8389                           
  8390                           	psect	text12
  8391  0969                     __ptext12:	
  8392 ;; *************** function _set_vdc_threshold *****************
  8393 ;; Defined at:
  8394 ;;		line 188 in file "vcontrol.c"
  8395 ;; Parameters:    Size  Location     Type
  8396 ;;  v_val           2    9[BANK0 ] unsigned short 
  8397 ;;  v_target        1   11[BANK0 ] PTR unsigned short 
  8398 ;;		 -> vdc_critic(2), vdc_max(2), vdc_min(2), 
  8399 ;; Auto vars:     Size  Location     Type
  8400 ;;		None
  8401 ;; Return value:  Size  Location     Type
  8402 ;;                  1    wreg      void 
  8403 ;; Registers used:
  8404 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8405 ;; Tracked objects:
  8406 ;;		On entry : 1F/0
  8407 ;;		On exit  : 1F/0
  8408 ;;		Unchanged: 0/0
  8409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8410 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8411 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8413 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8414 ;;Total ram usage:        3 bytes
  8415 ;; Hardware stack levels used:    1
  8416 ;; Hardware stack levels required when called:    5
  8417 ;; This function calls:
  8418 ;;		Nothing
  8419 ;; This function is called by:
  8420 ;;		_set_vdc_min
  8421 ;;		_set_vdc_max
  8422 ;;		_set_vdc_critic
  8423 ;; This function uses a non-reentrant model
  8424 ;;
  8425                           
  8426                           
  8427                           ;psect for function _set_vdc_threshold
  8428  0969                     _set_vdc_threshold:	
  8429                           
  8430                           ;vcontrol.c: 188: static void set_vdc_threshold(uint16_t v_val,uint16_t *v_target);vcont
      +                          rol.c: 189: {;vcontrol.c: 190:     if( v_val == 0xFFFF )
  8431                           
  8432                           ;incstack = 0
  8433                           ; Regs used in _set_vdc_threshold: [wreg+fsr1l+fsr1h+status,2+status,0]
  8434  0969  0A4B               	incf	set_vdc_threshold@v_val,w
  8435  096A  1903               	btfsc	3,2
  8436  096B  0A4C               	incf	set_vdc_threshold@v_val+1,w
  8437  096C  1903               	btfsc	3,2
  8438  096D  0008               	return
  8439                           
  8440                           ;vcontrol.c: 192:     if( v_val >= 800 )
  8441  096E  3003               	movlw	3
  8442  096F  024C               	subwf	set_vdc_threshold@v_val+1,w
  8443  0970  3020               	movlw	32
  8444  0971  1903               	skipnz
  8445  0972  024B               	subwf	set_vdc_threshold@v_val,w
  8446  0973  1C03               	skipc
  8447  0974  297D               	goto	l3308
  8448                           
  8449                           ;vcontrol.c: 193:         *v_target = 800;
  8450  0975  084D               	movf	set_vdc_threshold@v_target,w
  8451  0976  0086               	movwf	6
  8452  0977  0187               	clrf	7
  8453  0978  3020               	movlw	32
  8454  0979  3FC0               	movwi [0]fsr1
  8455  097A  3003               	movlw	3
  8456  097B  3FC1               	movwi [1]fsr1
  8457  097C  0008               	return
  8458  097D                     l3308:	
  8459                           
  8460                           ;vcontrol.c: 195:         *v_target = v_val;
  8461  097D  084D               	movf	set_vdc_threshold@v_target,w
  8462  097E  0086               	movwf	6
  8463  097F  0187               	clrf	7
  8464  0980  084B               	movf	set_vdc_threshold@v_val,w
  8465  0981  3FC0               	movwi [0]fsr1
  8466  0982  084C               	movf	set_vdc_threshold@v_val+1,w
  8467  0983  3FC1               	movwi [1]fsr1
  8468  0984  0008               	return
  8469  0985                     __end_of_set_vdc_threshold:	
  8470                           
  8471                           	psect	text13
  8472  0A97                     __ptext13:	
  8473 ;; *************** function _save_to_flash *****************
  8474 ;; Defined at:
  8475 ;;		line 275 in file "vcontrol.c"
  8476 ;; Parameters:    Size  Location     Type
  8477 ;;		None
  8478 ;; Auto vars:     Size  Location     Type
  8479 ;;  buff           64    0[BANK1 ] unsigned short [32]
  8480 ;; Return value:  Size  Location     Type
  8481 ;;                  1    wreg      void 
  8482 ;; Registers used:
  8483 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8484 ;; Tracked objects:
  8485 ;;		On entry : 1F/0
  8486 ;;		On exit  : 1F/0
  8487 ;;		Unchanged: 0/0
  8488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8489 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8490 ;;      Locals:         0       0      64       0       0       0       0       0       0       0       0       0       
      +0       0
  8491 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8492 ;;      Totals:         0       1      64       0       0       0       0       0       0       0       0       0       
      +0       0
  8493 ;;Total ram usage:       65 bytes
  8494 ;; Hardware stack levels used:    1
  8495 ;; Hardware stack levels required when called:    7
  8496 ;; This function calls:
  8497 ;;		_FLASH_WriteBlock
  8498 ;; This function is called by:
  8499 ;;		_uart_task
  8500 ;; This function uses a non-reentrant model
  8501 ;;
  8502                           
  8503                           
  8504                           ;psect for function _save_to_flash
  8505  0A97                     _save_to_flash:	
  8506                           
  8507                           ;vcontrol.c: 277:     uint16_t buff[32];;vcontrol.c: 278:     if( chopper_active == 1 )
  8508                           
  8509                           ;incstack = 0
  8510                           ; Regs used in _save_to_flash: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8511  0A97  032C               	decf	_chopper_active,w
  8512  0A98  1D03               	btfss	3,2
  8513  0A99  2A9F               	goto	l3388
  8514                           
  8515                           ;vcontrol.c: 279:         buff[0] = 0x0ABC;
  8516  0A9A  30BC               	movlw	188
  8517  0A9B  0021               	movlb	1	; select bank1
  8518  0A9C  00A0               	movwf	save_to_flash@buff^(0+128)
  8519  0A9D  300A               	movlw	10
  8520  0A9E  2AA3               	goto	L2
  8521  0A9F                     l3388:	
  8522                           
  8523                           ;vcontrol.c: 281:         buff[0] = 0x0CBA;
  8524  0A9F  30BA               	movlw	186
  8525  0AA0  0021               	movlb	1	; select bank1
  8526  0AA1  00A0               	movwf	save_to_flash@buff^(0+128)
  8527  0AA2  300C               	movlw	12
  8528  0AA3                     L2:	
  8529  0AA3  00A1               	movwf	(save_to_flash@buff^(0+128)+1)
  8530                           
  8531                           ;vcontrol.c: 282:     buff[1] = vdc_min;
  8532  0AA4  0020               	movlb	0	; select bank0
  8533  0AA5  0841               	movf	_vdc_min+1,w
  8534  0AA6  0021               	movlb	1	; select bank1
  8535  0AA7  00A3               	movwf	((save_to_flash@buff+1)^(0+128)+2)
  8536  0AA8  0020               	movlb	0	; select bank0
  8537  0AA9  0840               	movf	_vdc_min,w
  8538  0AAA  0021               	movlb	1	; select bank1
  8539  0AAB  00A2               	movwf	(save_to_flash@buff^(0+128)+2)
  8540                           
  8541                           ;vcontrol.c: 283:     buff[2] = vdc_max;
  8542  0AAC  0020               	movlb	0	; select bank0
  8543  0AAD  083F               	movf	_vdc_max+1,w
  8544  0AAE  0021               	movlb	1	; select bank1
  8545  0AAF  00A5               	movwf	((save_to_flash@buff+1)^(0+128)+4)
  8546  0AB0  0020               	movlb	0	; select bank0
  8547  0AB1  083E               	movf	_vdc_max,w
  8548  0AB2  0021               	movlb	1	; select bank1
  8549  0AB3  00A4               	movwf	(save_to_flash@buff^(0+128)+4)
  8550                           
  8551                           ;vcontrol.c: 284:     buff[3] = vdc_critic;
  8552  0AB4  0020               	movlb	0	; select bank0
  8553  0AB5  083D               	movf	_vdc_critic+1,w
  8554  0AB6  0021               	movlb	1	; select bank1
  8555  0AB7  00A7               	movwf	((save_to_flash@buff+1)^(0+128)+6)
  8556  0AB8  0020               	movlb	0	; select bank0
  8557  0AB9  083C               	movf	_vdc_critic,w
  8558  0ABA  0021               	movlb	1	; select bank1
  8559  0ABB  00A6               	movwf	(save_to_flash@buff^(0+128)+6)
  8560                           
  8561                           ;vcontrol.c: 285:     buff[4] = duty_count_up_max;
  8562  0ABC  086D               	movf	(_duty_count_up_max+1)^(0+128),w
  8563  0ABD  00A9               	movwf	((save_to_flash@buff+1)^(0+128)+8)
  8564  0ABE  086C               	movf	_duty_count_up_max^(0+128),w
  8565  0ABF  00A8               	movwf	(save_to_flash@buff^(0+128)+8)
  8566                           
  8567                           ;vcontrol.c: 286:     FLASH_WriteBlock(0x1F00,buff);
  8568  0AC0  3000               	movlw	0
  8569  0AC1  0020               	movlb	0	; select bank0
  8570  0AC2  00CE               	movwf	FLASH_WriteBlock@writeAddr
  8571  0AC3  301F               	movlw	31
  8572  0AC4  00CF               	movwf	FLASH_WriteBlock@writeAddr+1
  8573  0AC5  30A0               	movlw	(low (save_to_flash@buff| 0))& (0+255)
  8574  0AC6  00D8               	movwf	??_save_to_flash
  8575  0AC7  0858               	movf	??_save_to_flash,w
  8576  0AC8  00D0               	movwf	FLASH_WriteBlock@flashWordArray
  8577  0AC9  318B  23B1         	fcall	_FLASH_WriteBlock
  8578  0ACB  0008               	return
  8579  0ACC                     __end_of_save_to_flash:	
  8580                           
  8581                           	psect	text14
  8582  0BB1                     __ptext14:	
  8583 ;; *************** function _FLASH_WriteBlock *****************
  8584 ;; Defined at:
  8585 ;;		line 95 in file "mcc_generated_files/memory.c"
  8586 ;; Parameters:    Size  Location     Type
  8587 ;;  writeAddr       2   12[BANK0 ] unsigned short 
  8588 ;;  flashWordArr    1   14[BANK0 ] PTR unsigned short 
  8589 ;;		 -> save_to_flash@buff(64), 
  8590 ;; Auto vars:     Size  Location     Type
  8591 ;;  blockStartAd    2   18[BANK0 ] unsigned short 
  8592 ;;  i               1   21[BANK0 ] unsigned char 
  8593 ;;  GIEBitValue     1   20[BANK0 ] unsigned char 
  8594 ;; Return value:  Size  Location     Type
  8595 ;;                  1    wreg      char 
  8596 ;; Registers used:
  8597 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8598 ;; Tracked objects:
  8599 ;;		On entry : 1F/0
  8600 ;;		On exit  : 1F/0
  8601 ;;		Unchanged: 0/0
  8602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8603 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8604 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8605 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8606 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8607 ;;Total ram usage:       10 bytes
  8608 ;; Hardware stack levels used:    1
  8609 ;; Hardware stack levels required when called:    6
  8610 ;; This function calls:
  8611 ;;		_FLASH_EraseBlock
  8612 ;; This function is called by:
  8613 ;;		_save_to_flash
  8614 ;; This function uses a non-reentrant model
  8615 ;;
  8616                           
  8617                           
  8618                           ;psect for function _FLASH_WriteBlock
  8619  0BB1                     _FLASH_WriteBlock:	
  8620                           
  8621                           ;mcc_generated_files/memory.c: 95: int8_t FLASH_WriteBlock(uint16_t writeAddr, uint16_t 
      +                          *flashWordArray);mcc_generated_files/memory.c: 96: {;mcc_generated_files/memory.c: 97:  
      +                             uint16_t blockStartAddr = (uint16_t )(writeAddr & ((0x2000 -1) ^ (32 -1)));
  8622                           
  8623                           ;incstack = 0
  8624                           ; Regs used in _FLASH_WriteBlock: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8625  0BB1  30E0               	movlw	224
  8626  0BB2  054E               	andwf	FLASH_WriteBlock@writeAddr,w
  8627  0BB3  00D4               	movwf	FLASH_WriteBlock@blockStartAddr
  8628  0BB4  301F               	movlw	31
  8629  0BB5  054F               	andwf	FLASH_WriteBlock@writeAddr+1,w
  8630  0BB6  00D5               	movwf	FLASH_WriteBlock@blockStartAddr+1
  8631                           
  8632                           ;mcc_generated_files/memory.c: 98:     uint8_t GIEBitValue = INTCONbits.GIE;
  8633  0BB7  3000               	movlw	0
  8634  0BB8  1B8B               	btfsc	11,7	;volatile
  8635  0BB9  3001               	movlw	1
  8636  0BBA  00D6               	movwf	FLASH_WriteBlock@GIEBitValue
  8637                           
  8638                           ;mcc_generated_files/memory.c: 99:     uint8_t i;;mcc_generated_files/memory.c: 102:    
      +                           if( writeAddr != blockStartAddr )
  8639  0BBB  0855               	movf	FLASH_WriteBlock@blockStartAddr+1,w
  8640  0BBC  064F               	xorwf	FLASH_WriteBlock@writeAddr+1,w
  8641  0BBD  1D03               	skipz
  8642  0BBE  2BC1               	goto	u2015
  8643  0BBF  0854               	movf	FLASH_WriteBlock@blockStartAddr,w
  8644  0BC0  064E               	xorwf	FLASH_WriteBlock@writeAddr,w
  8645  0BC1                     u2015:	
  8646  0BC1  1D03               	btfss	3,2
  8647  0BC2  0008               	return
  8648                           
  8649                           ;mcc_generated_files/memory.c: 107:     INTCONbits.GIE = 0;
  8650                           
  8651                           ;mcc_generated_files/memory.c: 105:     }
  8652  0BC3  138B               	bcf	11,7	;volatile
  8653                           
  8654                           ;mcc_generated_files/memory.c: 110:     FLASH_EraseBlock(writeAddr);
  8655  0BC4  084F               	movf	FLASH_WriteBlock@writeAddr+1,w
  8656  0BC5  00CC               	movwf	FLASH_EraseBlock@startAddr+1
  8657  0BC6  084E               	movf	FLASH_WriteBlock@writeAddr,w
  8658  0BC7  00CB               	movwf	FLASH_EraseBlock@startAddr
  8659  0BC8  3189  21A4  318B   	fcall	_FLASH_EraseBlock
  8660                           
  8661                           ;mcc_generated_files/memory.c: 113:     PMCON1bits.CFGS = 0;
  8662  0BCB  0023               	movlb	3	; select bank3
  8663  0BCC  1315               	bcf	21,6	;volatile
  8664                           
  8665                           ;mcc_generated_files/memory.c: 114:     PMCON1bits.WREN = 1;
  8666  0BCD  1515               	bsf	21,2	;volatile
  8667                           
  8668                           ;mcc_generated_files/memory.c: 115:     PMCON1bits.LWLO = 1;
  8669  0BCE  1695               	bsf	21,5	;volatile
  8670                           
  8671                           ;mcc_generated_files/memory.c: 117:     for (i=0; i<32; i++)
  8672  0BCF  0020               	movlb	0	; select bank0
  8673  0BD0  01D7               	clrf	FLASH_WriteBlock@i
  8674  0BD1                     l3256:	
  8675                           
  8676                           ;mcc_generated_files/memory.c: 118:     {;mcc_generated_files/memory.c: 120:         PMA
      +                          DRL = (writeAddr & 0xFF);
  8677  0BD1  084E               	movf	FLASH_WriteBlock@writeAddr,w
  8678  0BD2  0023               	movlb	3	; select bank3
  8679  0BD3  0091               	movwf	17	;volatile
  8680                           
  8681                           ;mcc_generated_files/memory.c: 122:         PMADRH = ((writeAddr & 0xFF00) >> 8);
  8682  0BD4  0020               	movlb	0	; select bank0
  8683  0BD5  084F               	movf	FLASH_WriteBlock@writeAddr+1,w
  8684  0BD6  0023               	movlb	3	; select bank3
  8685  0BD7  0092               	movwf	18	;volatile
  8686                           
  8687                           ;mcc_generated_files/memory.c: 125:         PMDATL = flashWordArray[i];
  8688  0BD8  0020               	movlb	0	; select bank0
  8689  0BD9  3557               	lslf	FLASH_WriteBlock@i,w
  8690  0BDA  0750               	addwf	FLASH_WriteBlock@flashWordArray,w
  8691  0BDB  00D1               	movwf	??_FLASH_WriteBlock
  8692  0BDC  0851               	movf	??_FLASH_WriteBlock,w
  8693  0BDD  0086               	movwf	6
  8694  0BDE  0187               	clrf	7
  8695  0BDF  0801               	movf	1,w
  8696  0BE0  0023               	movlb	3	; select bank3
  8697  0BE1  0093               	movwf	19	;volatile
  8698                           
  8699                           ;mcc_generated_files/memory.c: 126:         PMDATH = ((flashWordArray[i] & 0xFF00) >> 8)
      +                          ;
  8700  0BE2  0020               	movlb	0	; select bank0
  8701  0BE3  3557               	lslf	FLASH_WriteBlock@i,w
  8702  0BE4  0750               	addwf	FLASH_WriteBlock@flashWordArray,w
  8703  0BE5  00D1               	movwf	??_FLASH_WriteBlock
  8704  0BE6  0851               	movf	??_FLASH_WriteBlock,w
  8705  0BE7  0086               	movwf	6
  8706  0BE8  0187               	clrf	7
  8707  0BE9  3F40               	moviw [0]fsr1
  8708  0BEA  00D2               	movwf	??_FLASH_WriteBlock+1
  8709  0BEB  3F41               	moviw [1]fsr1
  8710  0BEC  00D3               	movwf	??_FLASH_WriteBlock+2
  8711  0BED  0853               	movf	??_FLASH_WriteBlock+2,w
  8712  0BEE  0023               	movlb	3	; select bank3
  8713  0BEF  0094               	movwf	20	;volatile
  8714                           
  8715                           ;mcc_generated_files/memory.c: 128:         if(i == (32 -1))
  8716  0BF0  301F               	movlw	31
  8717  0BF1  0020               	movlb	0	; select bank0
  8718  0BF2  0657               	xorwf	FLASH_WriteBlock@i,w
  8719  0BF3  1D03               	btfss	3,2
  8720  0BF4  2BF7               	goto	l3266
  8721                           
  8722                           ;mcc_generated_files/memory.c: 129:         {;mcc_generated_files/memory.c: 131:        
      +                               PMCON1bits.LWLO = 0;
  8723  0BF5  0023               	movlb	3	; select bank3
  8724  0BF6  1295               	bcf	21,5	;volatile
  8725  0BF7                     l3266:	
  8726                           
  8727                           ;mcc_generated_files/memory.c: 134:         PMCON2 = 0x55;
  8728  0BF7  3055               	movlw	85
  8729  0BF8  0023               	movlb	3	; select bank3
  8730  0BF9  0096               	movwf	22	;volsfr
  8731                           
  8732                           ;mcc_generated_files/memory.c: 135:         PMCON2 = 0xAA;
  8733  0BFA  30AA               	movlw	170
  8734  0BFB  0096               	movwf	22	;volsfr
  8735                           
  8736                           ;mcc_generated_files/memory.c: 136:         PMCON1bits.WR = 1;
  8737  0BFC  1495               	bsf	21,1	;volatile
  8738                           
  8739                           ;mcc_generated_files/memory.c: 137:         __nop();
  8740  0BFD  0000               	nop
  8741                           
  8742                           ;mcc_generated_files/memory.c: 138:         __nop();
  8743  0BFE  0000               	nop
  8744                           
  8745                           ;mcc_generated_files/memory.c: 140:  writeAddr++;
  8746  0BFF  3001               	movlw	1
  8747  0C00  0020               	movlb	0	; select bank0
  8748  0C01  07CE               	addwf	FLASH_WriteBlock@writeAddr,f
  8749  0C02  3000               	movlw	0
  8750  0C03  3DCF               	addwfc	FLASH_WriteBlock@writeAddr+1,f
  8751  0C04  0064               	clrwdt	;# 
  8752                           
  8753                           ;mcc_generated_files/memory.c: 142:     }
  8754  0C05  3001               	movlw	1
  8755  0C06  0020               	movlb	0	; select bank0
  8756  0C07  00D1               	movwf	??_FLASH_WriteBlock
  8757  0C08  0851               	movf	??_FLASH_WriteBlock,w
  8758  0C09  07D7               	addwf	FLASH_WriteBlock@i,f
  8759  0C0A  3020               	movlw	32
  8760  0C0B  0257               	subwf	FLASH_WriteBlock@i,w
  8761  0C0C  1C03               	skipc
  8762  0C0D  2BD1               	goto	l3256
  8763                           
  8764                           ;mcc_generated_files/memory.c: 144:     PMCON1bits.WREN = 0;
  8765  0C0E  0023               	movlb	3	; select bank3
  8766  0C0F  1115               	bcf	21,2	;volatile
  8767                           
  8768                           ;mcc_generated_files/memory.c: 145:     INTCONbits.GIE = GIEBitValue;
  8769  0C10  0020               	movlb	0	; select bank0
  8770  0C11  0C56               	rrf	FLASH_WriteBlock@GIEBitValue,w
  8771  0C12  1C03               	skipc
  8772  0C13  138B               	bcf	11,7	;volatile
  8773  0C14  1803               	skipnc
  8774  0C15  178B               	bsf	11,7	;volatile
  8775  0C16  0008               	return
  8776  0C17                     __end_of_FLASH_WriteBlock:	
  8777                           
  8778                           	psect	text15
  8779  09A4                     __ptext15:	
  8780 ;; *************** function _FLASH_EraseBlock *****************
  8781 ;; Defined at:
  8782 ;;		line 150 in file "mcc_generated_files/memory.c"
  8783 ;; Parameters:    Size  Location     Type
  8784 ;;  startAddr       2    9[BANK0 ] unsigned short 
  8785 ;; Auto vars:     Size  Location     Type
  8786 ;;  GIEBitValue     1   11[BANK0 ] unsigned char 
  8787 ;; Return value:  Size  Location     Type
  8788 ;;                  1    wreg      void 
  8789 ;; Registers used:
  8790 ;;		wreg, status,2, status,0
  8791 ;; Tracked objects:
  8792 ;;		On entry : 1F/0
  8793 ;;		On exit  : 1F/0
  8794 ;;		Unchanged: 0/0
  8795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8796 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8797 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8799 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8800 ;;Total ram usage:        3 bytes
  8801 ;; Hardware stack levels used:    1
  8802 ;; Hardware stack levels required when called:    5
  8803 ;; This function calls:
  8804 ;;		Nothing
  8805 ;; This function is called by:
  8806 ;;		_FLASH_WriteBlock
  8807 ;; This function uses a non-reentrant model
  8808 ;;
  8809                           
  8810                           
  8811                           ;psect for function _FLASH_EraseBlock
  8812  09A4                     _FLASH_EraseBlock:	
  8813                           
  8814                           ;mcc_generated_files/memory.c: 150: void FLASH_EraseBlock(uint16_t startAddr);mcc_genera
      +                          ted_files/memory.c: 151: {;mcc_generated_files/memory.c: 152:     uint8_t GIEBitValue = 
      +                          INTCONbits.GIE;
  8815                           
  8816                           ;incstack = 0
  8817                           ; Regs used in _FLASH_EraseBlock: [wreg+status,2+status,0]
  8818  09A4  3000               	movlw	0
  8819  09A5  1B8B               	btfsc	11,7	;volatile
  8820  09A6  3001               	movlw	1
  8821  09A7  00CD               	movwf	FLASH_EraseBlock@GIEBitValue
  8822                           
  8823                           ;mcc_generated_files/memory.c: 155:     INTCONbits.GIE = 0;
  8824  09A8  138B               	bcf	11,7	;volatile
  8825                           
  8826                           ;mcc_generated_files/memory.c: 157:     PMADRL = (startAddr & 0xFF);
  8827  09A9  084B               	movf	FLASH_EraseBlock@startAddr,w
  8828  09AA  0023               	movlb	3	; select bank3
  8829  09AB  0091               	movwf	17	;volatile
  8830                           
  8831                           ;mcc_generated_files/memory.c: 159:     PMADRH = ((startAddr & 0xFF00) >> 8);
  8832  09AC  0020               	movlb	0	; select bank0
  8833  09AD  084C               	movf	FLASH_EraseBlock@startAddr+1,w
  8834  09AE  0023               	movlb	3	; select bank3
  8835  09AF  0092               	movwf	18	;volatile
  8836                           
  8837                           ;mcc_generated_files/memory.c: 162:     PMCON1bits.CFGS = 0;
  8838  09B0  1315               	bcf	21,6	;volatile
  8839                           
  8840                           ;mcc_generated_files/memory.c: 163:     PMCON1bits.FREE = 1;
  8841  09B1  1615               	bsf	21,4	;volatile
  8842                           
  8843                           ;mcc_generated_files/memory.c: 164:     PMCON1bits.WREN = 1;
  8844  09B2  1515               	bsf	21,2	;volatile
  8845                           
  8846                           ;mcc_generated_files/memory.c: 167:     PMCON2 = 0x55;
  8847  09B3  3055               	movlw	85
  8848  09B4  0096               	movwf	22	;volsfr
  8849                           
  8850                           ;mcc_generated_files/memory.c: 168:     PMCON2 = 0xAA;
  8851  09B5  30AA               	movlw	170
  8852  09B6  0096               	movwf	22	;volsfr
  8853                           
  8854                           ;mcc_generated_files/memory.c: 169:     PMCON1bits.WR = 1;
  8855  09B7  1495               	bsf	21,1	;volatile
  8856                           
  8857                           ;mcc_generated_files/memory.c: 170:     __nop();
  8858  09B8  0000               	nop
  8859                           
  8860                           ;mcc_generated_files/memory.c: 171:     __nop();
  8861  09B9  0000               	nop
  8862                           
  8863                           ;mcc_generated_files/memory.c: 173:     PMCON1bits.WREN = 0;
  8864  09BA  0023               	movlb	3	; select bank3
  8865  09BB  1115               	bcf	21,2	;volatile
  8866                           
  8867                           ;mcc_generated_files/memory.c: 174:     INTCONbits.GIE = GIEBitValue;
  8868  09BC  0020               	movlb	0	; select bank0
  8869  09BD  0C4D               	rrf	FLASH_EraseBlock@GIEBitValue,w
  8870  09BE  1C03               	skipc
  8871  09BF  138B               	bcf	11,7	;volatile
  8872  09C0  1803               	skipnc
  8873  09C1  178B               	bsf	11,7	;volatile
  8874  09C2  0008               	return
  8875  09C3                     __end_of_FLASH_EraseBlock:	
  8876                           
  8877                           	psect	text16
  8878  16DA                     __ptext16:	
  8879 ;; *************** function _is_chopper_active *****************
  8880 ;; Defined at:
  8881 ;;		line 245 in file "vcontrol.c"
  8882 ;; Parameters:    Size  Location     Type
  8883 ;;		None
  8884 ;; Auto vars:     Size  Location     Type
  8885 ;;		None
  8886 ;; Return value:  Size  Location     Type
  8887 ;;                  1    wreg      _Bool 
  8888 ;; Registers used:
  8889 ;;		wreg
  8890 ;; Tracked objects:
  8891 ;;		On entry : 1F/2
  8892 ;;		On exit  : 1F/0
  8893 ;;		Unchanged: 0/0
  8894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8895 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8896 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8897 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8898 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8899 ;;Total ram usage:        0 bytes
  8900 ;; Hardware stack levels used:    1
  8901 ;; Hardware stack levels required when called:    5
  8902 ;; This function calls:
  8903 ;;		Nothing
  8904 ;; This function is called by:
  8905 ;;		_uart_task
  8906 ;; This function uses a non-reentrant model
  8907 ;;
  8908                           
  8909                           
  8910                           ;psect for function _is_chopper_active
  8911  16DA                     _is_chopper_active:	
  8912                           
  8913                           ;vcontrol.c: 247:     return chopper_active;
  8914                           
  8915                           ;incstack = 0
  8916                           ; Regs used in _is_chopper_active: [wreg]
  8917  16DA  0020               	movlb	0	; select bank0
  8918  16DB  082C               	movf	_chopper_active,w
  8919  16DC  0008               	return
  8920  16DD                     __end_of_is_chopper_active:	
  8921                           
  8922                           	psect	text17
  8923  0891                     __ptext17:	
  8924 ;; *************** function _get_vdc_speed *****************
  8925 ;; Defined at:
  8926 ;;		line 304 in file "vcontrol.c"
  8927 ;; Parameters:    Size  Location     Type
  8928 ;;		None
  8929 ;; Auto vars:     Size  Location     Type
  8930 ;;		None
  8931 ;; Return value:  Size  Location     Type
  8932 ;;                  2   15[BANK0 ] unsigned short 
  8933 ;; Registers used:
  8934 ;;		wreg, status,2, status,0, pclath, cstack
  8935 ;; Tracked objects:
  8936 ;;		On entry : 1F/2
  8937 ;;		On exit  : 1F/0
  8938 ;;		Unchanged: 0/0
  8939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8940 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8943 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8944 ;;Total ram usage:        2 bytes
  8945 ;; Hardware stack levels used:    1
  8946 ;; Hardware stack levels required when called:    6
  8947 ;; This function calls:
  8948 ;;		___wmul
  8949 ;; This function is called by:
  8950 ;;		_uart_task
  8951 ;; This function uses a non-reentrant model
  8952 ;;
  8953                           
  8954                           
  8955                           ;psect for function _get_vdc_speed
  8956  0891                     _get_vdc_speed:	
  8957                           
  8958                           ;vcontrol.c: 306:     return duty_count_up_max * 100;
  8959                           
  8960                           ;incstack = 0
  8961                           ; Regs used in _get_vdc_speed: [wreg+status,2+status,0+pclath+cstack]
  8962  0891  0021               	movlb	1	; select bank1
  8963  0892  086D               	movf	(_duty_count_up_max+1)^(0+128),w
  8964  0893  0020               	movlb	0	; select bank0
  8965  0894  00CC               	movwf	___wmul@multiplier+1
  8966  0895  0021               	movlb	1	; select bank1
  8967  0896  086C               	movf	_duty_count_up_max^(0+128),w
  8968  0897  0020               	movlb	0	; select bank0
  8969  0898  00CB               	movwf	___wmul@multiplier
  8970  0899  3064               	movlw	100
  8971  089A  00CD               	movwf	___wmul@multiplicand
  8972  089B  3000               	movlw	0
  8973  089C  00CE               	movwf	___wmul@multiplicand+1
  8974  089D  3189  214E         	fcall	___wmul
  8975  089F  084C               	movf	?___wmul+1,w
  8976  08A0  00D2               	movwf	?_get_vdc_speed+1
  8977  08A1  084B               	movf	?___wmul,w
  8978  08A2  00D1               	movwf	?_get_vdc_speed
  8979  08A3  0008               	return
  8980  08A4                     __end_of_get_vdc_speed:	
  8981                           
  8982                           	psect	text18
  8983  094E                     __ptext18:	
  8984 ;; *************** function ___wmul *****************
  8985 ;; Defined at:
  8986 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
  8987 ;; Parameters:    Size  Location     Type
  8988 ;;  multiplier      2    9[BANK0 ] unsigned int 
  8989 ;;  multiplicand    2   11[BANK0 ] unsigned int 
  8990 ;; Auto vars:     Size  Location     Type
  8991 ;;  product         2   13[BANK0 ] unsigned int 
  8992 ;; Return value:  Size  Location     Type
  8993 ;;                  2    9[BANK0 ] unsigned int 
  8994 ;; Registers used:
  8995 ;;		wreg, status,2, status,0
  8996 ;; Tracked objects:
  8997 ;;		On entry : 1F/0
  8998 ;;		On exit  : 1F/0
  8999 ;;		Unchanged: 0/0
  9000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9001 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9002 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9003 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9004 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9005 ;;Total ram usage:        6 bytes
  9006 ;; Hardware stack levels used:    1
  9007 ;; Hardware stack levels required when called:    5
  9008 ;; This function calls:
  9009 ;;		Nothing
  9010 ;; This function is called by:
  9011 ;;		_get_vdc_speed
  9012 ;; This function uses a non-reentrant model
  9013 ;;
  9014                           
  9015                           
  9016                           ;psect for function ___wmul
  9017  094E                     ___wmul:	
  9018                           
  9019                           ;incstack = 0
  9020                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  9021  094E  01CF               	clrf	___wmul@product
  9022  094F  01D0               	clrf	___wmul@product+1
  9023  0950                     l3312:	
  9024  0950  1C4B               	btfss	___wmul@multiplier,0
  9025  0951  2956               	goto	l1092
  9026  0952  084D               	movf	___wmul@multiplicand,w
  9027  0953  07CF               	addwf	___wmul@product,f
  9028  0954  084E               	movf	___wmul@multiplicand+1,w
  9029  0955  3DD0               	addwfc	___wmul@product+1,f
  9030  0956                     l1092:	
  9031  0956  3001               	movlw	1
  9032  0957                     u2085:	
  9033  0957  35CD               	lslf	___wmul@multiplicand,f
  9034  0958  0DCE               	rlf	___wmul@multiplicand+1,f
  9035  0959  0B89               	decfsz	9,f
  9036  095A  2957               	goto	u2085
  9037  095B  3001               	movlw	1
  9038  095C                     u2095:	
  9039  095C  36CC               	lsrf	___wmul@multiplier+1,f
  9040  095D  0CCB               	rrf	___wmul@multiplier,f
  9041  095E  0B89               	decfsz	9,f
  9042  095F  295C               	goto	u2095
  9043  0960  084B               	movf	___wmul@multiplier,w
  9044  0961  044C               	iorwf	___wmul@multiplier+1,w
  9045  0962  1D03               	btfss	3,2
  9046  0963  2950               	goto	l3312
  9047  0964  0850               	movf	___wmul@product+1,w
  9048  0965  00CC               	movwf	?___wmul+1
  9049  0966  084F               	movf	___wmul@product,w
  9050  0967  00CB               	movwf	?___wmul
  9051  0968  0008               	return
  9052  0969                     __end_of___wmul:	
  9053                           
  9054                           	psect	text19
  9055  1702                     __ptext19:	
  9056 ;; *************** function _get_vdc_min *****************
  9057 ;; Defined at:
  9058 ;;		line 289 in file "vcontrol.c"
  9059 ;; Parameters:    Size  Location     Type
  9060 ;;		None
  9061 ;; Auto vars:     Size  Location     Type
  9062 ;;		None
  9063 ;; Return value:  Size  Location     Type
  9064 ;;                  2    9[BANK0 ] unsigned short 
  9065 ;; Registers used:
  9066 ;;		wreg
  9067 ;; Tracked objects:
  9068 ;;		On entry : 1F/0
  9069 ;;		On exit  : 1F/0
  9070 ;;		Unchanged: 0/0
  9071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9072 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9073 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9074 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9075 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9076 ;;Total ram usage:        2 bytes
  9077 ;; Hardware stack levels used:    1
  9078 ;; Hardware stack levels required when called:    5
  9079 ;; This function calls:
  9080 ;;		Nothing
  9081 ;; This function is called by:
  9082 ;;		_uart_task
  9083 ;; This function uses a non-reentrant model
  9084 ;;
  9085                           
  9086                           
  9087                           ;psect for function _get_vdc_min
  9088  1702                     _get_vdc_min:	
  9089                           
  9090                           ;vcontrol.c: 291:     return vdc_min;
  9091                           
  9092                           ;incstack = 0
  9093                           ; Regs used in _get_vdc_min: [wreg]
  9094  1702  0841               	movf	_vdc_min+1,w
  9095  1703  00CC               	movwf	?_get_vdc_min+1
  9096  1704  0840               	movf	_vdc_min,w
  9097  1705  00CB               	movwf	?_get_vdc_min
  9098  1706  0008               	return
  9099  1707                     __end_of_get_vdc_min:	
  9100                           
  9101                           	psect	text20
  9102  1713                     __ptext20:	
  9103 ;; *************** function _get_vdc_max *****************
  9104 ;; Defined at:
  9105 ;;		line 294 in file "vcontrol.c"
  9106 ;; Parameters:    Size  Location     Type
  9107 ;;		None
  9108 ;; Auto vars:     Size  Location     Type
  9109 ;;		None
  9110 ;; Return value:  Size  Location     Type
  9111 ;;                  2    9[BANK0 ] unsigned short 
  9112 ;; Registers used:
  9113 ;;		wreg
  9114 ;; Tracked objects:
  9115 ;;		On entry : 1F/2
  9116 ;;		On exit  : 1F/0
  9117 ;;		Unchanged: 0/0
  9118 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9119 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9120 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9121 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9122 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9123 ;;Total ram usage:        2 bytes
  9124 ;; Hardware stack levels used:    1
  9125 ;; Hardware stack levels required when called:    5
  9126 ;; This function calls:
  9127 ;;		Nothing
  9128 ;; This function is called by:
  9129 ;;		_uart_task
  9130 ;; This function uses a non-reentrant model
  9131 ;;
  9132                           
  9133                           
  9134                           ;psect for function _get_vdc_max
  9135  1713                     _get_vdc_max:	
  9136                           
  9137                           ;vcontrol.c: 296:     return vdc_max;
  9138                           
  9139                           ;incstack = 0
  9140                           ; Regs used in _get_vdc_max: [wreg]
  9141  1713  0020               	movlb	0	; select bank0
  9142  1714  083F               	movf	_vdc_max+1,w
  9143  1715  00CC               	movwf	?_get_vdc_max+1
  9144  1716  083E               	movf	_vdc_max,w
  9145  1717  00CB               	movwf	?_get_vdc_max
  9146  1718  0008               	return
  9147  1719                     __end_of_get_vdc_max:	
  9148                           
  9149                           	psect	text21
  9150  170D                     __ptext21:	
  9151 ;; *************** function _get_vdc_critic *****************
  9152 ;; Defined at:
  9153 ;;		line 299 in file "vcontrol.c"
  9154 ;; Parameters:    Size  Location     Type
  9155 ;;		None
  9156 ;; Auto vars:     Size  Location     Type
  9157 ;;		None
  9158 ;; Return value:  Size  Location     Type
  9159 ;;                  2    9[BANK0 ] unsigned short 
  9160 ;; Registers used:
  9161 ;;		wreg
  9162 ;; Tracked objects:
  9163 ;;		On entry : 1F/2
  9164 ;;		On exit  : 1F/0
  9165 ;;		Unchanged: 0/0
  9166 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9167 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9168 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9169 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9170 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9171 ;;Total ram usage:        2 bytes
  9172 ;; Hardware stack levels used:    1
  9173 ;; Hardware stack levels required when called:    5
  9174 ;; This function calls:
  9175 ;;		Nothing
  9176 ;; This function is called by:
  9177 ;;		_uart_task
  9178 ;; This function uses a non-reentrant model
  9179 ;;
  9180                           
  9181                           
  9182                           ;psect for function _get_vdc_critic
  9183  170D                     _get_vdc_critic:	
  9184                           
  9185                           ;vcontrol.c: 301:     return vdc_critic;
  9186                           
  9187                           ;incstack = 0
  9188                           ; Regs used in _get_vdc_critic: [wreg]
  9189  170D  0020               	movlb	0	; select bank0
  9190  170E  083D               	movf	_vdc_critic+1,w
  9191  170F  00CC               	movwf	?_get_vdc_critic+1
  9192  1710  083C               	movf	_vdc_critic,w
  9193  1711  00CB               	movwf	?_get_vdc_critic
  9194  1712  0008               	return
  9195  1713                     __end_of_get_vdc_critic:	
  9196                           
  9197                           	psect	text22
  9198  16FD                     __ptext22:	
  9199 ;; *************** function _get_vdc *****************
  9200 ;; Defined at:
  9201 ;;		line 309 in file "vcontrol.c"
  9202 ;; Parameters:    Size  Location     Type
  9203 ;;		None
  9204 ;; Auto vars:     Size  Location     Type
  9205 ;;		None
  9206 ;; Return value:  Size  Location     Type
  9207 ;;                  2    9[BANK0 ] unsigned short 
  9208 ;; Registers used:
  9209 ;;		wreg
  9210 ;; Tracked objects:
  9211 ;;		On entry : 1F/0
  9212 ;;		On exit  : 1F/0
  9213 ;;		Unchanged: 0/0
  9214 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9215 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9216 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9218 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9219 ;;Total ram usage:        2 bytes
  9220 ;; Hardware stack levels used:    1
  9221 ;; Hardware stack levels required when called:    5
  9222 ;; This function calls:
  9223 ;;		Nothing
  9224 ;; This function is called by:
  9225 ;;		_uart_task
  9226 ;; This function uses a non-reentrant model
  9227 ;;
  9228                           
  9229                           
  9230                           ;psect for function _get_vdc
  9231  16FD                     _get_vdc:	
  9232                           
  9233                           ;vcontrol.c: 311:     return vdc;
  9234                           
  9235                           ;incstack = 0
  9236                           ; Regs used in _get_vdc: [wreg]
  9237  16FD  083B               	movf	_vdc+1,w
  9238  16FE  00CC               	movwf	?_get_vdc+1
  9239  16FF  083A               	movf	_vdc,w
  9240  1700  00CB               	movwf	?_get_vdc
  9241  1701  0008               	return
  9242  1702                     __end_of_get_vdc:	
  9243                           
  9244                           	psect	text23
  9245  08BA                     __ptext23:	
  9246 ;; *************** function _uart_start *****************
  9247 ;; Defined at:
  9248 ;;		line 43 in file "UartParser.c"
  9249 ;; Parameters:    Size  Location     Type
  9250 ;;		None
  9251 ;; Auto vars:     Size  Location     Type
  9252 ;;		None
  9253 ;; Return value:  Size  Location     Type
  9254 ;;                  1    wreg      void 
  9255 ;; Registers used:
  9256 ;;		wreg, status,2, status,0, pclath, cstack
  9257 ;; Tracked objects:
  9258 ;;		On entry : 1D/0
  9259 ;;		On exit  : 1F/0
  9260 ;;		Unchanged: 0/0
  9261 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9262 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9263 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9265 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9266 ;;Total ram usage:        0 bytes
  9267 ;; Hardware stack levels used:    1
  9268 ;; Hardware stack levels required when called:    6
  9269 ;; This function calls:
  9270 ;;		_EUSART_SetRxInterruptHandler
  9271 ;;		_TMR1_SetInterruptHandler
  9272 ;; This function is called by:
  9273 ;;		_main
  9274 ;; This function uses a non-reentrant model
  9275 ;;
  9276                           
  9277                           
  9278                           ;psect for function _uart_start
  9279  08BA                     _uart_start:	
  9280                           
  9281                           ;UartParser.c: 45:     if( st == SHUTDOWN )
  9282                           
  9283                           ;incstack = 0
  9284                           ; Regs used in _uart_start: [wreg+status,2+status,0+pclath+cstack]
  9285  08BA  0020               	movlb	0	; select bank0
  9286  08BB  0827               	movf	UartParser@st,w
  9287  08BC  1D03               	btfss	3,2
  9288  08BD  0008               	return
  9289                           
  9290                           ;UartParser.c: 46:     {;UartParser.c: 47:         TMR1_SetInterruptHandler(TMR1_SystemT
      +                          imer_ISR);
  9291  08BE  3007               	movlw	low _TMR1_SystemTimer_ISR
  9292  08BF  00CB               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  9293  08C0  3017               	movlw	high _TMR1_SystemTimer_ISR
  9294  08C1  00CC               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  9295  08C2  3197  2755  3188   	fcall	_TMR1_SetInterruptHandler
  9296                           
  9297                           ;UartParser.c: 48:         EUSART_SetRxInterruptHandler(EUSART_CommandHandler_ISR);
  9298  08C5  30C3               	movlw	low _EUSART_CommandHandler_ISR
  9299  08C6  0020               	movlb	0	; select bank0
  9300  08C7  00CB               	movwf	EUSART_SetRxInterruptHandler@interruptHandler
  9301  08C8  3009               	movlw	high _EUSART_CommandHandler_ISR
  9302  08C9  00CC               	movwf	EUSART_SetRxInterruptHandler@interruptHandler+1
  9303  08CA  3197  2745         	fcall	_EUSART_SetRxInterruptHandler
  9304                           
  9305                           ;UartParser.c: 49:         st = INIT;
  9306  08CC  0020               	movlb	0	; select bank0
  9307  08CD  01A7               	clrf	UartParser@st
  9308  08CE  0AA7               	incf	UartParser@st,f
  9309  08CF  0008               	return
  9310  08D0                     __end_of_uart_start:	
  9311                           
  9312                           	psect	text24
  9313  0933                     __ptext24:	
  9314 ;; *************** function _SYSTEM_Initialize *****************
  9315 ;; Defined at:
  9316 ;;		line 50 in file "mcc_generated_files/mcc.c"
  9317 ;; Parameters:    Size  Location     Type
  9318 ;;		None
  9319 ;; Auto vars:     Size  Location     Type
  9320 ;;		None
  9321 ;; Return value:  Size  Location     Type
  9322 ;;                  1    wreg      void 
  9323 ;; Registers used:
  9324 ;;		wreg, status,2, status,0, pclath, cstack
  9325 ;; Tracked objects:
  9326 ;;		On entry : B1F/0
  9327 ;;		On exit  : 1F/1
  9328 ;;		Unchanged: 0/0
  9329 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9330 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9331 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9333 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9334 ;;Total ram usage:        0 bytes
  9335 ;; Hardware stack levels used:    1
  9336 ;; Hardware stack levels required when called:    7
  9337 ;; This function calls:
  9338 ;;		_ADC_Initialize
  9339 ;;		_EUSART_Initialize
  9340 ;;		_OSCILLATOR_Initialize
  9341 ;;		_PIN_MANAGER_Initialize
  9342 ;;		_PWM3_Initialize
  9343 ;;		_TMR1_Initialize
  9344 ;;		_TMR2_Initialize
  9345 ;;		_TMR4_Initialize
  9346 ;;		_WDT_Initialize
  9347 ;; This function is called by:
  9348 ;;		_main
  9349 ;; This function uses a non-reentrant model
  9350 ;;
  9351                           
  9352                           
  9353                           ;psect for function _SYSTEM_Initialize
  9354  0933                     _SYSTEM_Initialize:	
  9355                           
  9356                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  9357                           
  9358                           ;incstack = 0
  9359                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  9360  0933  318A  2209  3189   	fcall	_PIN_MANAGER_Initialize
  9361                           
  9362                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  9363  0936  3197  274D  3189   	fcall	_OSCILLATOR_Initialize
  9364                           
  9365                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  9366  0939  3196  26EB  3189   	fcall	_WDT_Initialize
  9367                           
  9368                           ;mcc_generated_files/mcc.c: 56:     ADC_Initialize();
  9369  093C  3197  27EF  3189   	fcall	_ADC_Initialize
  9370                           
  9371                           ;mcc_generated_files/mcc.c: 57:     TMR4_Initialize();
  9372  093F  3197  276D  3189   	fcall	_TMR4_Initialize
  9373                           
  9374                           ;mcc_generated_files/mcc.c: 58:     PWM3_Initialize();
  9375  0942  3197  278D  3189   	fcall	_PWM3_Initialize
  9376                           
  9377                           ;mcc_generated_files/mcc.c: 59:     TMR2_Initialize();
  9378  0945  3188  207F  3189   	fcall	_TMR2_Initialize
  9379                           
  9380                           ;mcc_generated_files/mcc.c: 60:     TMR1_Initialize();
  9381  0948  3188  20FF  3189   	fcall	_TMR1_Initialize
  9382                           
  9383                           ;mcc_generated_files/mcc.c: 61:     EUSART_Initialize();
  9384  094B  318A  2264         	fcall	_EUSART_Initialize
  9385  094D  0008               	return
  9386  094E                     __end_of_SYSTEM_Initialize:	
  9387                           
  9388                           	psect	text25
  9389  16EB                     __ptext25:	
  9390 ;; *************** function _WDT_Initialize *****************
  9391 ;; Defined at:
  9392 ;;		line 76 in file "mcc_generated_files/mcc.c"
  9393 ;; Parameters:    Size  Location     Type
  9394 ;;		None
  9395 ;; Auto vars:     Size  Location     Type
  9396 ;;		None
  9397 ;; Return value:  Size  Location     Type
  9398 ;;                  1    wreg      void 
  9399 ;; Registers used:
  9400 ;;		wreg
  9401 ;; Tracked objects:
  9402 ;;		On entry : B1F/2
  9403 ;;		On exit  : B1F/1
  9404 ;;		Unchanged: B00/0
  9405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9406 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9407 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9409 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9410 ;;Total ram usage:        0 bytes
  9411 ;; Hardware stack levels used:    1
  9412 ;; Hardware stack levels required when called:    5
  9413 ;; This function calls:
  9414 ;;		Nothing
  9415 ;; This function is called by:
  9416 ;;		_SYSTEM_Initialize
  9417 ;; This function uses a non-reentrant model
  9418 ;;
  9419                           
  9420                           
  9421                           ;psect for function _WDT_Initialize
  9422  16EB                     _WDT_Initialize:	
  9423                           
  9424                           ;mcc_generated_files/mcc.c: 79:     WDTCON = 0x16;
  9425                           
  9426                           ;incstack = 0
  9427                           ; Regs used in _WDT_Initialize: [wreg]
  9428  16EB  3016               	movlw	22
  9429  16EC  0021               	movlb	1	; select bank1
  9430  16ED  0097               	movwf	23	;volatile
  9431  16EE  0008               	return
  9432  16EF                     __end_of_WDT_Initialize:	
  9433                           
  9434                           	psect	text26
  9435  176D                     __ptext26:	
  9436 ;; *************** function _TMR4_Initialize *****************
  9437 ;; Defined at:
  9438 ;;		line 62 in file "mcc_generated_files/tmr4.c"
  9439 ;; Parameters:    Size  Location     Type
  9440 ;;		None
  9441 ;; Auto vars:     Size  Location     Type
  9442 ;;		None
  9443 ;; Return value:  Size  Location     Type
  9444 ;;                  1    wreg      void 
  9445 ;; Registers used:
  9446 ;;		wreg, status,2
  9447 ;; Tracked objects:
  9448 ;;		On entry : 1F/2
  9449 ;;		On exit  : 1F/8
  9450 ;;		Unchanged: 0/0
  9451 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9455 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9456 ;;Total ram usage:        0 bytes
  9457 ;; Hardware stack levels used:    1
  9458 ;; Hardware stack levels required when called:    5
  9459 ;; This function calls:
  9460 ;;		Nothing
  9461 ;; This function is called by:
  9462 ;;		_SYSTEM_Initialize
  9463 ;; This function uses a non-reentrant model
  9464 ;;
  9465                           
  9466                           
  9467                           ;psect for function _TMR4_Initialize
  9468  176D                     _TMR4_Initialize:	
  9469                           
  9470                           ;mcc_generated_files/tmr4.c: 67:     PR4 = 0x63;
  9471                           
  9472                           ;incstack = 0
  9473                           ; Regs used in _TMR4_Initialize: [wreg+status,2]
  9474  176D  3063               	movlw	99
  9475  176E  0028               	movlb	8	; select bank8
  9476  176F  0096               	movwf	22	;volatile
  9477                           
  9478                           ;mcc_generated_files/tmr4.c: 70:     TMR4 = 0x00;
  9479  1770  0195               	clrf	21	;volatile
  9480                           
  9481                           ;mcc_generated_files/tmr4.c: 73:     PIR2bits.TMR4IF = 0;
  9482  1771  0020               	movlb	0	; select bank0
  9483  1772  1092               	bcf	18,1	;volatile
  9484                           
  9485                           ;mcc_generated_files/tmr4.c: 76:     T4CON = 0x05;
  9486  1773  3005               	movlw	5
  9487  1774  0028               	movlb	8	; select bank8
  9488  1775  0097               	movwf	23	;volatile
  9489  1776  0008               	return
  9490  1777                     __end_of_TMR4_Initialize:	
  9491                           
  9492                           	psect	text27
  9493  087F                     __ptext27:	
  9494 ;; *************** function _TMR2_Initialize *****************
  9495 ;; Defined at:
  9496 ;;		line 64 in file "mcc_generated_files/tmr2.c"
  9497 ;; Parameters:    Size  Location     Type
  9498 ;;		None
  9499 ;; Auto vars:     Size  Location     Type
  9500 ;;		None
  9501 ;; Return value:  Size  Location     Type
  9502 ;;                  1    wreg      void 
  9503 ;; Registers used:
  9504 ;;		wreg, status,2, status,0, pclath, cstack
  9505 ;; Tracked objects:
  9506 ;;		On entry : 1F/5
  9507 ;;		On exit  : 1F/0
  9508 ;;		Unchanged: 0/0
  9509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9510 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9511 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9513 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9514 ;;Total ram usage:        0 bytes
  9515 ;; Hardware stack levels used:    1
  9516 ;; Hardware stack levels required when called:    6
  9517 ;; This function calls:
  9518 ;;		_TMR2_SetInterruptHandler
  9519 ;; This function is called by:
  9520 ;;		_SYSTEM_Initialize
  9521 ;; This function uses a non-reentrant model
  9522 ;;
  9523                           
  9524                           
  9525                           ;psect for function _TMR2_Initialize
  9526  087F                     _TMR2_Initialize:	
  9527                           
  9528                           ;mcc_generated_files/tmr2.c: 69:     PR2 = 0xF9;
  9529                           
  9530                           ;incstack = 0
  9531                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
  9532  087F  30F9               	movlw	249
  9533  0880  0020               	movlb	0	; select bank0
  9534  0881  009B               	movwf	27	;volatile
  9535                           
  9536                           ;mcc_generated_files/tmr2.c: 72:     TMR2 = 0x00;
  9537  0882  019A               	clrf	26	;volatile
  9538                           
  9539                           ;mcc_generated_files/tmr2.c: 75:     PIR1bits.TMR2IF = 0;
  9540  0883  1091               	bcf	17,1	;volatile
  9541                           
  9542                           ;mcc_generated_files/tmr2.c: 78:     PIE1bits.TMR2IE = 1;
  9543  0884  0021               	movlb	1	; select bank1
  9544  0885  1491               	bsf	17,1	;volatile
  9545                           
  9546                           ;mcc_generated_files/tmr2.c: 81:     TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandl
      +                          er);
  9547  0886  3003               	movlw	low _TMR2_DefaultInterruptHandler
  9548  0887  0020               	movlb	0	; select bank0
  9549  0888  00CB               	movwf	TMR2_SetInterruptHandler@InterruptHandler
  9550  0889  3000               	movlw	high _TMR2_DefaultInterruptHandler
  9551  088A  00CC               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
  9552  088B  3197  275D         	fcall	_TMR2_SetInterruptHandler
  9553                           
  9554                           ;mcc_generated_files/tmr2.c: 84:     T2CON = 0x06;
  9555  088D  3006               	movlw	6
  9556  088E  0020               	movlb	0	; select bank0
  9557  088F  009C               	movwf	28	;volatile
  9558  0890  0008               	return
  9559  0891                     __end_of_TMR2_Initialize:	
  9560                           
  9561                           	psect	text28
  9562  175D                     __ptext28:	
  9563 ;; *************** function _TMR2_SetInterruptHandler *****************
  9564 ;; Defined at:
  9565 ;;		line 140 in file "mcc_generated_files/tmr2.c"
  9566 ;; Parameters:    Size  Location     Type
  9567 ;;  InterruptHan    2    9[BANK0 ] PTR FTN()void 
  9568 ;;		 -> TMR2_DutyControlHandler_ISR(1), TMR2_DefaultInterruptHandler(1), 
  9569 ;; Auto vars:     Size  Location     Type
  9570 ;;		None
  9571 ;; Return value:  Size  Location     Type
  9572 ;;                  1    wreg      void 
  9573 ;; Registers used:
  9574 ;;		wreg
  9575 ;; Tracked objects:
  9576 ;;		On entry : 1F/0
  9577 ;;		On exit  : 1F/2
  9578 ;;		Unchanged: 0/0
  9579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9580 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9581 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9582 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9583 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9584 ;;Total ram usage:        2 bytes
  9585 ;; Hardware stack levels used:    1
  9586 ;; Hardware stack levels required when called:    5
  9587 ;; This function calls:
  9588 ;;		Nothing
  9589 ;; This function is called by:
  9590 ;;		_TMR2_Initialize
  9591 ;;		_init_chopper
  9592 ;; This function uses a non-reentrant model
  9593 ;;
  9594                           
  9595                           
  9596                           ;psect for function _TMR2_SetInterruptHandler
  9597  175D                     _TMR2_SetInterruptHandler:	
  9598                           
  9599                           ;mcc_generated_files/tmr2.c: 141:     TMR2_InterruptHandler = InterruptHandler;
  9600                           
  9601                           ;incstack = 0
  9602                           ; Regs used in _TMR2_SetInterruptHandler: [wreg]
  9603  175D  084C               	movf	TMR2_SetInterruptHandler@InterruptHandler+1,w
  9604  175E  0022               	movlb	2	; select bank2
  9605  175F  00E6               	movwf	(_TMR2_InterruptHandler+1)^(0+256)
  9606  1760  0020               	movlb	0	; select bank0
  9607  1761  084B               	movf	TMR2_SetInterruptHandler@InterruptHandler,w
  9608  1762  0022               	movlb	2	; select bank2
  9609  1763  00E5               	movwf	_TMR2_InterruptHandler^(0+256)
  9610  1764  0008               	return
  9611  1765                     __end_of_TMR2_SetInterruptHandler:	
  9612                           
  9613                           	psect	text29
  9614  08FF                     __ptext29:	
  9615 ;; *************** function _TMR1_Initialize *****************
  9616 ;; Defined at:
  9617 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  9618 ;; Parameters:    Size  Location     Type
  9619 ;;		None
  9620 ;; Auto vars:     Size  Location     Type
  9621 ;;		None
  9622 ;; Return value:  Size  Location     Type
  9623 ;;                  1    wreg      void 
  9624 ;; Registers used:
  9625 ;;		wreg, status,2, status,0, pclath, cstack
  9626 ;; Tracked objects:
  9627 ;;		On entry : 1F/0
  9628 ;;		On exit  : 1F/0
  9629 ;;		Unchanged: 0/0
  9630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9631 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9632 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9634 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9635 ;;Total ram usage:        0 bytes
  9636 ;; Hardware stack levels used:    1
  9637 ;; Hardware stack levels required when called:    6
  9638 ;; This function calls:
  9639 ;;		_TMR1_SetInterruptHandler
  9640 ;; This function is called by:
  9641 ;;		_SYSTEM_Initialize
  9642 ;; This function uses a non-reentrant model
  9643 ;;
  9644                           
  9645                           
  9646                           ;psect for function _TMR1_Initialize
  9647  08FF                     _TMR1_Initialize:	
  9648                           
  9649                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
  9650                           
  9651                           ;incstack = 0
  9652                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  9653  08FF  0199               	clrf	25	;volatile
  9654                           
  9655                           ;mcc_generated_files/tmr1.c: 72:     TMR1H = 0x3C;
  9656  0900  303C               	movlw	60
  9657  0901  0097               	movwf	23	;volatile
  9658                           
  9659                           ;mcc_generated_files/tmr1.c: 75:     TMR1L = 0xB0;
  9660  0902  30B0               	movlw	176
  9661  0903  0096               	movwf	22	;volatile
  9662                           
  9663                           ;mcc_generated_files/tmr1.c: 78:     PIR1bits.TMR1IF = 0;
  9664  0904  1011               	bcf	17,0	;volatile
  9665                           
  9666                           ;mcc_generated_files/tmr1.c: 81:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  9667  0905  0817               	movf	23,w	;volatile
  9668  0906  0022               	movlb	2	; select bank2
  9669  0907  00E2               	movwf	(_timer1ReloadVal+1)^(0+256)	;volatile
  9670  0908  0020               	movlb	0	; select bank0
  9671  0909  0816               	movf	22,w	;volatile
  9672  090A  0022               	movlb	2	; select bank2
  9673  090B  00E1               	movwf	_timer1ReloadVal^(0+256)	;volatile
  9674                           
  9675                           ;mcc_generated_files/tmr1.c: 84:     PIE1bits.TMR1IE = 1;
  9676  090C  0021               	movlb	1	; select bank1
  9677  090D  1411               	bsf	17,0	;volatile
  9678                           
  9679                           ;mcc_generated_files/tmr1.c: 87:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
  9680  090E  3002               	movlw	low _TMR1_DefaultInterruptHandler
  9681  090F  0020               	movlb	0	; select bank0
  9682  0910  00CB               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  9683  0911  3000               	movlw	high _TMR1_DefaultInterruptHandler
  9684  0912  00CC               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  9685  0913  3197  2755         	fcall	_TMR1_SetInterruptHandler
  9686                           
  9687                           ;mcc_generated_files/tmr1.c: 90:     T1CON = 0x31;
  9688  0915  3031               	movlw	49
  9689  0916  0020               	movlb	0	; select bank0
  9690  0917  0098               	movwf	24	;volatile
  9691  0918  0008               	return
  9692  0919                     __end_of_TMR1_Initialize:	
  9693                           
  9694                           	psect	text30
  9695  1755                     __ptext30:	
  9696 ;; *************** function _TMR1_SetInterruptHandler *****************
  9697 ;; Defined at:
  9698 ;;		line 178 in file "mcc_generated_files/tmr1.c"
  9699 ;; Parameters:    Size  Location     Type
  9700 ;;  InterruptHan    2    9[BANK0 ] PTR FTN()void 
  9701 ;;		 -> TMR1_SystemTimer_ISR(1), TMR1_DefaultInterruptHandler(1), 
  9702 ;; Auto vars:     Size  Location     Type
  9703 ;;		None
  9704 ;; Return value:  Size  Location     Type
  9705 ;;                  1    wreg      void 
  9706 ;; Registers used:
  9707 ;;		wreg
  9708 ;; Tracked objects:
  9709 ;;		On entry : 1F/0
  9710 ;;		On exit  : 1F/2
  9711 ;;		Unchanged: 0/0
  9712 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9713 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9714 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9716 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9717 ;;Total ram usage:        2 bytes
  9718 ;; Hardware stack levels used:    1
  9719 ;; Hardware stack levels required when called:    5
  9720 ;; This function calls:
  9721 ;;		Nothing
  9722 ;; This function is called by:
  9723 ;;		_TMR1_Initialize
  9724 ;;		_uart_start
  9725 ;; This function uses a non-reentrant model
  9726 ;;
  9727                           
  9728                           
  9729                           ;psect for function _TMR1_SetInterruptHandler
  9730  1755                     _TMR1_SetInterruptHandler:	
  9731                           
  9732                           ;mcc_generated_files/tmr1.c: 179:     TMR1_InterruptHandler = InterruptHandler;
  9733                           
  9734                           ;incstack = 0
  9735                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
  9736  1755  084C               	movf	TMR1_SetInterruptHandler@InterruptHandler+1,w
  9737  1756  0022               	movlb	2	; select bank2
  9738  1757  00E0               	movwf	(_TMR1_InterruptHandler+1)^(0+256)
  9739  1758  0020               	movlb	0	; select bank0
  9740  1759  084B               	movf	TMR1_SetInterruptHandler@InterruptHandler,w
  9741  175A  0022               	movlb	2	; select bank2
  9742  175B  00DF               	movwf	_TMR1_InterruptHandler^(0+256)
  9743  175C  0008               	return
  9744  175D                     __end_of_TMR1_SetInterruptHandler:	
  9745                           
  9746                           	psect	text31
  9747  178D                     __ptext31:	
  9748 ;; *************** function _PWM3_Initialize *****************
  9749 ;; Defined at:
  9750 ;;		line 58 in file "mcc_generated_files/pwm3.c"
  9751 ;; Parameters:    Size  Location     Type
  9752 ;;		None
  9753 ;; Auto vars:     Size  Location     Type
  9754 ;;		None
  9755 ;; Return value:  Size  Location     Type
  9756 ;;                  1    wreg      void 
  9757 ;; Registers used:
  9758 ;;		wreg, status,2, status,0
  9759 ;; Tracked objects:
  9760 ;;		On entry : 1F/8
  9761 ;;		On exit  : 1F/5
  9762 ;;		Unchanged: 0/0
  9763 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9764 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9765 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9767 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9768 ;;Total ram usage:        0 bytes
  9769 ;; Hardware stack levels used:    1
  9770 ;; Hardware stack levels required when called:    5
  9771 ;; This function calls:
  9772 ;;		Nothing
  9773 ;; This function is called by:
  9774 ;;		_SYSTEM_Initialize
  9775 ;; This function uses a non-reentrant model
  9776 ;;
  9777                           
  9778                           
  9779                           ;psect for function _PWM3_Initialize
  9780  178D                     _PWM3_Initialize:	
  9781                           
  9782                           ;mcc_generated_files/pwm3.c: 62:     PWM3CON = 0x80;
  9783                           
  9784                           ;incstack = 0
  9785                           ; Regs used in _PWM3_Initialize: [wreg+status,2+status,0]
  9786  178D  3080               	movlw	128
  9787  178E  002C               	movlb	12	; select bank12
  9788  178F  0099               	movwf	25	;volatile
  9789                           
  9790                           ;mcc_generated_files/pwm3.c: 65:     PWM3DCH = 0x00;
  9791  1790  0198               	clrf	24	;volatile
  9792                           
  9793                           ;mcc_generated_files/pwm3.c: 68:     PWM3DCL = 0x00;
  9794  1791  0197               	clrf	23	;volatile
  9795                           
  9796                           ;mcc_generated_files/pwm3.c: 71:     CCPTMRSbits.P3TSEL = 1;
  9797  1792  0025               	movlb	5	; select bank5
  9798  1793  081E               	movf	30,w	;volatile
  9799  1794  39CF               	andlw	-49
  9800  1795  3810               	iorlw	16
  9801  1796  009E               	movwf	30	;volatile
  9802  1797  0008               	return
  9803  1798                     __end_of_PWM3_Initialize:	
  9804                           
  9805                           	psect	text32
  9806  0A09                     __ptext32:	
  9807 ;; *************** function _PIN_MANAGER_Initialize *****************
  9808 ;; Defined at:
  9809 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  9810 ;; Parameters:    Size  Location     Type
  9811 ;;		None
  9812 ;; Auto vars:     Size  Location     Type
  9813 ;;		None
  9814 ;; Return value:  Size  Location     Type
  9815 ;;                  1    wreg      void 
  9816 ;; Registers used:
  9817 ;;		wreg, status,2
  9818 ;; Tracked objects:
  9819 ;;		On entry : B1F/0
  9820 ;;		On exit  : B1F/1D
  9821 ;;		Unchanged: B00/0
  9822 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9823 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9824 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9826 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9827 ;;Total ram usage:        0 bytes
  9828 ;; Hardware stack levels used:    1
  9829 ;; Hardware stack levels required when called:    5
  9830 ;; This function calls:
  9831 ;;		Nothing
  9832 ;; This function is called by:
  9833 ;;		_SYSTEM_Initialize
  9834 ;; This function uses a non-reentrant model
  9835 ;;
  9836                           
  9837                           
  9838                           ;psect for function _PIN_MANAGER_Initialize
  9839  0A09                     _PIN_MANAGER_Initialize:	
  9840                           
  9841                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  9842                           
  9843                           ;incstack = 0
  9844                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  9845  0A09  0022               	movlb	2	; select bank2
  9846  0A0A  018C               	clrf	12	;volatile
  9847                           
  9848                           ;mcc_generated_files/pin_manager.c: 61:     LATC = 0x01;
  9849  0A0B  3001               	movlw	1
  9850  0A0C  008E               	movwf	14	;volatile
  9851                           
  9852                           ;mcc_generated_files/pin_manager.c: 66:     TRISA = 0x07;
  9853  0A0D  3007               	movlw	7
  9854  0A0E  0021               	movlb	1	; select bank1
  9855  0A0F  008C               	movwf	12	;volatile
  9856                           
  9857                           ;mcc_generated_files/pin_manager.c: 67:     TRISC = 0x18;
  9858  0A10  3018               	movlw	24
  9859  0A11  008E               	movwf	14	;volatile
  9860                           
  9861                           ;mcc_generated_files/pin_manager.c: 72:     ANSELC = 0x18;
  9862  0A12  3018               	movlw	24
  9863  0A13  0023               	movlb	3	; select bank3
  9864  0A14  008E               	movwf	14	;volatile
  9865                           
  9866                           ;mcc_generated_files/pin_manager.c: 73:     ANSELA = 0x03;
  9867  0A15  3003               	movlw	3
  9868  0A16  008C               	movwf	12	;volatile
  9869                           
  9870                           ;mcc_generated_files/pin_manager.c: 78:     WPUA = 0x00;
  9871  0A17  0024               	movlb	4	; select bank4
  9872  0A18  018C               	clrf	12	;volatile
  9873                           
  9874                           ;mcc_generated_files/pin_manager.c: 79:     WPUC = 0x00;
  9875  0A19  018E               	clrf	14	;volatile
  9876                           
  9877                           ;mcc_generated_files/pin_manager.c: 80:     OPTION_REGbits.nWPUEN = 1;
  9878  0A1A  0021               	movlb	1	; select bank1
  9879  0A1B  1795               	bsf	21,7	;volatile
  9880                           
  9881                           ;mcc_generated_files/pin_manager.c: 85:     ODCONA = 0x00;
  9882  0A1C  0025               	movlb	5	; select bank5
  9883  0A1D  018C               	clrf	12	;volatile
  9884                           
  9885                           ;mcc_generated_files/pin_manager.c: 86:     ODCONC = 0x00;
  9886  0A1E  018E               	clrf	14	;volatile
  9887                           
  9888                           ;mcc_generated_files/pin_manager.c: 91:     SLRCONA = 0x37;
  9889  0A1F  3037               	movlw	55
  9890  0A20  0026               	movlb	6	; select bank6
  9891  0A21  008C               	movwf	12	;volatile
  9892                           
  9893                           ;mcc_generated_files/pin_manager.c: 92:     SLRCONC = 0x3F;
  9894  0A22  303F               	movlw	63
  9895  0A23  008E               	movwf	14	;volatile
  9896                           
  9897                           ;mcc_generated_files/pin_manager.c: 97:     INLVLA = 0x3F;
  9898  0A24  303F               	movlw	63
  9899  0A25  0027               	movlb	7	; select bank7
  9900  0A26  008C               	movwf	12	;volatile
  9901                           
  9902                           ;mcc_generated_files/pin_manager.c: 98:     INLVLC = 0x3F;
  9903  0A27  303F               	movlw	63
  9904  0A28  008E               	movwf	14	;volatile
  9905                           
  9906                           ;mcc_generated_files/pin_manager.c: 107:     RC0PPS = 0x14;
  9907  0A29  3014               	movlw	20
  9908  0A2A  003D               	movlb	29	; select bank29
  9909  0A2B  00A0               	movwf	32	;volatile
  9910                           
  9911                           ;mcc_generated_files/pin_manager.c: 108:     RXPPS = 0x02;
  9912  0A2C  3002               	movlw	2
  9913  0A2D  003C               	movlb	28	; select bank28
  9914  0A2E  00A4               	movwf	36	;volatile
  9915                           
  9916                           ;mcc_generated_files/pin_manager.c: 109:     RC1PPS = 0x0E;
  9917  0A2F  300E               	movlw	14
  9918  0A30  003D               	movlb	29	; select bank29
  9919  0A31  00A1               	movwf	33	;volatile
  9920                           
  9921                           ;mcc_generated_files/pin_manager.c: 110:     RC2PPS = 0x0E;
  9922  0A32  300E               	movlw	14
  9923  0A33  00A2               	movwf	34	;volatile
  9924  0A34  0008               	return
  9925  0A35                     __end_of_PIN_MANAGER_Initialize:	
  9926                           
  9927                           	psect	text33
  9928  174D                     __ptext33:	
  9929 ;; *************** function _OSCILLATOR_Initialize *****************
  9930 ;; Defined at:
  9931 ;;		line 64 in file "mcc_generated_files/mcc.c"
  9932 ;; Parameters:    Size  Location     Type
  9933 ;;		None
  9934 ;; Auto vars:     Size  Location     Type
  9935 ;;		None
  9936 ;; Return value:  Size  Location     Type
  9937 ;;                  1    wreg      void 
  9938 ;; Registers used:
  9939 ;;		wreg, status,2
  9940 ;; Tracked objects:
  9941 ;;		On entry : B1F/1D
  9942 ;;		On exit  : B1F/2
  9943 ;;		Unchanged: B00/0
  9944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9945 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9946 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9948 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9949 ;;Total ram usage:        0 bytes
  9950 ;; Hardware stack levels used:    1
  9951 ;; Hardware stack levels required when called:    5
  9952 ;; This function calls:
  9953 ;;		Nothing
  9954 ;; This function is called by:
  9955 ;;		_SYSTEM_Initialize
  9956 ;; This function uses a non-reentrant model
  9957 ;;
  9958                           
  9959                           
  9960                           ;psect for function _OSCILLATOR_Initialize
  9961  174D                     _OSCILLATOR_Initialize:	
  9962                           
  9963                           ;mcc_generated_files/mcc.c: 67:     OSCCON = 0x7A;
  9964                           
  9965                           ;incstack = 0
  9966                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  9967  174D  307A               	movlw	122
  9968  174E  0021               	movlb	1	; select bank1
  9969  174F  0099               	movwf	25	;volatile
  9970                           
  9971                           ;mcc_generated_files/mcc.c: 69:     OSCSTAT = 0x00;
  9972  1750  019A               	clrf	26	;volatile
  9973                           
  9974                           ;mcc_generated_files/mcc.c: 71:     OSCTUNE = 0x00;
  9975  1751  0198               	clrf	24	;volatile
  9976                           
  9977                           ;mcc_generated_files/mcc.c: 73:     BORCON = 0x00;
  9978  1752  0022               	movlb	2	; select bank2
  9979  1753  0196               	clrf	22	;volatile
  9980  1754  0008               	return
  9981  1755                     __end_of_OSCILLATOR_Initialize:	
  9982                           
  9983                           	psect	text34
  9984  0A64                     __ptext34:	
  9985 ;; *************** function _EUSART_Initialize *****************
  9986 ;; Defined at:
  9987 ;;		line 83 in file "mcc_generated_files/eusart.c"
  9988 ;; Parameters:    Size  Location     Type
  9989 ;;		None
  9990 ;; Auto vars:     Size  Location     Type
  9991 ;;		None
  9992 ;; Return value:  Size  Location     Type
  9993 ;;                  1    wreg      void 
  9994 ;; Registers used:
  9995 ;;		wreg, status,2, status,0, pclath, cstack
  9996 ;; Tracked objects:
  9997 ;;		On entry : 1F/0
  9998 ;;		On exit  : 1F/1
  9999 ;;		Unchanged: 0/0
 10000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10001 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10002 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10003 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10004 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10005 ;;Total ram usage:        0 bytes
 10006 ;; Hardware stack levels used:    1
 10007 ;; Hardware stack levels required when called:    6
 10008 ;; This function calls:
 10009 ;;		_EUSART_SetErrorHandler
 10010 ;;		_EUSART_SetFramingErrorHandler
 10011 ;;		_EUSART_SetOverrunErrorHandler
 10012 ;;		_EUSART_SetRxInterruptHandler
 10013 ;; This function is called by:
 10014 ;;		_SYSTEM_Initialize
 10015 ;; This function uses a non-reentrant model
 10016 ;;
 10017                           
 10018                           
 10019                           ;psect for function _EUSART_Initialize
 10020  0A64                     _EUSART_Initialize:	
 10021                           
 10022                           ;mcc_generated_files/eusart.c: 86:     PIE1bits.RCIE = 0;
 10023                           
 10024                           ;incstack = 0
 10025                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
 10026  0A64  0021               	movlb	1	; select bank1
 10027  0A65  1291               	bcf	17,5	;volatile
 10028                           
 10029                           ;mcc_generated_files/eusart.c: 87:     EUSART_SetRxInterruptHandler(EUSART_Receive_ISR);
 10030  0A66  30CC               	movlw	low _EUSART_Receive_ISR
 10031  0A67  0020               	movlb	0	; select bank0
 10032  0A68  00CB               	movwf	EUSART_SetRxInterruptHandler@interruptHandler
 10033  0A69  300A               	movlw	high _EUSART_Receive_ISR
 10034  0A6A  00CC               	movwf	EUSART_SetRxInterruptHandler@interruptHandler+1
 10035  0A6B  3197  2745  318A   	fcall	_EUSART_SetRxInterruptHandler
 10036                           
 10037                           ;mcc_generated_files/eusart.c: 91:     BAUD1CON = 0x08;
 10038  0A6E  3008               	movlw	8
 10039  0A6F  0023               	movlb	3	; select bank3
 10040  0A70  009F               	movwf	31	;volatile
 10041                           
 10042                           ;mcc_generated_files/eusart.c: 94:     RC1STA = 0x90;
 10043  0A71  3090               	movlw	144
 10044  0A72  009D               	movwf	29	;volatile
 10045                           
 10046                           ;mcc_generated_files/eusart.c: 97:     TX1STA = 0x24;
 10047  0A73  3024               	movlw	36
 10048  0A74  009E               	movwf	30	;volatile
 10049                           
 10050                           ;mcc_generated_files/eusart.c: 100:     SP1BRGL = 0x22;
 10051  0A75  3022               	movlw	34
 10052  0A76  009B               	movwf	27	;volatile
 10053                           
 10054                           ;mcc_generated_files/eusart.c: 103:     SP1BRGH = 0x00;
 10055  0A77  019C               	clrf	28	;volatile
 10056                           
 10057                           ;mcc_generated_files/eusart.c: 106:     EUSART_SetFramingErrorHandler(EUSART_DefaultFram
      +                          ingErrorHandler);
 10058  0A78  3072               	movlw	low _EUSART_DefaultFramingErrorHandler
 10059  0A79  0020               	movlb	0	; select bank0
 10060  0A7A  00CB               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
 10061  0A7B  3008               	movlw	high _EUSART_DefaultFramingErrorHandler
 10062  0A7C  00CC               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
 10063  0A7D  3197  2735  318A   	fcall	_EUSART_SetFramingErrorHandler
 10064                           
 10065                           ;mcc_generated_files/eusart.c: 107:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOver
      +                          runErrorHandler);
 10066  0A80  30E3               	movlw	low _EUSART_DefaultOverrunErrorHandler
 10067  0A81  0020               	movlb	0	; select bank0
 10068  0A82  00CB               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
 10069  0A83  3016               	movlw	high _EUSART_DefaultOverrunErrorHandler
 10070  0A84  00CC               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
 10071  0A85  3197  273D  318A   	fcall	_EUSART_SetOverrunErrorHandler
 10072                           
 10073                           ;mcc_generated_files/eusart.c: 108:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandle
      +                          r);
 10074  0A88  30D7               	movlw	low _EUSART_DefaultErrorHandler
 10075  0A89  0020               	movlb	0	; select bank0
 10076  0A8A  00CB               	movwf	EUSART_SetErrorHandler@interruptHandler
 10077  0A8B  3016               	movlw	high _EUSART_DefaultErrorHandler
 10078  0A8C  00CC               	movwf	EUSART_SetErrorHandler@interruptHandler+1
 10079  0A8D  3197  272D         	fcall	_EUSART_SetErrorHandler
 10080                           
 10081                           ;mcc_generated_files/eusart.c: 110:     eusartRxLastError.status = 0;
 10082  0A8F  0020               	movlb	0	; select bank0
 10083  0A90  01B6               	clrf	_eusartRxLastError	;volatile
 10084                           
 10085                           ;mcc_generated_files/eusart.c: 113:     eusartRxHead = 0;
 10086  0A91  01B9               	clrf	_eusartRxHead	;volatile
 10087                           
 10088                           ;mcc_generated_files/eusart.c: 114:     eusartRxTail = 0;
 10089  0A92  01B8               	clrf	_eusartRxTail	;volatile
 10090                           
 10091                           ;mcc_generated_files/eusart.c: 115:     eusartRxCount = 0;
 10092  0A93  01B7               	clrf	_eusartRxCount	;volatile
 10093                           
 10094                           ;mcc_generated_files/eusart.c: 118:     PIE1bits.RCIE = 1;
 10095  0A94  0021               	movlb	1	; select bank1
 10096  0A95  1691               	bsf	17,5	;volatile
 10097  0A96  0008               	return
 10098  0A97                     __end_of_EUSART_Initialize:	
 10099                           
 10100                           	psect	text35
 10101  1745                     __ptext35:	
 10102 ;; *************** function _EUSART_SetRxInterruptHandler *****************
 10103 ;; Defined at:
 10104 ;;		line 236 in file "mcc_generated_files/eusart.c"
 10105 ;; Parameters:    Size  Location     Type
 10106 ;;  interruptHan    2    9[BANK0 ] PTR FTN()void 
 10107 ;;		 -> EUSART_CommandHandler_ISR(1), EUSART_Receive_ISR(1), 
 10108 ;; Auto vars:     Size  Location     Type
 10109 ;;		None
 10110 ;; Return value:  Size  Location     Type
 10111 ;;                  1    wreg      void 
 10112 ;; Registers used:
 10113 ;;		wreg
 10114 ;; Tracked objects:
 10115 ;;		On entry : 1F/0
 10116 ;;		On exit  : 1F/2
 10117 ;;		Unchanged: 0/0
 10118 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10119 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10120 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10121 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10122 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10123 ;;Total ram usage:        2 bytes
 10124 ;; Hardware stack levels used:    1
 10125 ;; Hardware stack levels required when called:    5
 10126 ;; This function calls:
 10127 ;;		Nothing
 10128 ;; This function is called by:
 10129 ;;		_EUSART_Initialize
 10130 ;;		_uart_start
 10131 ;; This function uses a non-reentrant model
 10132 ;;
 10133                           
 10134                           
 10135                           ;psect for function _EUSART_SetRxInterruptHandler
 10136  1745                     _EUSART_SetRxInterruptHandler:	
 10137                           
 10138                           ;mcc_generated_files/eusart.c: 237:     EUSART_RxDefaultInterruptHandler = interruptHand
      +                          ler;
 10139                           
 10140                           ;incstack = 0
 10141                           ; Regs used in _EUSART_SetRxInterruptHandler: [wreg]
 10142  1745  084C               	movf	EUSART_SetRxInterruptHandler@interruptHandler+1,w
 10143  1746  0022               	movlb	2	; select bank2
 10144  1747  00EE               	movwf	(_EUSART_RxDefaultInterruptHandler+1)^(0+256)
 10145  1748  0020               	movlb	0	; select bank0
 10146  1749  084B               	movf	EUSART_SetRxInterruptHandler@interruptHandler,w
 10147  174A  0022               	movlb	2	; select bank2
 10148  174B  00ED               	movwf	_EUSART_RxDefaultInterruptHandler^(0+256)
 10149  174C  0008               	return
 10150  174D                     __end_of_EUSART_SetRxInterruptHandler:	
 10151                           
 10152                           	psect	text36
 10153  173D                     __ptext36:	
 10154 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
 10155 ;; Defined at:
 10156 ;;		line 227 in file "mcc_generated_files/eusart.c"
 10157 ;; Parameters:    Size  Location     Type
 10158 ;;  interruptHan    2    9[BANK0 ] PTR FTN()void 
 10159 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
 10160 ;; Auto vars:     Size  Location     Type
 10161 ;;		None
 10162 ;; Return value:  Size  Location     Type
 10163 ;;                  1    wreg      void 
 10164 ;; Registers used:
 10165 ;;		wreg
 10166 ;; Tracked objects:
 10167 ;;		On entry : 1F/0
 10168 ;;		On exit  : 1F/2
 10169 ;;		Unchanged: 0/0
 10170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10171 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10172 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10173 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10174 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10175 ;;Total ram usage:        2 bytes
 10176 ;; Hardware stack levels used:    1
 10177 ;; Hardware stack levels required when called:    5
 10178 ;; This function calls:
 10179 ;;		Nothing
 10180 ;; This function is called by:
 10181 ;;		_EUSART_Initialize
 10182 ;; This function uses a non-reentrant model
 10183 ;;
 10184                           
 10185                           
 10186                           ;psect for function _EUSART_SetOverrunErrorHandler
 10187  173D                     _EUSART_SetOverrunErrorHandler:	
 10188                           
 10189                           ;mcc_generated_files/eusart.c: 228:     EUSART_OverrunErrorHandler = interruptHandler;
 10190                           
 10191                           ;incstack = 0
 10192                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
 10193  173D  084C               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
 10194  173E  0022               	movlb	2	; select bank2
 10195  173F  00EA               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+256)
 10196  1740  0020               	movlb	0	; select bank0
 10197  1741  084B               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
 10198  1742  0022               	movlb	2	; select bank2
 10199  1743  00E9               	movwf	_EUSART_OverrunErrorHandler^(0+256)
 10200  1744  0008               	return
 10201  1745                     __end_of_EUSART_SetOverrunErrorHandler:	
 10202                           
 10203                           	psect	text37
 10204  1735                     __ptext37:	
 10205 ;; *************** function _EUSART_SetFramingErrorHandler *****************
 10206 ;; Defined at:
 10207 ;;		line 223 in file "mcc_generated_files/eusart.c"
 10208 ;; Parameters:    Size  Location     Type
 10209 ;;  interruptHan    2    9[BANK0 ] PTR FTN()void 
 10210 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
 10211 ;; Auto vars:     Size  Location     Type
 10212 ;;		None
 10213 ;; Return value:  Size  Location     Type
 10214 ;;                  1    wreg      void 
 10215 ;; Registers used:
 10216 ;;		wreg
 10217 ;; Tracked objects:
 10218 ;;		On entry : 1F/0
 10219 ;;		On exit  : 1F/2
 10220 ;;		Unchanged: 0/0
 10221 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10222 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10223 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10224 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10225 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10226 ;;Total ram usage:        2 bytes
 10227 ;; Hardware stack levels used:    1
 10228 ;; Hardware stack levels required when called:    5
 10229 ;; This function calls:
 10230 ;;		Nothing
 10231 ;; This function is called by:
 10232 ;;		_EUSART_Initialize
 10233 ;; This function uses a non-reentrant model
 10234 ;;
 10235                           
 10236                           
 10237                           ;psect for function _EUSART_SetFramingErrorHandler
 10238  1735                     _EUSART_SetFramingErrorHandler:	
 10239                           
 10240                           ;mcc_generated_files/eusart.c: 224:     EUSART_FramingErrorHandler = interruptHandler;
 10241                           
 10242                           ;incstack = 0
 10243                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
 10244  1735  084C               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
 10245  1736  0022               	movlb	2	; select bank2
 10246  1737  00EC               	movwf	(_EUSART_FramingErrorHandler+1)^(0+256)
 10247  1738  0020               	movlb	0	; select bank0
 10248  1739  084B               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
 10249  173A  0022               	movlb	2	; select bank2
 10250  173B  00EB               	movwf	_EUSART_FramingErrorHandler^(0+256)
 10251  173C  0008               	return
 10252  173D                     __end_of_EUSART_SetFramingErrorHandler:	
 10253                           
 10254                           	psect	text38
 10255  172D                     __ptext38:	
 10256 ;; *************** function _EUSART_SetErrorHandler *****************
 10257 ;; Defined at:
 10258 ;;		line 231 in file "mcc_generated_files/eusart.c"
 10259 ;; Parameters:    Size  Location     Type
 10260 ;;  interruptHan    2    9[BANK0 ] PTR FTN()void 
 10261 ;;		 -> EUSART_DefaultErrorHandler(1), 
 10262 ;; Auto vars:     Size  Location     Type
 10263 ;;		None
 10264 ;; Return value:  Size  Location     Type
 10265 ;;                  1    wreg      void 
 10266 ;; Registers used:
 10267 ;;		wreg
 10268 ;; Tracked objects:
 10269 ;;		On entry : 1F/0
 10270 ;;		On exit  : 1F/2
 10271 ;;		Unchanged: 0/0
 10272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10273 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10276 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10277 ;;Total ram usage:        2 bytes
 10278 ;; Hardware stack levels used:    1
 10279 ;; Hardware stack levels required when called:    5
 10280 ;; This function calls:
 10281 ;;		Nothing
 10282 ;; This function is called by:
 10283 ;;		_EUSART_Initialize
 10284 ;; This function uses a non-reentrant model
 10285 ;;
 10286                           
 10287                           
 10288                           ;psect for function _EUSART_SetErrorHandler
 10289  172D                     _EUSART_SetErrorHandler:	
 10290                           
 10291                           ;mcc_generated_files/eusart.c: 232:     EUSART_ErrorHandler = interruptHandler;
 10292                           
 10293                           ;incstack = 0
 10294                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
 10295  172D  084C               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
 10296  172E  0022               	movlb	2	; select bank2
 10297  172F  00E8               	movwf	(_EUSART_ErrorHandler+1)^(0+256)
 10298  1730  0020               	movlb	0	; select bank0
 10299  1731  084B               	movf	EUSART_SetErrorHandler@interruptHandler,w
 10300  1732  0022               	movlb	2	; select bank2
 10301  1733  00E7               	movwf	_EUSART_ErrorHandler^(0+256)
 10302  1734  0008               	return
 10303  1735                     __end_of_EUSART_SetErrorHandler:	
 10304                           
 10305                           	psect	text39
 10306  17EF                     __ptext39:	
 10307 ;; *************** function _ADC_Initialize *****************
 10308 ;; Defined at:
 10309 ;;		line 67 in file "mcc_generated_files/adc.c"
 10310 ;; Parameters:    Size  Location     Type
 10311 ;;		None
 10312 ;; Auto vars:     Size  Location     Type
 10313 ;;		None
 10314 ;; Return value:  Size  Location     Type
 10315 ;;                  1    wreg      void 
 10316 ;; Registers used:
 10317 ;;		wreg, status,2, status,0, pclath, cstack
 10318 ;; Tracked objects:
 10319 ;;		On entry : B1F/1
 10320 ;;		On exit  : 1F/2
 10321 ;;		Unchanged: 0/0
 10322 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10323 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10324 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10325 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10326 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10327 ;;Total ram usage:        0 bytes
 10328 ;; Hardware stack levels used:    1
 10329 ;; Hardware stack levels required when called:    6
 10330 ;; This function calls:
 10331 ;;		_ADC_SetInterruptHandler
 10332 ;; This function is called by:
 10333 ;;		_SYSTEM_Initialize
 10334 ;; This function uses a non-reentrant model
 10335 ;;
 10336                           
 10337                           
 10338                           ;psect for function _ADC_Initialize
 10339  17EF                     _ADC_Initialize:	
 10340                           
 10341                           ;mcc_generated_files/adc.c: 72:     ADCON0 = 0x01;
 10342                           
 10343                           ;incstack = 0
 10344                           ; Regs used in _ADC_Initialize: [wreg+status,2+status,0+pclath+cstack]
 10345  17EF  3001               	movlw	1
 10346  17F0  009D               	movwf	29	;volatile
 10347                           
 10348                           ;mcc_generated_files/adc.c: 75:     ADCON1 = 0xE0;
 10349  17F1  30E0               	movlw	224
 10350  17F2  009E               	movwf	30	;volatile
 10351                           
 10352                           ;mcc_generated_files/adc.c: 78:     ADCON2 = 0x50;
 10353  17F3  3050               	movlw	80
 10354  17F4  009F               	movwf	31	;volatile
 10355                           
 10356                           ;mcc_generated_files/adc.c: 81:     ADRESL = 0x00;
 10357  17F5  019B               	clrf	27	;volatile
 10358                           
 10359                           ;mcc_generated_files/adc.c: 84:     ADRESH = 0x00;
 10360  17F6  019C               	clrf	28	;volatile
 10361                           
 10362                           ;mcc_generated_files/adc.c: 87:     PIE1bits.ADIE = 1;
 10363  17F7  1711               	bsf	17,6	;volatile
 10364                           
 10365                           ;mcc_generated_files/adc.c: 90:     ADC_SetInterruptHandler(ADC_DefaultInterruptHandler)
      +                          ;
 10366  17F8  3071               	movlw	low _ADC_DefaultInterruptHandler
 10367  17F9  0020               	movlb	0	; select bank0
 10368  17FA  00CB               	movwf	ADC_SetInterruptHandler@InterruptHandler
 10369  17FB  3008               	movlw	high _ADC_DefaultInterruptHandler
 10370  17FC  00CC               	movwf	ADC_SetInterruptHandler@InterruptHandler+1
 10371  17FD  3197  2725         	fcall	_ADC_SetInterruptHandler
 10372  17FF  0008               	return
 10373  1800                     __end_of_ADC_Initialize:	
 10374                           
 10375                           	psect	text40
 10376  1725                     __ptext40:	
 10377 ;; *************** function _ADC_SetInterruptHandler *****************
 10378 ;; Defined at:
 10379 ;;		line 160 in file "mcc_generated_files/adc.c"
 10380 ;; Parameters:    Size  Location     Type
 10381 ;;  InterruptHan    2    9[BANK0 ] PTR FTN()void 
 10382 ;;		 -> ADC_VoltageControlHandler_ISR(1), ADC_DefaultInterruptHandler(1), 
 10383 ;; Auto vars:     Size  Location     Type
 10384 ;;		None
 10385 ;; Return value:  Size  Location     Type
 10386 ;;                  1    wreg      void 
 10387 ;; Registers used:
 10388 ;;		wreg
 10389 ;; Tracked objects:
 10390 ;;		On entry : 1F/0
 10391 ;;		On exit  : 1F/2
 10392 ;;		Unchanged: 0/0
 10393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10394 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10395 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10397 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10398 ;;Total ram usage:        2 bytes
 10399 ;; Hardware stack levels used:    1
 10400 ;; Hardware stack levels required when called:    5
 10401 ;; This function calls:
 10402 ;;		Nothing
 10403 ;; This function is called by:
 10404 ;;		_ADC_Initialize
 10405 ;;		_init_chopper
 10406 ;; This function uses a non-reentrant model
 10407 ;;
 10408                           
 10409                           
 10410                           ;psect for function _ADC_SetInterruptHandler
 10411  1725                     _ADC_SetInterruptHandler:	
 10412                           
 10413                           ;mcc_generated_files/adc.c: 161:     ADC_InterruptHandler = InterruptHandler;
 10414                           
 10415                           ;incstack = 0
 10416                           ; Regs used in _ADC_SetInterruptHandler: [wreg]
 10417  1725  084C               	movf	ADC_SetInterruptHandler@InterruptHandler+1,w
 10418  1726  0022               	movlb	2	; select bank2
 10419  1727  00E4               	movwf	(_ADC_InterruptHandler+1)^(0+256)
 10420  1728  0020               	movlb	0	; select bank0
 10421  1729  084B               	movf	ADC_SetInterruptHandler@InterruptHandler,w
 10422  172A  0022               	movlb	2	; select bank2
 10423  172B  00E3               	movwf	_ADC_InterruptHandler^(0+256)
 10424  172C  0008               	return
 10425  172D                     __end_of_ADC_SetInterruptHandler:	
 10426                           
 10427                           	psect	text41
 10428  0985                     __ptext41:	
 10429 ;; *************** function _FLASH_ReadWord *****************
 10430 ;; Defined at:
 10431 ;;		line 58 in file "mcc_generated_files/memory.c"
 10432 ;; Parameters:    Size  Location     Type
 10433 ;;  flashAddr       2    9[BANK0 ] unsigned short 
 10434 ;; Auto vars:     Size  Location     Type
 10435 ;;  GIEBitValue     1   11[BANK0 ] unsigned char 
 10436 ;; Return value:  Size  Location     Type
 10437 ;;                  2    9[BANK0 ] unsigned short 
 10438 ;; Registers used:
 10439 ;;		wreg, status,2, status,0
 10440 ;; Tracked objects:
 10441 ;;		On entry : 1F/0
 10442 ;;		On exit  : 1F/0
 10443 ;;		Unchanged: 0/0
 10444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10445 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10446 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10448 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10449 ;;Total ram usage:        3 bytes
 10450 ;; Hardware stack levels used:    1
 10451 ;; Hardware stack levels required when called:    5
 10452 ;; This function calls:
 10453 ;;		Nothing
 10454 ;; This function is called by:
 10455 ;;		_main
 10456 ;; This function uses a non-reentrant model
 10457 ;;
 10458                           
 10459                           
 10460                           ;psect for function _FLASH_ReadWord
 10461  0985                     _FLASH_ReadWord:	
 10462                           
 10463                           ;mcc_generated_files/memory.c: 58: uint16_t FLASH_ReadWord(uint16_t flashAddr);mcc_gener
      +                          ated_files/memory.c: 59: {;mcc_generated_files/memory.c: 60:     uint8_t GIEBitValue = I
      +                          NTCONbits.GIE;
 10464                           
 10465                           ;incstack = 0
 10466                           ; Regs used in _FLASH_ReadWord: [wreg+status,2+status,0]
 10467  0985  3000               	movlw	0
 10468  0986  1B8B               	btfsc	11,7	;volatile
 10469  0987  3001               	movlw	1
 10470  0988  00CD               	movwf	FLASH_ReadWord@GIEBitValue
 10471                           
 10472                           ;mcc_generated_files/memory.c: 62:     INTCONbits.GIE = 0;
 10473  0989  138B               	bcf	11,7	;volatile
 10474                           
 10475                           ;mcc_generated_files/memory.c: 63:     PMADRL = (flashAddr & 0x00FF);
 10476  098A  084B               	movf	FLASH_ReadWord@flashAddr,w
 10477  098B  0023               	movlb	3	; select bank3
 10478  098C  0091               	movwf	17	;volatile
 10479                           
 10480                           ;mcc_generated_files/memory.c: 64:     PMADRH = ((flashAddr & 0xFF00) >> 8);
 10481  098D  0020               	movlb	0	; select bank0
 10482  098E  084C               	movf	FLASH_ReadWord@flashAddr+1,w
 10483  098F  0023               	movlb	3	; select bank3
 10484  0990  0092               	movwf	18	;volatile
 10485                           
 10486                           ;mcc_generated_files/memory.c: 66:     PMCON1bits.CFGS = 0;
 10487  0991  1315               	bcf	21,6	;volatile
 10488                           
 10489                           ;mcc_generated_files/memory.c: 67:     PMCON1bits.RD = 1;
 10490  0992  1415               	bsf	21,0	;volatile
 10491                           
 10492                           ;mcc_generated_files/memory.c: 68:     __nop();
 10493  0993  0000               	nop
 10494                           
 10495                           ;mcc_generated_files/memory.c: 69:     __nop();
 10496  0994  0000               	nop
 10497                           
 10498                           ;mcc_generated_files/memory.c: 70:     INTCONbits.GIE = GIEBitValue;
 10499  0995  0020               	movlb	0	; select bank0
 10500  0996  0C4D               	rrf	FLASH_ReadWord@GIEBitValue,w
 10501  0997  1C03               	skipc
 10502  0998  138B               	bcf	11,7	;volatile
 10503  0999  1803               	skipnc
 10504  099A  178B               	bsf	11,7	;volatile
 10505                           
 10506                           ;mcc_generated_files/memory.c: 72:     return ((uint16_t)((PMDATH << 8) | PMDATL));
 10507  099B  0023               	movlb	3	; select bank3
 10508  099C  0814               	movf	20,w	;volatile
 10509  099D  0020               	movlb	0	; select bank0
 10510  099E  00CC               	movwf	?_FLASH_ReadWord+1
 10511  099F  0023               	movlb	3	; select bank3
 10512  09A0  0813               	movf	19,w	;volatile
 10513  09A1  0020               	movlb	0	; select bank0
 10514  09A2  00CB               	movwf	?_FLASH_ReadWord
 10515  09A3  0008               	return
 10516  09A4                     __end_of_FLASH_ReadWord:	
 10517                           
 10518                           	psect	intentry
 10519  0004                     __pintentry:	
 10520 ;; *************** function _INTERRUPT_InterruptManager *****************
 10521 ;; Defined at:
 10522 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 10523 ;; Parameters:    Size  Location     Type
 10524 ;;		None
 10525 ;; Auto vars:     Size  Location     Type
 10526 ;;		None
 10527 ;; Return value:  Size  Location     Type
 10528 ;;                  1    wreg      void 
 10529 ;; Registers used:
 10530 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10531 ;; Tracked objects:
 10532 ;;		On entry : 0/0
 10533 ;;		On exit  : 0/0
 10534 ;;		Unchanged: 0/0
 10535 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10536 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10537 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10538 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10539 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10540 ;;Total ram usage:        0 bytes
 10541 ;; Hardware stack levels used:    1
 10542 ;; Hardware stack levels required when called:    4
 10543 ;; This function calls:
 10544 ;;		Absolute function
 10545 ;;		_ADC_ISR
 10546 ;;		_EUSART_CommandHandler_ISR
 10547 ;;		_EUSART_Receive_ISR
 10548 ;;		_TMR1_ISR
 10549 ;;		_TMR2_ISR
 10550 ;; This function is called by:
 10551 ;;		Interrupt level 1
 10552 ;; This function uses a non-reentrant model
 10553 ;;
 10554                           
 10555  0004                     _INTERRUPT_InterruptManager:	
 10556                           
 10557                           ;incstack = 0
 10558  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 10559                           
 10560                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10561  0005  3180               	pagesel	$
 10562  0006  0064               	clrwdt	;# 
 10563                           
 10564                           ;mcc_generated_files/interrupt_manager.c: 56:     if(INTCONbits.PEIE == 1)
 10565  0007  1F0B               	btfss	11,6	;volatile
 10566  0008  2832               	goto	i1l393
 10567                           
 10568                           ;mcc_generated_files/interrupt_manager.c: 57:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 58:         if(PIE1bits.ADIE == 1 && PIR1bits.ADIF == 1)
 10569  0009  0021               	movlb	1	; select bank1
 10570  000A  1F11               	btfss	17,6	;volatile
 10571  000B  2813               	goto	i1l384
 10572  000C  0020               	movlb	0	; select bank0
 10573  000D  1F11               	btfss	17,6	;volatile
 10574  000E  2813               	goto	i1l384
 10575                           
 10576                           ;mcc_generated_files/interrupt_manager.c: 59:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 60:             ADC_ISR();
 10577  000F  3197  27B9  3180   	fcall	_ADC_ISR
 10578                           
 10579                           ;mcc_generated_files/interrupt_manager.c: 61:         }
 10580  0012  2832               	goto	i1l393
 10581  0013                     i1l384:	
 10582                           ;mcc_generated_files/interrupt_manager.c: 62:         else if(PIE1bits.RCIE == 1 && PIR1
      +                          bits.RCIF == 1)
 10583                           
 10584  0013  0021               	movlb	1	; select bank1
 10585  0014  1E91               	btfss	17,5	;volatile
 10586  0015  2820               	goto	i1l386
 10587  0016  0020               	movlb	0	; select bank0
 10588  0017  1E91               	btfss	17,5	;volatile
 10589  0018  2820               	goto	i1l386
 10590                           
 10591                           ;mcc_generated_files/interrupt_manager.c: 63:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 64:             EUSART_RxDefaultInterruptHandler();
 10592  0019  0022               	movlb	2	; select bank2
 10593  001A  086E               	movf	(_EUSART_RxDefaultInterruptHandler+1)^(0+256),w
 10594  001B  008A               	movwf	10
 10595  001C  086D               	movf	_EUSART_RxDefaultInterruptHandler^(0+256),w
 10596  001D  000A               	callw
 10597  001E  3180               	pagesel	$
 10598                           
 10599                           ;mcc_generated_files/interrupt_manager.c: 65:         }
 10600  001F  2832               	goto	i1l393
 10601  0020                     i1l386:	
 10602                           ;mcc_generated_files/interrupt_manager.c: 66:         else if(PIE1bits.TMR2IE == 1 && PI
      +                          R1bits.TMR2IF == 1)
 10603                           
 10604  0020  0021               	movlb	1	; select bank1
 10605  0021  1C91               	btfss	17,1	;volatile
 10606  0022  282A               	goto	i1l388
 10607  0023  0020               	movlb	0	; select bank0
 10608  0024  1C91               	btfss	17,1	;volatile
 10609  0025  282A               	goto	i1l388
 10610                           
 10611                           ;mcc_generated_files/interrupt_manager.c: 67:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 68:             TMR2_ISR();
 10612  0026  3196  26E7  3180   	fcall	_TMR2_ISR
 10613                           
 10614                           ;mcc_generated_files/interrupt_manager.c: 69:         }
 10615  0029  2832               	goto	i1l393
 10616  002A                     i1l388:	
 10617                           ;mcc_generated_files/interrupt_manager.c: 70:         else if(PIE1bits.TMR1IE == 1 && PI
      +                          R1bits.TMR1IF == 1)
 10618                           
 10619  002A  0021               	movlb	1	; select bank1
 10620  002B  1C11               	btfss	17,0	;volatile
 10621  002C  2832               	goto	i1l393
 10622  002D  0020               	movlb	0	; select bank0
 10623  002E  1C11               	btfss	17,0	;volatile
 10624  002F  2832               	goto	i1l393
 10625                           
 10626                           ;mcc_generated_files/interrupt_manager.c: 71:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 72:             TMR1_ISR();
 10627  0030  3197  27C5         	fcall	_TMR1_ISR
 10628  0032                     i1l393:	
 10629                           ;mcc_generated_files/interrupt_manager.c: 73:         }
 10630                           
 10631  0032  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 10632  0033  0009               	retfie
 10633  0034                     __end_of_INTERRUPT_InterruptManager:	
 10634                           
 10635                           	psect	text43
 10636  16E7                     __ptext43:	
 10637 ;; *************** function _TMR2_ISR *****************
 10638 ;; Defined at:
 10639 ;;		line 119 in file "mcc_generated_files/tmr2.c"
 10640 ;; Parameters:    Size  Location     Type
 10641 ;;		None
 10642 ;; Auto vars:     Size  Location     Type
 10643 ;;		None
 10644 ;; Return value:  Size  Location     Type
 10645 ;;                  1    wreg      void 
 10646 ;; Registers used:
 10647 ;;		wreg, status,2, status,0, pclath, cstack
 10648 ;; Tracked objects:
 10649 ;;		On entry : 1F/0
 10650 ;;		On exit  : 0/0
 10651 ;;		Unchanged: 0/0
 10652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10653 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10654 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10656 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10657 ;;Total ram usage:        0 bytes
 10658 ;; Hardware stack levels used:    1
 10659 ;; Hardware stack levels required when called:    3
 10660 ;; This function calls:
 10661 ;;		_TMR2_CallBack
 10662 ;; This function is called by:
 10663 ;;		_INTERRUPT_InterruptManager
 10664 ;; This function uses a non-reentrant model
 10665 ;;
 10666                           
 10667                           
 10668                           ;psect for function _TMR2_ISR
 10669  16E7                     _TMR2_ISR:	
 10670                           
 10671                           ;mcc_generated_files/tmr2.c: 123:     PIR1bits.TMR2IF = 0;
 10672                           
 10673                           ;incstack = 0
 10674                           ; Regs used in _TMR2_ISR: [wreg+status,2+status,0+pclath+cstack]
 10675  16E7  1091               	bcf	17,1	;volatile
 10676                           
 10677                           ;mcc_generated_files/tmr2.c: 127:     TMR2_CallBack();
 10678  16E8  3197  2782         	fcall	_TMR2_CallBack
 10679  16EA  0008               	return
 10680  16EB                     __end_of_TMR2_ISR:	
 10681                           
 10682                           	psect	text44
 10683  1782                     __ptext44:	
 10684 ;; *************** function _TMR2_CallBack *****************
 10685 ;; Defined at:
 10686 ;;		line 130 in file "mcc_generated_files/tmr2.c"
 10687 ;; Parameters:    Size  Location     Type
 10688 ;;		None
 10689 ;; Auto vars:     Size  Location     Type
 10690 ;;		None
 10691 ;; Return value:  Size  Location     Type
 10692 ;;                  1    wreg      void 
 10693 ;; Registers used:
 10694 ;;		wreg, status,2, status,0, pclath, cstack
 10695 ;; Tracked objects:
 10696 ;;		On entry : 1F/0
 10697 ;;		On exit  : 0/0
 10698 ;;		Unchanged: 0/0
 10699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10700 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10701 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10702 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10703 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10704 ;;Total ram usage:        0 bytes
 10705 ;; Hardware stack levels used:    1
 10706 ;; Hardware stack levels required when called:    2
 10707 ;; This function calls:
 10708 ;;		Absolute function
 10709 ;;		_TMR2_DefaultInterruptHandler
 10710 ;;		_TMR2_DutyControlHandler_ISR
 10711 ;; This function is called by:
 10712 ;;		_TMR2_ISR
 10713 ;; This function uses a non-reentrant model
 10714 ;;
 10715                           
 10716                           
 10717                           ;psect for function _TMR2_CallBack
 10718  1782                     _TMR2_CallBack:	
 10719                           
 10720                           ;mcc_generated_files/tmr2.c: 134:     if(TMR2_InterruptHandler)
 10721                           
 10722                           ;incstack = 0
 10723                           ; Regs used in _TMR2_CallBack: [wreg+status,2+status,0+pclath+cstack]
 10724  1782  0022               	movlb	2	; select bank2
 10725  1783  0865               	movf	_TMR2_InterruptHandler^(0+256),w
 10726  1784  0466               	iorwf	(_TMR2_InterruptHandler+1)^(0+256),w
 10727  1785  1903               	btfsc	3,2
 10728  1786  0008               	return
 10729                           
 10730                           ;mcc_generated_files/tmr2.c: 135:     {;mcc_generated_files/tmr2.c: 136:         TMR2_In
      +                          terruptHandler();
 10731  1787  0866               	movf	(_TMR2_InterruptHandler+1)^(0+256),w
 10732  1788  008A               	movwf	10
 10733  1789  0865               	movf	_TMR2_InterruptHandler^(0+256),w
 10734  178A  000A               	callw
 10735  178B  3197               	pagesel	$
 10736  178C  0008               	return
 10737  178D                     __end_of_TMR2_CallBack:	
 10738                           
 10739                           	psect	text45
 10740  0003                     __ptext45:	
 10741 ;; *************** function _TMR2_DefaultInterruptHandler *****************
 10742 ;; Defined at:
 10743 ;;		line 144 in file "mcc_generated_files/tmr2.c"
 10744 ;; Parameters:    Size  Location     Type
 10745 ;;		None
 10746 ;; Auto vars:     Size  Location     Type
 10747 ;;		None
 10748 ;; Return value:  Size  Location     Type
 10749 ;;                  1    wreg      void 
 10750 ;; Registers used:
 10751 ;;		None
 10752 ;; Tracked objects:
 10753 ;;		On entry : 1F/2
 10754 ;;		On exit  : 1F/2
 10755 ;;		Unchanged: 1F/0
 10756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10757 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10758 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10760 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10761 ;;Total ram usage:        0 bytes
 10762 ;; Hardware stack levels used:    1
 10763 ;; This function calls:
 10764 ;;		Nothing
 10765 ;; This function is called by:
 10766 ;;		_TMR2_Initialize
 10767 ;;		_TMR2_CallBack
 10768 ;; This function uses a non-reentrant model
 10769 ;;
 10770                           
 10771                           
 10772                           ;psect for function _TMR2_DefaultInterruptHandler
 10773  0003                     _TMR2_DefaultInterruptHandler:	
 10774                           
 10775                           ;incstack = 0
 10776                           ; Regs used in _TMR2_DefaultInterruptHandler: []
 10777  0003  0008               	return
 10778  0004                     __end_of_TMR2_DefaultInterruptHandler:	
 10779                           
 10780                           	psect	text46
 10781  0B58                     __ptext46:	
 10782 ;; *************** function _TMR2_DutyControlHandler_ISR *****************
 10783 ;; Defined at:
 10784 ;;		line 407 in file "vcontrol.c"
 10785 ;; Parameters:    Size  Location     Type
 10786 ;;		None
 10787 ;; Auto vars:     Size  Location     Type
 10788 ;;		None
 10789 ;; Return value:  Size  Location     Type
 10790 ;;                  1    wreg      void 
 10791 ;; Registers used:
 10792 ;;		wreg, status,2, status,0, pclath, cstack
 10793 ;; Tracked objects:
 10794 ;;		On entry : 1F/2
 10795 ;;		On exit  : 1F/C
 10796 ;;		Unchanged: 0/0
 10797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10798 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10799 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10800 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10801 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10802 ;;Total ram usage:        2 bytes
 10803 ;; Hardware stack levels used:    1
 10804 ;; Hardware stack levels required when called:    1
 10805 ;; This function calls:
 10806 ;;		_PWM3_LoadDutyValue
 10807 ;; This function is called by:
 10808 ;;		_init_chopper
 10809 ;;		_TMR2_CallBack
 10810 ;; This function uses a non-reentrant model
 10811 ;;
 10812                           
 10813                           
 10814                           ;psect for function _TMR2_DutyControlHandler_ISR
 10815  0B58                     _TMR2_DutyControlHandler_ISR:	
 10816                           
 10817                           ;vcontrol.c: 409:     if( current_duty > 399 )
 10818                           
 10819                           ;incstack = 0
 10820                           ; Regs used in _TMR2_DutyControlHandler_ISR: [wreg+status,2+status,0+pclath+cstack]
 10821  0B58  3001               	movlw	1
 10822  0B59  0020               	movlb	0	; select bank0
 10823  0B5A  0221               	subwf	_current_duty+1,w
 10824  0B5B  3090               	movlw	144
 10825  0B5C  1903               	skipnz
 10826  0B5D  0220               	subwf	_current_duty,w
 10827  0B5E  1C03               	skipc
 10828  0B5F  2B6B               	goto	i1l2518
 10829  0B60  1003               	clrc
 10830  0B61  0022               	movlb	2	; select bank2
 10831  0B62  1E8E               	btfss	14,5	;volatile
 10832  0B63  1403               	setc
 10833  0B64  1C03               	btfss	3,0
 10834  0B65  2B69               	goto	u109_20
 10835  0B66  0022               	movlb	2	; select bank2
 10836  0B67  168E               	bsf	14,5	;volatile
 10837  0B68  2B6B               	goto	i1l2518
 10838  0B69                     u109_20:	
 10839  0B69  0022               	movlb	2	; select bank2
 10840  0B6A  128E               	bcf	14,5	;volatile
 10841  0B6B                     i1l2518:	
 10842                           
 10843                           ;vcontrol.c: 412:     if( current_duty > target_duty )
 10844  0B6B  0020               	movlb	0	; select bank0
 10845  0B6C  0821               	movf	_current_duty+1,w
 10846  0B6D  0223               	subwf	_target_duty+1,w
 10847  0B6E  1D03               	skipz
 10848  0B6F  2B72               	goto	u111_25
 10849  0B70  0820               	movf	_current_duty,w
 10850  0B71  0222               	subwf	_target_duty,w
 10851  0B72                     u111_25:	
 10852  0B72  1803               	skipnc
 10853  0B73  2B8B               	goto	i1l911
 10854                           
 10855                           ;vcontrol.c: 413:     {;vcontrol.c: 414:         if( current_duty - target_duty > duty_i
      +                          nc )
 10856  0B74  0822               	movf	_target_duty,w
 10857  0B75  0220               	subwf	_current_duty,w
 10858  0B76  00F4               	movwf	??_TMR2_DutyControlHandler_ISR
 10859  0B77  0823               	movf	_target_duty+1,w
 10860  0B78  3B21               	subwfb	_current_duty+1,w
 10861  0B79  00F5               	movwf	??_TMR2_DutyControlHandler_ISR+1
 10862  0B7A  0875               	movf	??_TMR2_DutyControlHandler_ISR+1,w
 10863  0B7B  0262               	subwf	_duty_inc+1,w
 10864  0B7C  1D03               	skipz
 10865  0B7D  2B80               	goto	u112_25
 10866  0B7E  0874               	movf	??_TMR2_DutyControlHandler_ISR,w
 10867  0B7F  0261               	subwf	_duty_inc,w
 10868  0B80                     u112_25:	
 10869  0B80  1803               	skipnc
 10870  0B81  2B87               	goto	i1l2524
 10871                           
 10872                           ;vcontrol.c: 415:             current_duty -= duty_inc;
 10873  0B82  0861               	movf	_duty_inc,w
 10874  0B83  02A0               	subwf	_current_duty,f
 10875  0B84  0862               	movf	_duty_inc+1,w
 10876  0B85  3BA1               	subwfb	_current_duty+1,f
 10877  0B86  2B8B               	goto	i1l911
 10878  0B87                     i1l2524:	
 10879                           
 10880                           ;vcontrol.c: 417:             current_duty = target_duty;
 10881  0B87  0823               	movf	_target_duty+1,w
 10882  0B88  00A1               	movwf	_current_duty+1
 10883  0B89  0822               	movf	_target_duty,w
 10884  0B8A  00A0               	movwf	_current_duty
 10885  0B8B                     i1l911:	
 10886                           ;vcontrol.c: 418:     }
 10887                           
 10888                           
 10889                           ;vcontrol.c: 419:     if( current_duty < target_duty )
 10890  0B8B  0823               	movf	_target_duty+1,w
 10891  0B8C  0221               	subwf	_current_duty+1,w
 10892  0B8D  1D03               	skipz
 10893  0B8E  2B91               	goto	u113_25
 10894  0B8F  0822               	movf	_target_duty,w
 10895  0B90  0220               	subwf	_current_duty,w
 10896  0B91                     u113_25:	
 10897  0B91  1803               	skipnc
 10898  0B92  2BAA               	goto	i1l2532
 10899                           
 10900                           ;vcontrol.c: 420:     {;vcontrol.c: 421:         if( target_duty - current_duty > duty_i
      +                          nc )
 10901  0B93  0820               	movf	_current_duty,w
 10902  0B94  0222               	subwf	_target_duty,w
 10903  0B95  00F4               	movwf	??_TMR2_DutyControlHandler_ISR
 10904  0B96  0821               	movf	_current_duty+1,w
 10905  0B97  3B23               	subwfb	_target_duty+1,w
 10906  0B98  00F5               	movwf	??_TMR2_DutyControlHandler_ISR+1
 10907  0B99  0875               	movf	??_TMR2_DutyControlHandler_ISR+1,w
 10908  0B9A  0262               	subwf	_duty_inc+1,w
 10909  0B9B  1D03               	skipz
 10910  0B9C  2B9F               	goto	u114_25
 10911  0B9D  0874               	movf	??_TMR2_DutyControlHandler_ISR,w
 10912  0B9E  0261               	subwf	_duty_inc,w
 10913  0B9F                     u114_25:	
 10914  0B9F  1803               	skipnc
 10915  0BA0  2BA6               	goto	i1l2530
 10916                           
 10917                           ;vcontrol.c: 423:             current_duty += duty_inc;
 10918  0BA1  0861               	movf	_duty_inc,w
 10919  0BA2  07A0               	addwf	_current_duty,f
 10920  0BA3  0862               	movf	_duty_inc+1,w
 10921  0BA4  3DA1               	addwfc	_current_duty+1,f
 10922  0BA5  2BAA               	goto	i1l2532
 10923  0BA6                     i1l2530:	
 10924                           
 10925                           ;vcontrol.c: 425:             current_duty = target_duty;
 10926  0BA6  0823               	movf	_target_duty+1,w
 10927  0BA7  00A1               	movwf	_current_duty+1
 10928  0BA8  0822               	movf	_target_duty,w
 10929  0BA9  00A0               	movwf	_current_duty
 10930  0BAA                     i1l2532:	
 10931                           
 10932                           ;vcontrol.c: 427:     PWM3_LoadDutyValue(current_duty);
 10933  0BAA  0821               	movf	_current_duty+1,w
 10934  0BAB  00F1               	movwf	PWM3_LoadDutyValue@dutyValue+1
 10935  0BAC  0820               	movf	_current_duty,w
 10936  0BAD  00F0               	movwf	PWM3_LoadDutyValue@dutyValue
 10937  0BAE  3188  20A4         	fcall	_PWM3_LoadDutyValue
 10938  0BB0  0008               	return
 10939  0BB1                     __end_of_TMR2_DutyControlHandler_ISR:	
 10940                           
 10941                           	psect	text47
 10942  17C5                     __ptext47:	
 10943 ;; *************** function _TMR1_ISR *****************
 10944 ;; Defined at:
 10945 ;;		line 157 in file "mcc_generated_files/tmr1.c"
 10946 ;; Parameters:    Size  Location     Type
 10947 ;;		None
 10948 ;; Auto vars:     Size  Location     Type
 10949 ;;		None
 10950 ;; Return value:  Size  Location     Type
 10951 ;;                  1    wreg      void 
 10952 ;; Registers used:
 10953 ;;		wreg, status,2, status,0, pclath, cstack
 10954 ;; Tracked objects:
 10955 ;;		On entry : 1F/0
 10956 ;;		On exit  : 0/0
 10957 ;;		Unchanged: 0/0
 10958 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10959 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10960 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10962 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10963 ;;Total ram usage:        0 bytes
 10964 ;; Hardware stack levels used:    1
 10965 ;; Hardware stack levels required when called:    2
 10966 ;; This function calls:
 10967 ;;		_TMR1_CallBack
 10968 ;;		_TMR1_WriteTimer
 10969 ;; This function is called by:
 10970 ;;		_INTERRUPT_InterruptManager
 10971 ;; This function uses a non-reentrant model
 10972 ;;
 10973                           
 10974                           
 10975                           ;psect for function _TMR1_ISR
 10976  17C5                     _TMR1_ISR:	
 10977                           
 10978                           ;mcc_generated_files/tmr1.c: 161:     PIR1bits.TMR1IF = 0;
 10979                           
 10980                           ;incstack = 0
 10981                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
 10982  17C5  1011               	bcf	17,0	;volatile
 10983                           
 10984                           ;mcc_generated_files/tmr1.c: 162:     TMR1_WriteTimer(timer1ReloadVal);
 10985  17C6  0022               	movlb	2	; select bank2
 10986  17C7  0862               	movf	(_timer1ReloadVal+1)^(0+256),w	;volatile
 10987  17C8  00F1               	movwf	TMR1_WriteTimer@timerVal+1
 10988  17C9  0861               	movf	_timer1ReloadVal^(0+256),w	;volatile
 10989  17CA  00F0               	movwf	TMR1_WriteTimer@timerVal
 10990  17CB  3197  27D1  3197   	fcall	_TMR1_WriteTimer
 10991                           
 10992                           ;mcc_generated_files/tmr1.c: 166:     TMR1_CallBack();
 10993  17CE  3197  2777         	fcall	_TMR1_CallBack
 10994  17D0  0008               	return
 10995  17D1                     __end_of_TMR1_ISR:	
 10996                           
 10997                           	psect	text48
 10998  17D1                     __ptext48:	
 10999 ;; *************** function _TMR1_WriteTimer *****************
 11000 ;; Defined at:
 11001 ;;		line 120 in file "mcc_generated_files/tmr1.c"
 11002 ;; Parameters:    Size  Location     Type
 11003 ;;  timerVal        2    0[COMMON] unsigned short 
 11004 ;; Auto vars:     Size  Location     Type
 11005 ;;		None
 11006 ;; Return value:  Size  Location     Type
 11007 ;;                  1    wreg      void 
 11008 ;; Registers used:
 11009 ;;		wreg
 11010 ;; Tracked objects:
 11011 ;;		On entry : 1F/2
 11012 ;;		On exit  : 1F/0
 11013 ;;		Unchanged: 0/0
 11014 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11015 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11016 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11017 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11018 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11019 ;;Total ram usage:        2 bytes
 11020 ;; Hardware stack levels used:    1
 11021 ;; This function calls:
 11022 ;;		Nothing
 11023 ;; This function is called by:
 11024 ;;		_TMR1_ISR
 11025 ;; This function uses a non-reentrant model
 11026 ;;
 11027                           
 11028                           
 11029                           ;psect for function _TMR1_WriteTimer
 11030  17D1                     _TMR1_WriteTimer:	
 11031                           
 11032                           ;mcc_generated_files/tmr1.c: 120: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 121: {;mcc_generated_files/tmr1.c: 122:     if (T1CONbits.nT1SYNC == 1)
 11033                           
 11034                           ;incstack = 0
 11035                           ; Regs used in _TMR1_WriteTimer: [wreg]
 11036  17D1  0020               	movlb	0	; select bank0
 11037  17D2  1D18               	btfss	24,2	;volatile
 11038  17D3  2FDB               	goto	i1l2728
 11039                           
 11040                           ;mcc_generated_files/tmr1.c: 123:     {;mcc_generated_files/tmr1.c: 125:         T1CONbi
      +                          ts.TMR1ON = 0;
 11041  17D4  1018               	bcf	24,0	;volatile
 11042                           
 11043                           ;mcc_generated_files/tmr1.c: 128:         TMR1H = (timerVal >> 8);
 11044  17D5  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 11045  17D6  0097               	movwf	23	;volatile
 11046                           
 11047                           ;mcc_generated_files/tmr1.c: 129:         TMR1L = timerVal;
 11048  17D7  0870               	movf	TMR1_WriteTimer@timerVal,w
 11049  17D8  0096               	movwf	22	;volatile
 11050                           
 11051                           ;mcc_generated_files/tmr1.c: 132:         T1CONbits.TMR1ON =1;
 11052  17D9  1418               	bsf	24,0	;volatile
 11053                           
 11054                           ;mcc_generated_files/tmr1.c: 133:     }
 11055  17DA  0008               	return
 11056  17DB                     i1l2728:	
 11057                           
 11058                           ;mcc_generated_files/tmr1.c: 135:     {;mcc_generated_files/tmr1.c: 137:         TMR1H =
      +                           (timerVal >> 8);
 11059  17DB  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 11060  17DC  0097               	movwf	23	;volatile
 11061                           
 11062                           ;mcc_generated_files/tmr1.c: 138:         TMR1L = timerVal;
 11063  17DD  0870               	movf	TMR1_WriteTimer@timerVal,w
 11064  17DE  0096               	movwf	22	;volatile
 11065  17DF  0008               	return
 11066  17E0                     __end_of_TMR1_WriteTimer:	
 11067                           
 11068                           	psect	text49
 11069  1777                     __ptext49:	
 11070 ;; *************** function _TMR1_CallBack *****************
 11071 ;; Defined at:
 11072 ;;		line 169 in file "mcc_generated_files/tmr1.c"
 11073 ;; Parameters:    Size  Location     Type
 11074 ;;		None
 11075 ;; Auto vars:     Size  Location     Type
 11076 ;;		None
 11077 ;; Return value:  Size  Location     Type
 11078 ;;                  1    wreg      void 
 11079 ;; Registers used:
 11080 ;;		wreg, status,2, status,0, pclath, cstack
 11081 ;; Tracked objects:
 11082 ;;		On entry : 1F/0
 11083 ;;		On exit  : 0/0
 11084 ;;		Unchanged: 0/0
 11085 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11086 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11087 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11089 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11090 ;;Total ram usage:        0 bytes
 11091 ;; Hardware stack levels used:    1
 11092 ;; Hardware stack levels required when called:    1
 11093 ;; This function calls:
 11094 ;;		Absolute function
 11095 ;;		_TMR1_DefaultInterruptHandler
 11096 ;;		_TMR1_SystemTimer_ISR
 11097 ;; This function is called by:
 11098 ;;		_TMR1_ISR
 11099 ;; This function uses a non-reentrant model
 11100 ;;
 11101                           
 11102                           
 11103                           ;psect for function _TMR1_CallBack
 11104  1777                     _TMR1_CallBack:	
 11105                           
 11106                           ;mcc_generated_files/tmr1.c: 172:     if(TMR1_InterruptHandler)
 11107                           
 11108                           ;incstack = 0
 11109                           ; Regs used in _TMR1_CallBack: [wreg+status,2+status,0+pclath+cstack]
 11110  1777  0022               	movlb	2	; select bank2
 11111  1778  085F               	movf	_TMR1_InterruptHandler^(0+256),w
 11112  1779  0460               	iorwf	(_TMR1_InterruptHandler+1)^(0+256),w
 11113  177A  1903               	btfsc	3,2
 11114  177B  0008               	return
 11115                           
 11116                           ;mcc_generated_files/tmr1.c: 173:     {;mcc_generated_files/tmr1.c: 174:         TMR1_In
      +                          terruptHandler();
 11117  177C  0860               	movf	(_TMR1_InterruptHandler+1)^(0+256),w
 11118  177D  008A               	movwf	10
 11119  177E  085F               	movf	_TMR1_InterruptHandler^(0+256),w
 11120  177F  000A               	callw
 11121  1780  3197               	pagesel	$
 11122  1781  0008               	return
 11123  1782                     __end_of_TMR1_CallBack:	
 11124                           
 11125                           	psect	text50
 11126  0002                     __ptext50:	
 11127 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 11128 ;; Defined at:
 11129 ;;		line 182 in file "mcc_generated_files/tmr1.c"
 11130 ;; Parameters:    Size  Location     Type
 11131 ;;		None
 11132 ;; Auto vars:     Size  Location     Type
 11133 ;;		None
 11134 ;; Return value:  Size  Location     Type
 11135 ;;                  1    wreg      void 
 11136 ;; Registers used:
 11137 ;;		None
 11138 ;; Tracked objects:
 11139 ;;		On entry : 1F/2
 11140 ;;		On exit  : 1F/2
 11141 ;;		Unchanged: 1F/0
 11142 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11143 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11144 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11146 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11147 ;;Total ram usage:        0 bytes
 11148 ;; Hardware stack levels used:    1
 11149 ;; This function calls:
 11150 ;;		Nothing
 11151 ;; This function is called by:
 11152 ;;		_TMR1_Initialize
 11153 ;;		_TMR1_CallBack
 11154 ;; This function uses a non-reentrant model
 11155 ;;
 11156                           
 11157                           
 11158                           ;psect for function _TMR1_DefaultInterruptHandler
 11159  0002                     _TMR1_DefaultInterruptHandler:	
 11160                           
 11161                           ;incstack = 0
 11162                           ; Regs used in _TMR1_DefaultInterruptHandler: []
 11163  0002  0008               	return
 11164  0003                     __end_of_TMR1_DefaultInterruptHandler:	
 11165                           
 11166                           	psect	text51
 11167  1707                     __ptext51:	
 11168 ;; *************** function _TMR1_SystemTimer_ISR *****************
 11169 ;; Defined at:
 11170 ;;		line 5 in file "SystemTimer.c"
 11171 ;; Parameters:    Size  Location     Type
 11172 ;;		None
 11173 ;; Auto vars:     Size  Location     Type
 11174 ;;		None
 11175 ;; Return value:  Size  Location     Type
 11176 ;;                  1    wreg      void 
 11177 ;; Registers used:
 11178 ;;		wreg, status,2, status,0
 11179 ;; Tracked objects:
 11180 ;;		On entry : 1F/2
 11181 ;;		On exit  : 1F/0
 11182 ;;		Unchanged: 0/0
 11183 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11184 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11185 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11186 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11187 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11188 ;;Total ram usage:        1 bytes
 11189 ;; Hardware stack levels used:    1
 11190 ;; This function calls:
 11191 ;;		Nothing
 11192 ;; This function is called by:
 11193 ;;		_uart_start
 11194 ;;		_TMR1_CallBack
 11195 ;; This function uses a non-reentrant model
 11196 ;;
 11197                           
 11198                           
 11199                           ;psect for function _TMR1_SystemTimer_ISR
 11200  1707                     _TMR1_SystemTimer_ISR:	
 11201                           
 11202                           ;SystemTimer.c: 7:     system_counter++;
 11203                           
 11204                           ;incstack = 0
 11205                           ; Regs used in _TMR1_SystemTimer_ISR: [wreg+status,2+status,0]
 11206  1707  3001               	movlw	1
 11207  1708  00F0               	movwf	??_TMR1_SystemTimer_ISR
 11208  1709  0870               	movf	??_TMR1_SystemTimer_ISR,w
 11209  170A  0020               	movlb	0	; select bank0
 11210  170B  07AA               	addwf	_system_counter,f
 11211  170C  0008               	return
 11212  170D                     __end_of_TMR1_SystemTimer_ISR:	
 11213                           
 11214                           	psect	text52
 11215  09C3                     __ptext52:	
 11216 ;; *************** function _EUSART_CommandHandler_ISR *****************
 11217 ;; Defined at:
 11218 ;;		line 13 in file "UartParser.c"
 11219 ;; Parameters:    Size  Location     Type
 11220 ;;		None
 11221 ;; Auto vars:     Size  Location     Type
 11222 ;;  rx_data         1    1[COMMON] unsigned char 
 11223 ;; Return value:  Size  Location     Type
 11224 ;;                  1    wreg      void 
 11225 ;; Registers used:
 11226 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11227 ;; Tracked objects:
 11228 ;;		On entry : 1F/2
 11229 ;;		On exit  : 1F/0
 11230 ;;		Unchanged: 0/0
 11231 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11232 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11233 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11234 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11235 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11236 ;;Total ram usage:        2 bytes
 11237 ;; Hardware stack levels used:    1
 11238 ;; This function calls:
 11239 ;;		Nothing
 11240 ;; This function is called by:
 11241 ;;		_uart_start
 11242 ;;		_INTERRUPT_InterruptManager
 11243 ;; This function uses a non-reentrant model
 11244 ;;
 11245                           
 11246                           
 11247                           ;psect for function _EUSART_CommandHandler_ISR
 11248  09C3                     _EUSART_CommandHandler_ISR:	
 11249                           
 11250                           ;UartParser.c: 15:     uint8_t rx_data = RC1REG;
 11251                           
 11252                           ;incstack = 0
 11253                           ; Regs used in _EUSART_CommandHandler_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 11254  09C3  0023               	movlb	3	; select bank3
 11255  09C4  0819               	movf	25,w	;volatile
 11256  09C5  00F0               	movwf	??_EUSART_CommandHandler_ISR
 11257  09C6  0870               	movf	??_EUSART_CommandHandler_ISR,w
 11258  09C7  00F1               	movwf	EUSART_CommandHandler_ISR@rx_data
 11259                           
 11260                           ;UartParser.c: 16:     if( lock_isr )
 11261  09C8  0020               	movlb	0	; select bank0
 11262  09C9  0863               	movf	_lock_isr,w
 11263  09CA  1D03               	btfss	3,2
 11264  09CB  0008               	return
 11265                           
 11266                           ;UartParser.c: 18:     isr_timer = ((uint8_t)((uint8_t)~system_counter)+((uint8_t)1));
 11267  09CC  032A               	decf	_system_counter,w
 11268  09CD  3AFF               	xorlw	255
 11269  09CE  00F0               	movwf	??_EUSART_CommandHandler_ISR
 11270  09CF  0870               	movf	??_EUSART_CommandHandler_ISR,w
 11271  09D0  00A8               	movwf	_isr_timer
 11272                           
 11273                           ;UartParser.c: 19:     if( rx_idx < 32 )
 11274  09D1  3020               	movlw	32
 11275  09D2  0229               	subwf	UartParser@rx_idx,w
 11276  09D3  1803               	skipnc
 11277  09D4  0008               	return
 11278                           
 11279                           ;UartParser.c: 20:         rx_buffer[rx_idx++] = rx_data;
 11280  09D5  0871               	movf	EUSART_CommandHandler_ISR@rx_data,w
 11281  09D6  00F0               	movwf	??_EUSART_CommandHandler_ISR
 11282  09D7  0829               	movf	UartParser@rx_idx,w
 11283  09D8  3E20               	addlw	(low (UartParser@rx_buffer| (0+256)))& (0+255)
 11284  09D9  0086               	movwf	6
 11285  09DA  3001               	movlw	1	; select bank2/3
 11286  09DB  0087               	movwf	7
 11287  09DC  0870               	movf	??_EUSART_CommandHandler_ISR,w
 11288  09DD  0081               	movwf	1
 11289  09DE  3001               	movlw	1
 11290  09DF  00F0               	movwf	??_EUSART_CommandHandler_ISR
 11291  09E0  0870               	movf	??_EUSART_CommandHandler_ISR,w
 11292  09E1  07A9               	addwf	UartParser@rx_idx,f
 11293  09E2  0008               	return
 11294  09E3                     __end_of_EUSART_CommandHandler_ISR:	
 11295                           
 11296                           	psect	text53
 11297  0ACC                     __ptext53:	
 11298 ;; *************** function _EUSART_Receive_ISR *****************
 11299 ;; Defined at:
 11300 ;;		line 175 in file "mcc_generated_files/eusart.c"
 11301 ;; Parameters:    Size  Location     Type
 11302 ;;		None
 11303 ;; Auto vars:     Size  Location     Type
 11304 ;;		None
 11305 ;; Return value:  Size  Location     Type
 11306 ;;                  1    wreg      void 
 11307 ;; Registers used:
 11308 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11309 ;; Tracked objects:
 11310 ;;		On entry : 1F/2
 11311 ;;		On exit  : 0/0
 11312 ;;		Unchanged: 0/0
 11313 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11314 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11315 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11317 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11318 ;;Total ram usage:        0 bytes
 11319 ;; Hardware stack levels used:    1
 11320 ;; Hardware stack levels required when called:    2
 11321 ;; This function calls:
 11322 ;;		Absolute function
 11323 ;;		_EUSART_DefaultErrorHandler
 11324 ;;		_EUSART_DefaultFramingErrorHandler
 11325 ;;		_EUSART_DefaultOverrunErrorHandler
 11326 ;;		_EUSART_RxDataHandler
 11327 ;; This function is called by:
 11328 ;;		_EUSART_Initialize
 11329 ;;		_INTERRUPT_InterruptManager
 11330 ;; This function uses a non-reentrant model
 11331 ;;
 11332                           
 11333                           
 11334                           ;psect for function _EUSART_Receive_ISR
 11335  0ACC                     _EUSART_Receive_ISR:	
 11336                           
 11337                           ;mcc_generated_files/eusart.c: 178:     eusartRxStatusBuffer[eusartRxHead].status = 0;
 11338                           
 11339                           ;incstack = 0
 11340                           ; Regs used in _EUSART_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11341  0ACC  0020               	movlb	0	; select bank0
 11342  0ACD  0839               	movf	_eusartRxHead,w	;volatile
 11343  0ACE  3E40               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 11344  0ACF  0086               	movwf	6
 11345  0AD0  3001               	movlw	1	; select bank2/3
 11346  0AD1  0087               	movwf	7
 11347  0AD2  0181               	clrf	1
 11348                           
 11349                           ;mcc_generated_files/eusart.c: 180:     if(RC1STAbits.FERR){
 11350  0AD3  0023               	movlb	3	; select bank3
 11351  0AD4  1D1D               	btfss	29,2	;volatile
 11352  0AD5  2AE3               	goto	i1l2886
 11353                           
 11354                           ;mcc_generated_files/eusart.c: 181:         eusartRxStatusBuffer[eusartRxHead].ferr = 1;
 11355  0AD6  0020               	movlb	0	; select bank0
 11356  0AD7  0839               	movf	_eusartRxHead,w	;volatile
 11357  0AD8  3E40               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 11358  0AD9  0086               	movwf	6
 11359  0ADA  3001               	movlw	1	; select bank2/3
 11360  0ADB  0087               	movwf	7
 11361  0ADC  1481               	bsf	1,1
 11362                           
 11363                           ;mcc_generated_files/eusart.c: 182:         EUSART_FramingErrorHandler();
 11364  0ADD  0022               	movlb	2	; select bank2
 11365  0ADE  086C               	movf	(_EUSART_FramingErrorHandler+1)^(0+256),w
 11366  0ADF  008A               	movwf	10
 11367  0AE0  086B               	movf	_EUSART_FramingErrorHandler^(0+256),w
 11368  0AE1  000A               	callw
 11369  0AE2  318A               	pagesel	$
 11370  0AE3                     i1l2886:	
 11371                           
 11372                           ;mcc_generated_files/eusart.c: 185:     if(RC1STAbits.OERR){
 11373  0AE3  0023               	movlb	3	; select bank3
 11374  0AE4  1C9D               	btfss	29,1	;volatile
 11375  0AE5  2AF3               	goto	i1l2892
 11376                           
 11377                           ;mcc_generated_files/eusart.c: 186:         eusartRxStatusBuffer[eusartRxHead].oerr = 1;
 11378  0AE6  0020               	movlb	0	; select bank0
 11379  0AE7  0839               	movf	_eusartRxHead,w	;volatile
 11380  0AE8  3E40               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 11381  0AE9  0086               	movwf	6
 11382  0AEA  3001               	movlw	1	; select bank2/3
 11383  0AEB  0087               	movwf	7
 11384  0AEC  1501               	bsf	1,2
 11385                           
 11386                           ;mcc_generated_files/eusart.c: 187:         EUSART_OverrunErrorHandler();
 11387  0AED  0022               	movlb	2	; select bank2
 11388  0AEE  086A               	movf	(_EUSART_OverrunErrorHandler+1)^(0+256),w
 11389  0AEF  008A               	movwf	10
 11390  0AF0  0869               	movf	_EUSART_OverrunErrorHandler^(0+256),w
 11391  0AF1  000A               	callw
 11392  0AF2  318A               	pagesel	$
 11393  0AF3                     i1l2892:	
 11394                           
 11395                           ;mcc_generated_files/eusart.c: 190:     if(eusartRxStatusBuffer[eusartRxHead].status){
 11396  0AF3  0020               	movlb	0	; select bank0
 11397  0AF4  0839               	movf	_eusartRxHead,w	;volatile
 11398  0AF5  3E40               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 11399  0AF6  0086               	movwf	6
 11400  0AF7  3001               	movlw	1	; select bank2/3
 11401  0AF8  0087               	movwf	7
 11402  0AF9  0801               	movf	1,w
 11403  0AFA  1903               	btfsc	3,2
 11404  0AFB  2B03               	goto	i1l2896
 11405                           
 11406                           ;mcc_generated_files/eusart.c: 191:         EUSART_ErrorHandler();
 11407  0AFC  0022               	movlb	2	; select bank2
 11408  0AFD  0868               	movf	(_EUSART_ErrorHandler+1)^(0+256),w
 11409  0AFE  008A               	movwf	10
 11410  0AFF  0867               	movf	_EUSART_ErrorHandler^(0+256),w
 11411  0B00  000A               	callw
 11412  0B01  318A               	pagesel	$
 11413                           
 11414                           ;mcc_generated_files/eusart.c: 192:     } else {
 11415  0B02  0008               	return
 11416  0B03                     i1l2896:	
 11417                           
 11418                           ;mcc_generated_files/eusart.c: 193:         EUSART_RxDataHandler();
 11419  0B03  3188  20E7         	fcall	_EUSART_RxDataHandler
 11420  0B05  0008               	return
 11421  0B06                     __end_of_EUSART_Receive_ISR:	
 11422                           
 11423                           	psect	text54
 11424  16E3                     __ptext54:	
 11425 ;; *************** function _EUSART_DefaultOverrunErrorHandler *****************
 11426 ;; Defined at:
 11427 ;;		line 211 in file "mcc_generated_files/eusart.c"
 11428 ;; Parameters:    Size  Location     Type
 11429 ;;		None
 11430 ;; Auto vars:     Size  Location     Type
 11431 ;;		None
 11432 ;; Return value:  Size  Location     Type
 11433 ;;                  1    wreg      void 
 11434 ;; Registers used:
 11435 ;;		None
 11436 ;; Tracked objects:
 11437 ;;		On entry : 1F/2
 11438 ;;		On exit  : 1F/3
 11439 ;;		Unchanged: 0/0
 11440 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11441 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11442 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11444 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11445 ;;Total ram usage:        0 bytes
 11446 ;; Hardware stack levels used:    1
 11447 ;; This function calls:
 11448 ;;		Nothing
 11449 ;; This function is called by:
 11450 ;;		_EUSART_Initialize
 11451 ;;		_EUSART_Receive_ISR
 11452 ;; This function uses a non-reentrant model
 11453 ;;
 11454                           
 11455                           
 11456                           ;psect for function _EUSART_DefaultOverrunErrorHandler
 11457  16E3                     _EUSART_DefaultOverrunErrorHandler:	
 11458                           
 11459                           ;mcc_generated_files/eusart.c: 214:     RC1STAbits.CREN = 0;
 11460                           
 11461                           ;incstack = 0
 11462                           ; Regs used in _EUSART_DefaultOverrunErrorHandler: []
 11463  16E3  0023               	movlb	3	; select bank3
 11464  16E4  121D               	bcf	29,4	;volatile
 11465                           
 11466                           ;mcc_generated_files/eusart.c: 215:     RC1STAbits.CREN = 1;
 11467  16E5  161D               	bsf	29,4	;volatile
 11468  16E6  0008               	return
 11469  16E7                     __end_of_EUSART_DefaultOverrunErrorHandler:	
 11470                           
 11471                           	psect	text55
 11472  0872                     __ptext55:	
 11473 ;; *************** function _EUSART_DefaultFramingErrorHandler *****************
 11474 ;; Defined at:
 11475 ;;		line 209 in file "mcc_generated_files/eusart.c"
 11476 ;; Parameters:    Size  Location     Type
 11477 ;;		None
 11478 ;; Auto vars:     Size  Location     Type
 11479 ;;		None
 11480 ;; Return value:  Size  Location     Type
 11481 ;;                  1    wreg      void 
 11482 ;; Registers used:
 11483 ;;		None
 11484 ;; Tracked objects:
 11485 ;;		On entry : 1F/2
 11486 ;;		On exit  : 1F/2
 11487 ;;		Unchanged: 1F/0
 11488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11489 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11490 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11491 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11492 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11493 ;;Total ram usage:        0 bytes
 11494 ;; Hardware stack levels used:    1
 11495 ;; This function calls:
 11496 ;;		Nothing
 11497 ;; This function is called by:
 11498 ;;		_EUSART_Initialize
 11499 ;;		_EUSART_Receive_ISR
 11500 ;; This function uses a non-reentrant model
 11501 ;;
 11502                           
 11503                           
 11504                           ;psect for function _EUSART_DefaultFramingErrorHandler
 11505  0872                     _EUSART_DefaultFramingErrorHandler:	
 11506                           
 11507                           ;incstack = 0
 11508                           ; Regs used in _EUSART_DefaultFramingErrorHandler: []
 11509  0872  0008               	return
 11510  0873                     __end_of_EUSART_DefaultFramingErrorHandler:	
 11511                           
 11512                           	psect	text56
 11513  16D7                     __ptext56:	
 11514 ;; *************** function _EUSART_DefaultErrorHandler *****************
 11515 ;; Defined at:
 11516 ;;		line 219 in file "mcc_generated_files/eusart.c"
 11517 ;; Parameters:    Size  Location     Type
 11518 ;;		None
 11519 ;; Auto vars:     Size  Location     Type
 11520 ;;		None
 11521 ;; Return value:  Size  Location     Type
 11522 ;;                  1    wreg      void 
 11523 ;; Registers used:
 11524 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11525 ;; Tracked objects:
 11526 ;;		On entry : 1F/2
 11527 ;;		On exit  : 1F/0
 11528 ;;		Unchanged: 0/0
 11529 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11530 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11531 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11533 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11534 ;;Total ram usage:        0 bytes
 11535 ;; Hardware stack levels used:    1
 11536 ;; Hardware stack levels required when called:    1
 11537 ;; This function calls:
 11538 ;;		_EUSART_RxDataHandler
 11539 ;; This function is called by:
 11540 ;;		_EUSART_Initialize
 11541 ;;		_EUSART_Receive_ISR
 11542 ;; This function uses a non-reentrant model
 11543 ;;
 11544                           
 11545                           
 11546                           ;psect for function _EUSART_DefaultErrorHandler
 11547  16D7                     _EUSART_DefaultErrorHandler:	
 11548                           
 11549                           ;mcc_generated_files/eusart.c: 220:     EUSART_RxDataHandler();
 11550                           
 11551                           ;incstack = 0
 11552                           ; Regs used in _EUSART_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
 11553  16D7  3188  20E7         	fcall	_EUSART_RxDataHandler
 11554  16D9  0008               	return
 11555  16DA                     __end_of_EUSART_DefaultErrorHandler:	
 11556                           
 11557                           	psect	text57
 11558  08E7                     __ptext57:	
 11559 ;; *************** function _EUSART_RxDataHandler *****************
 11560 ;; Defined at:
 11561 ;;		line 199 in file "mcc_generated_files/eusart.c"
 11562 ;; Parameters:    Size  Location     Type
 11563 ;;		None
 11564 ;; Auto vars:     Size  Location     Type
 11565 ;;		None
 11566 ;; Return value:  Size  Location     Type
 11567 ;;                  1    wreg      void 
 11568 ;; Registers used:
 11569 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11570 ;; Tracked objects:
 11571 ;;		On entry : 1D/0
 11572 ;;		On exit  : 1F/0
 11573 ;;		Unchanged: 0/0
 11574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11575 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11576 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11577 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11578 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11579 ;;Total ram usage:        1 bytes
 11580 ;; Hardware stack levels used:    1
 11581 ;; This function calls:
 11582 ;;		Nothing
 11583 ;; This function is called by:
 11584 ;;		_EUSART_Receive_ISR
 11585 ;;		_EUSART_DefaultErrorHandler
 11586 ;; This function uses a non-reentrant model
 11587 ;;
 11588                           
 11589                           
 11590                           ;psect for function _EUSART_RxDataHandler
 11591  08E7                     _EUSART_RxDataHandler:	
 11592                           
 11593                           ;mcc_generated_files/eusart.c: 201:     eusartRxBuffer[eusartRxHead++] = RC1REG;
 11594                           
 11595                           ;incstack = 0
 11596                           ; Regs used in _EUSART_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
 11597  08E7  0023               	movlb	3	; select bank3
 11598  08E8  0819               	movf	25,w	;volatile
 11599  08E9  00F0               	movwf	??_EUSART_RxDataHandler
 11600  08EA  0020               	movlb	0	; select bank0
 11601  08EB  0839               	movf	_eusartRxHead,w
 11602  08EC  3E48               	addlw	(low (_eusartRxBuffer| (0+256)))& (0+255)
 11603  08ED  0086               	movwf	6
 11604  08EE  3001               	movlw	1	; select bank2/3
 11605  08EF  0087               	movwf	7
 11606  08F0  0870               	movf	??_EUSART_RxDataHandler,w
 11607  08F1  0081               	movwf	1
 11608  08F2  3001               	movlw	1
 11609  08F3  00F0               	movwf	??_EUSART_RxDataHandler
 11610  08F4  0870               	movf	??_EUSART_RxDataHandler,w
 11611  08F5  07B9               	addwf	_eusartRxHead,f	;volatile
 11612                           
 11613                           ;mcc_generated_files/eusart.c: 202:     if(sizeof(eusartRxBuffer) <= eusartRxHead)
 11614  08F6  3008               	movlw	8
 11615  08F7  0239               	subwf	_eusartRxHead,w
 11616  08F8  1803               	btfsc	3,0
 11617                           
 11618                           ;mcc_generated_files/eusart.c: 203:     {;mcc_generated_files/eusart.c: 204:         eus
      +                          artRxHead = 0;
 11619  08F9  01B9               	clrf	_eusartRxHead	;volatile
 11620                           
 11621                           ;mcc_generated_files/eusart.c: 206:     eusartRxCount++;
 11622  08FA  3001               	movlw	1
 11623  08FB  00F0               	movwf	??_EUSART_RxDataHandler
 11624  08FC  0870               	movf	??_EUSART_RxDataHandler,w
 11625  08FD  07B7               	addwf	_eusartRxCount,f	;volatile
 11626  08FE  0008               	return
 11627  08FF                     __end_of_EUSART_RxDataHandler:	
 11628                           
 11629                           	psect	text58
 11630  17B9                     __ptext58:	
 11631 ;; *************** function _ADC_ISR *****************
 11632 ;; Defined at:
 11633 ;;		line 149 in file "mcc_generated_files/adc.c"
 11634 ;; Parameters:    Size  Location     Type
 11635 ;;		None
 11636 ;; Auto vars:     Size  Location     Type
 11637 ;;		None
 11638 ;; Return value:  Size  Location     Type
 11639 ;;                  1    wreg      void 
 11640 ;; Registers used:
 11641 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11642 ;; Tracked objects:
 11643 ;;		On entry : 1F/0
 11644 ;;		On exit  : 0/0
 11645 ;;		Unchanged: 0/0
 11646 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11647 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11648 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11650 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11651 ;;Total ram usage:        0 bytes
 11652 ;; Hardware stack levels used:    1
 11653 ;; Hardware stack levels required when called:    2
 11654 ;; This function calls:
 11655 ;;		Absolute function
 11656 ;;		_ADC_DefaultInterruptHandler
 11657 ;;		_ADC_VoltageControlHandler_ISR
 11658 ;; This function is called by:
 11659 ;;		_INTERRUPT_InterruptManager
 11660 ;; This function uses a non-reentrant model
 11661 ;;
 11662                           
 11663                           
 11664                           ;psect for function _ADC_ISR
 11665  17B9                     _ADC_ISR:	
 11666                           
 11667                           ;mcc_generated_files/adc.c: 152:     PIR1bits.ADIF = 0;
 11668                           
 11669                           ;incstack = 0
 11670                           ; Regs used in _ADC_ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11671  17B9  1311               	bcf	17,6	;volatile
 11672                           
 11673                           ;mcc_generated_files/adc.c: 154:  if(ADC_InterruptHandler)
 11674  17BA  0022               	movlb	2	; select bank2
 11675  17BB  0863               	movf	_ADC_InterruptHandler^(0+256),w
 11676  17BC  0464               	iorwf	(_ADC_InterruptHandler+1)^(0+256),w
 11677  17BD  1903               	btfsc	3,2
 11678  17BE  0008               	return
 11679                           
 11680                           ;mcc_generated_files/adc.c: 155:     {;mcc_generated_files/adc.c: 156:         ADC_Inter
      +                          ruptHandler();
 11681  17BF  0864               	movf	(_ADC_InterruptHandler+1)^(0+256),w
 11682  17C0  008A               	movwf	10
 11683  17C1  0863               	movf	_ADC_InterruptHandler^(0+256),w
 11684  17C2  000A               	callw
 11685  17C3  3197               	pagesel	$
 11686  17C4  0008               	return
 11687  17C5                     __end_of_ADC_ISR:	
 11688                           
 11689                           	psect	text59
 11690  0871                     __ptext59:	
 11691 ;; *************** function _ADC_DefaultInterruptHandler *****************
 11692 ;; Defined at:
 11693 ;;		line 164 in file "mcc_generated_files/adc.c"
 11694 ;; Parameters:    Size  Location     Type
 11695 ;;		None
 11696 ;; Auto vars:     Size  Location     Type
 11697 ;;		None
 11698 ;; Return value:  Size  Location     Type
 11699 ;;                  1    wreg      void 
 11700 ;; Registers used:
 11701 ;;		None
 11702 ;; Tracked objects:
 11703 ;;		On entry : 1F/2
 11704 ;;		On exit  : 1F/2
 11705 ;;		Unchanged: 1F/0
 11706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11707 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11708 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11709 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11710 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11711 ;;Total ram usage:        0 bytes
 11712 ;; Hardware stack levels used:    1
 11713 ;; This function calls:
 11714 ;;		Nothing
 11715 ;; This function is called by:
 11716 ;;		_ADC_Initialize
 11717 ;;		_ADC_ISR
 11718 ;; This function uses a non-reentrant model
 11719 ;;
 11720                           
 11721                           
 11722                           ;psect for function _ADC_DefaultInterruptHandler
 11723  0871                     _ADC_DefaultInterruptHandler:	
 11724                           
 11725                           ;incstack = 0
 11726                           ; Regs used in _ADC_DefaultInterruptHandler: []
 11727  0871  0008               	return
 11728  0872                     __end_of_ADC_DefaultInterruptHandler:	
 11729                           
 11730                           	psect	text60
 11731  0CB0                     __ptext60:	
 11732 ;; *************** function _ADC_VoltageControlHandler_ISR *****************
 11733 ;; Defined at:
 11734 ;;		line 314 in file "vcontrol.c"
 11735 ;; Parameters:    Size  Location     Type
 11736 ;;		None
 11737 ;; Auto vars:     Size  Location     Type
 11738 ;;  pwm             4    5[BANK0 ] unsigned long 
 11739 ;;  force_inc       1    4[BANK0 ] _Bool 
 11740 ;; Return value:  Size  Location     Type
 11741 ;;                  1    wreg      void 
 11742 ;; Registers used:
 11743 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11744 ;; Tracked objects:
 11745 ;;		On entry : 1F/2
 11746 ;;		On exit  : 1F/0
 11747 ;;		Unchanged: 0/0
 11748 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11749 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11750 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11751 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11752 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11753 ;;Total ram usage:        9 bytes
 11754 ;; Hardware stack levels used:    1
 11755 ;; Hardware stack levels required when called:    1
 11756 ;; This function calls:
 11757 ;;		_ADC_GetConversionResult
 11758 ;;		_LoadDutyValue
 11759 ;;		_PWM3_LoadDutyValue
 11760 ;;		___lldiv
 11761 ;;		___lmul
 11762 ;; This function is called by:
 11763 ;;		_init_chopper
 11764 ;;		_ADC_ISR
 11765 ;; This function uses a non-reentrant model
 11766 ;;
 11767                           
 11768                           
 11769                           ;psect for function _ADC_VoltageControlHandler_ISR
 11770  0CB0                     _ADC_VoltageControlHandler_ISR:	
 11771                           
 11772                           ;vcontrol.c: 316:     vdc_prev = vdc;
 11773                           
 11774                           ;incstack = 0
 11775                           ; Regs used in _ADC_VoltageControlHandler_ISR: [wreg-fsr0h+status,2+status,0+pclath+csta
      +                          ck]
 11776  0CB0  0020               	movlb	0	; select bank0
 11777  0CB1  083B               	movf	_vdc+1,w
 11778  0CB2  0021               	movlb	1	; select bank1
 11779  0CB3  00E5               	movwf	(_vdc_prev+1)^(0+128)
 11780  0CB4  0020               	movlb	0	; select bank0
 11781  0CB5  083A               	movf	_vdc,w
 11782  0CB6  0021               	movlb	1	; select bank1
 11783  0CB7  00E4               	movwf	_vdc_prev^(0+128)
 11784                           
 11785                           ;vcontrol.c: 317:     vdc = v_table[ADC_GetConversionResult() & 0x03FF ];
 11786  0CB8  3196  26F3  318C   	fcall	_ADC_GetConversionResult
 11787  0CBB  30FF               	movlw	255
 11788  0CBC  0570               	andwf	?_ADC_GetConversionResult,w
 11789  0CBD  0020               	movlb	0	; select bank0
 11790  0CBE  00C2               	movwf	??_ADC_VoltageControlHandler_ISR
 11791  0CBF  3003               	movlw	3
 11792  0CC0  0571               	andwf	?_ADC_GetConversionResult+1,w
 11793  0CC1  00C3               	movwf	??_ADC_VoltageControlHandler_ISR+1
 11794  0CC2  35C2               	lslf	??_ADC_VoltageControlHandler_ISR,f
 11795  0CC3  0DC3               	rlf	??_ADC_VoltageControlHandler_ISR+1,f
 11796  0CC4  3071               	movlw	low (_v_table| (0+32768))
 11797  0CC5  0742               	addwf	??_ADC_VoltageControlHandler_ISR,w
 11798  0CC6  0084               	movwf	4
 11799  0CC7  3080               	movlw	high (_v_table| (0+32768))
 11800  0CC8  3D43               	addwfc	??_ADC_VoltageControlHandler_ISR+1,w
 11801  0CC9  0085               	movwf	5
 11802  0CCA  3F00               	moviw [0]fsr0
 11803  0CCB  00BA               	movwf	_vdc
 11804  0CCC  3F01               	moviw [1]fsr0
 11805  0CCD  00BB               	movwf	_vdc+1
 11806                           
 11807                           ;vcontrol.c: 319:     if( chopper_active == 0 )
 11808  0CCE  082C               	movf	_chopper_active,w
 11809  0CCF  1903               	btfsc	3,2
 11810  0CD0  0008               	return
 11811                           
 11812                           ;vcontrol.c: 322:     diff_vdc = vdc - vdc_prev;
 11813  0CD1  0021               	movlb	1	; select bank1
 11814  0CD2  0864               	movf	_vdc_prev^(0+128),w
 11815  0CD3  0020               	movlb	0	; select bank0
 11816  0CD4  023A               	subwf	_vdc,w
 11817  0CD5  0022               	movlb	2	; select bank2
 11818  0CD6  00D2               	movwf	_diff_vdc^(0+256)
 11819  0CD7  0021               	movlb	1	; select bank1
 11820  0CD8  0865               	movf	(_vdc_prev+1)^(0+128),w
 11821  0CD9  0020               	movlb	0	; select bank0
 11822  0CDA  3B3B               	subwfb	_vdc+1,w
 11823  0CDB  0022               	movlb	2	; select bank2
 11824  0CDC  00D3               	movwf	(_diff_vdc+1)^(0+256)
 11825                           
 11826                           ;vcontrol.c: 323:     if( vdc > vdc_prev )
 11827  0CDD  0020               	movlb	0	; select bank0
 11828  0CDE  083B               	movf	_vdc+1,w
 11829  0CDF  0021               	movlb	1	; select bank1
 11830  0CE0  0265               	subwf	(_vdc_prev+1)^(0+128),w
 11831  0CE1  1D03               	skipz
 11832  0CE2  2CE7               	goto	u140_25
 11833  0CE3  0020               	movlb	0	; select bank0
 11834  0CE4  083A               	movf	_vdc,w
 11835  0CE5  0021               	movlb	1	; select bank1
 11836  0CE6  0264               	subwf	_vdc_prev^(0+128),w
 11837  0CE7                     u140_25:	
 11838  0CE7  1803               	skipnc
 11839  0CE8  2CED               	goto	i1l2814
 11840                           
 11841                           ;vcontrol.c: 324:         diff_positive = 1;
 11842  0CE9  0020               	movlb	0	; select bank0
 11843  0CEA  01AD               	clrf	_diff_positive
 11844  0CEB  0AAD               	incf	_diff_positive,f
 11845  0CEC  2CEF               	goto	i1l2816
 11846  0CED                     i1l2814:	
 11847                           
 11848                           ;vcontrol.c: 326:         diff_positive = 0;
 11849  0CED  0020               	movlb	0	; select bank0
 11850  0CEE  01AD               	clrf	_diff_positive
 11851  0CEF                     i1l2816:	
 11852                           
 11853                           ;vcontrol.c: 328:     if( vdc > vdc_critic )
 11854  0CEF  083B               	movf	_vdc+1,w
 11855  0CF0  023D               	subwf	_vdc_critic+1,w
 11856  0CF1  1D03               	skipz
 11857  0CF2  2CF5               	goto	u141_25
 11858  0CF3  083A               	movf	_vdc,w
 11859  0CF4  023C               	subwf	_vdc_critic,w
 11860  0CF5                     u141_25:	
 11861  0CF5  1803               	skipnc
 11862  0CF6  2D0D               	goto	i1l2826
 11863                           
 11864                           ;vcontrol.c: 329:     {;vcontrol.c: 330:         PWM3_LoadDutyValue(399);
 11865  0CF7  308F               	movlw	143
 11866  0CF8  00F0               	movwf	PWM3_LoadDutyValue@dutyValue
 11867  0CF9  3001               	movlw	1
 11868  0CFA  00F1               	movwf	PWM3_LoadDutyValue@dutyValue+1
 11869  0CFB  3188  20A4  318C   	fcall	_PWM3_LoadDutyValue
 11870                           
 11871                           ;vcontrol.c: 331:         current_duty = 399;
 11872  0CFE  308F               	movlw	143
 11873  0CFF  0020               	movlb	0	; select bank0
 11874  0D00  00A0               	movwf	_current_duty
 11875  0D01  3001               	movlw	1
 11876  0D02  00A1               	movwf	_current_duty+1
 11877                           
 11878                           ;vcontrol.c: 332:         target_duty = 399;
 11879  0D03  308F               	movlw	143
 11880  0D04  00A2               	movwf	_target_duty
 11881  0D05  3001               	movlw	1
 11882  0D06  00A3               	movwf	_target_duty+1
 11883  0D07                     i1l2824:	
 11884                           
 11885                           ;vcontrol.c: 333:         pwm_duty = 399;
 11886  0D07  308F               	movlw	143
 11887  0D08  0020               	movlb	0	; select bank0
 11888  0D09  00A4               	movwf	_pwm_duty
 11889  0D0A  3001               	movlw	1
 11890  0D0B  00A5               	movwf	_pwm_duty+1
 11891                           
 11892                           ;vcontrol.c: 334:     }
 11893  0D0C  2DDF               	goto	i1l2876
 11894  0D0D                     i1l2826:	
 11895                           
 11896                           ;vcontrol.c: 336:     {;vcontrol.c: 337:         if( vdc >= vdc_max )
 11897  0D0D  083F               	movf	_vdc_max+1,w
 11898  0D0E  023B               	subwf	_vdc+1,w
 11899  0D0F  1D03               	skipz
 11900  0D10  2D13               	goto	u142_25
 11901  0D11  083E               	movf	_vdc_max,w
 11902  0D12  023A               	subwf	_vdc,w
 11903  0D13                     u142_25:	
 11904  0D13  1C03               	skipc
 11905  0D14  2D19               	goto	i1l2830
 11906                           
 11907                           ;vcontrol.c: 338:         {;vcontrol.c: 340:             do { LATAbits.LATA4 = 1; } whil
      +                          e(0);
 11908  0D15  0022               	movlb	2	; select bank2
 11909  0D16  160C               	bsf	12,4	;volatile
 11910                           
 11911                           ;vcontrol.c: 341:             do { LATAbits.LATA5 = 0; } while(0);
 11912  0D17  128C               	bcf	12,5	;volatile
 11913  0D18  2D07               	goto	i1l2824
 11914  0D19                     i1l2830:	
 11915                           
 11916                           ;vcontrol.c: 345:         {;vcontrol.c: 346:             if( vdc >= vdc_min )
 11917  0D19  0841               	movf	_vdc_min+1,w
 11918  0D1A  023B               	subwf	_vdc+1,w
 11919  0D1B  1D03               	skipz
 11920  0D1C  2D1F               	goto	u143_25
 11921  0D1D  0840               	movf	_vdc_min,w
 11922  0D1E  023A               	subwf	_vdc,w
 11923  0D1F                     u143_25:	
 11924  0D1F  1C03               	skipc
 11925  0D20  2DB5               	goto	i1l896
 11926                           
 11927                           ;vcontrol.c: 347:             {;vcontrol.c: 348:                 do { LATAbits.LATA4 = 1
      +                          ; } while(0);
 11928  0D21  0022               	movlb	2	; select bank2
 11929  0D22  160C               	bsf	12,4	;volatile
 11930                           
 11931                           ;vcontrol.c: 349:                 do { LATAbits.LATA5 = 1; } while(0);
 11932  0D23  168C               	bsf	12,5	;volatile
 11933                           
 11934                           ;vcontrol.c: 350:                 _Bool force_inc = 1;
 11935  0D24  0020               	movlb	0	; select bank0
 11936  0D25  01C6               	clrf	ADC_VoltageControlHandler_ISR@force_inc
 11937  0D26  0AC6               	incf	ADC_VoltageControlHandler_ISR@force_inc,f
 11938                           
 11939                           ;vcontrol.c: 351:                 if( diff_positive == 1 )
 11940  0D27  032D               	decf	_diff_positive,w
 11941  0D28  1D03               	btfss	3,2
 11942  0D29  2D8C               	goto	i1l2848
 11943                           
 11944                           ;vcontrol.c: 352:                 {;vcontrol.c: 353:                     uint32_t pwm = 
      +                          (uint32_t)399 * (uint32_t)(vdc - vdc_min);
 11945  0D2A  0840               	movf	_vdc_min,w
 11946  0D2B  023A               	subwf	_vdc,w
 11947  0D2C  00F0               	movwf	___lmul@multiplier
 11948  0D2D  0841               	movf	_vdc_min+1,w
 11949  0D2E  3B3B               	subwfb	_vdc+1,w
 11950  0D2F  00F1               	movwf	___lmul@multiplier+1
 11951  0D30  01F2               	clrf	___lmul@multiplier+2
 11952  0D31  01F3               	clrf	___lmul@multiplier+3
 11953  0D32  3000               	movlw	0
 11954  0D33  00F7               	movwf	___lmul@multiplicand+3
 11955  0D34  3000               	movlw	0
 11956  0D35  00F6               	movwf	___lmul@multiplicand+2
 11957  0D36  3001               	movlw	1
 11958  0D37  00F5               	movwf	___lmul@multiplicand+1
 11959  0D38  308F               	movlw	143
 11960  0D39  00F4               	movwf	___lmul@multiplicand
 11961  0D3A  318A  2235  318C   	fcall	___lmul
 11962  0D3D  0873               	movf	?___lmul+3,w
 11963  0D3E  00CA               	movwf	ADC_VoltageControlHandler_ISR@pwm+3
 11964  0D3F  0872               	movf	?___lmul+2,w
 11965  0D40  00C9               	movwf	ADC_VoltageControlHandler_ISR@pwm+2
 11966  0D41  0871               	movf	?___lmul+1,w
 11967  0D42  00C8               	movwf	ADC_VoltageControlHandler_ISR@pwm+1
 11968  0D43  0870               	movf	?___lmul,w
 11969  0D44  00C7               	movwf	ADC_VoltageControlHandler_ISR@pwm
 11970                           
 11971                           ;vcontrol.c: 354:                     pwm /= (vdc_max - vdc_min);
 11972  0D45  0840               	movf	_vdc_min,w
 11973  0D46  023E               	subwf	_vdc_max,w
 11974  0D47  00F0               	movwf	___lldiv@divisor
 11975  0D48  0841               	movf	_vdc_min+1,w
 11976  0D49  3B3F               	subwfb	_vdc_max+1,w
 11977  0D4A  00F1               	movwf	___lldiv@divisor+1
 11978  0D4B  01F2               	clrf	___lldiv@divisor+2
 11979  0D4C  01F3               	clrf	___lldiv@divisor+3
 11980  0D4D  084A               	movf	ADC_VoltageControlHandler_ISR@pwm+3,w
 11981  0D4E  00F7               	movwf	___lldiv@dividend+3
 11982  0D4F  0849               	movf	ADC_VoltageControlHandler_ISR@pwm+2,w
 11983  0D50  00F6               	movwf	___lldiv@dividend+2
 11984  0D51  0848               	movf	ADC_VoltageControlHandler_ISR@pwm+1,w
 11985  0D52  00F5               	movwf	___lldiv@dividend+1
 11986  0D53  0847               	movf	ADC_VoltageControlHandler_ISR@pwm,w
 11987  0D54  00F4               	movwf	___lldiv@dividend
 11988  0D55  318B  2306  318C   	fcall	___lldiv
 11989  0D58  0873               	movf	?___lldiv+3,w
 11990  0D59  00CA               	movwf	ADC_VoltageControlHandler_ISR@pwm+3
 11991  0D5A  0872               	movf	?___lldiv+2,w
 11992  0D5B  00C9               	movwf	ADC_VoltageControlHandler_ISR@pwm+2
 11993  0D5C  0871               	movf	?___lldiv+1,w
 11994  0D5D  00C8               	movwf	ADC_VoltageControlHandler_ISR@pwm+1
 11995  0D5E  0870               	movf	?___lldiv,w
 11996  0D5F  00C7               	movwf	ADC_VoltageControlHandler_ISR@pwm
 11997                           
 11998                           ;vcontrol.c: 355:                     if( pwm > 399 )
 11999  0D60  084A               	movf	ADC_VoltageControlHandler_ISR@pwm+3,w
 12000  0D61  1D03               	btfss	3,2
 12001  0D62  2D6C               	goto	i1l2838
 12002  0D63  0849               	movf	ADC_VoltageControlHandler_ISR@pwm+2,w
 12003  0D64  1D03               	btfss	3,2
 12004  0D65  2D6C               	goto	i1l2838
 12005  0D66  3090               	movlw	144
 12006  0D67  0247               	subwf	ADC_VoltageControlHandler_ISR@pwm,w
 12007  0D68  3001               	movlw	1
 12008  0D69  3B48               	subwfb	ADC_VoltageControlHandler_ISR@pwm+1,w
 12009  0D6A  1C03               	btfss	3,0
 12010  0D6B  2D71               	goto	i1l2842
 12011  0D6C                     i1l2838:	
 12012                           
 12013                           ;vcontrol.c: 356:                     {;vcontrol.c: 357:                         pwm_dut
      +                          y = 399;
 12014  0D6C  308F               	movlw	143
 12015  0D6D  00A4               	movwf	_pwm_duty
 12016  0D6E  3001               	movlw	1
 12017  0D6F  00A5               	movwf	_pwm_duty+1
 12018                           
 12019                           ;vcontrol.c: 359:                     }
 12020  0D70  2D8B               	goto	i1l2840
 12021  0D71                     i1l2842:	
 12022                           
 12023                           ;vcontrol.c: 361:                     {;vcontrol.c: 362:                         if( pwm
      +                          _duty < pwm )
 12024  0D71  0824               	movf	_pwm_duty,w
 12025  0D72  00C2               	movwf	??_ADC_VoltageControlHandler_ISR
 12026  0D73  0825               	movf	_pwm_duty+1,w
 12027  0D74  00C3               	movwf	??_ADC_VoltageControlHandler_ISR+1
 12028  0D75  01C4               	clrf	??_ADC_VoltageControlHandler_ISR+2
 12029  0D76  01C5               	clrf	??_ADC_VoltageControlHandler_ISR+3
 12030  0D77  084A               	movf	ADC_VoltageControlHandler_ISR@pwm+3,w
 12031  0D78  0245               	subwf	??_ADC_VoltageControlHandler_ISR+3,w
 12032  0D79  1D03               	skipz
 12033  0D7A  2D85               	goto	u146_25
 12034  0D7B  0849               	movf	ADC_VoltageControlHandler_ISR@pwm+2,w
 12035  0D7C  0244               	subwf	??_ADC_VoltageControlHandler_ISR+2,w
 12036  0D7D  1D03               	skipz
 12037  0D7E  2D85               	goto	u146_25
 12038  0D7F  0848               	movf	ADC_VoltageControlHandler_ISR@pwm+1,w
 12039  0D80  0243               	subwf	??_ADC_VoltageControlHandler_ISR+1,w
 12040  0D81  1D03               	skipz
 12041  0D82  2D85               	goto	u146_25
 12042  0D83  0847               	movf	ADC_VoltageControlHandler_ISR@pwm,w
 12043  0D84  0242               	subwf	??_ADC_VoltageControlHandler_ISR,w
 12044  0D85                     u146_25:	
 12045  0D85  1803               	skipnc
 12046  0D86  2D8C               	goto	i1l2848
 12047                           
 12048                           ;vcontrol.c: 363:                         {;vcontrol.c: 364:                            
      +                           pwm_duty = pwm;
 12049  0D87  0848               	movf	ADC_VoltageControlHandler_ISR@pwm+1,w
 12050  0D88  00A5               	movwf	_pwm_duty+1
 12051  0D89  0847               	movf	ADC_VoltageControlHandler_ISR@pwm,w
 12052  0D8A  00A4               	movwf	_pwm_duty
 12053  0D8B                     i1l2840:	
 12054                           
 12055                           ;vcontrol.c: 358:                         force_inc = 0;
 12056  0D8B  01C6               	clrf	ADC_VoltageControlHandler_ISR@force_inc
 12057  0D8C                     i1l2848:	
 12058                           
 12059                           ;vcontrol.c: 369:                 if( force_inc == 1 )
 12060  0D8C  0346               	decf	ADC_VoltageControlHandler_ISR@force_inc,w
 12061  0D8D  1D03               	btfss	3,2
 12062  0D8E  2DB1               	goto	i1l2862
 12063                           
 12064                           ;vcontrol.c: 370:                 {;vcontrol.c: 371:                     if( duty_count_
      +                          up >= duty_count_up_max )
 12065  0D8F  0021               	movlb	1	; select bank1
 12066  0D90  086D               	movf	(_duty_count_up_max+1)^(0+128),w
 12067  0D91  0263               	subwf	(_duty_count_up+1)^(0+128),w
 12068  0D92  1D03               	skipz
 12069  0D93  2D96               	goto	u148_25
 12070  0D94  086C               	movf	_duty_count_up_max^(0+128),w
 12071  0D95  0262               	subwf	_duty_count_up^(0+128),w
 12072  0D96                     u148_25:	
 12073  0D96  1C03               	skipc
 12074  0D97  2DAD               	goto	i1l2860
 12075                           
 12076                           ;vcontrol.c: 372:                     {;vcontrol.c: 373:                         duty_co
      +                          unt_up = 0;
 12077  0D98  01E2               	clrf	_duty_count_up^(0+128)
 12078  0D99  01E3               	clrf	(_duty_count_up+1)^(0+128)
 12079                           
 12080                           ;vcontrol.c: 374:                         pwm_duty += duty_pwm_inc;
 12081  0D9A  086E               	movf	_duty_pwm_inc^(0+128),w
 12082  0D9B  0020               	movlb	0	; select bank0
 12083  0D9C  07A4               	addwf	_pwm_duty,f
 12084  0D9D  0021               	movlb	1	; select bank1
 12085  0D9E  086F               	movf	(_duty_pwm_inc+1)^(0+128),w
 12086  0D9F  0020               	movlb	0	; select bank0
 12087  0DA0  3DA5               	addwfc	_pwm_duty+1,f
 12088                           
 12089                           ;vcontrol.c: 375:                         if( pwm_duty > 399 )
 12090  0DA1  3001               	movlw	1
 12091  0DA2  0225               	subwf	_pwm_duty+1,w
 12092  0DA3  3090               	movlw	144
 12093  0DA4  1903               	skipnz
 12094  0DA5  0224               	subwf	_pwm_duty,w
 12095  0DA6  1C03               	skipc
 12096  0DA7  2DB1               	goto	i1l2862
 12097                           
 12098                           ;vcontrol.c: 376:                             pwm_duty = 399;
 12099  0DA8  308F               	movlw	143
 12100  0DA9  00A4               	movwf	_pwm_duty
 12101  0DAA  3001               	movlw	1
 12102  0DAB  00A5               	movwf	_pwm_duty+1
 12103  0DAC  2DB1               	goto	i1l2862
 12104  0DAD                     i1l2860:	
 12105                           
 12106                           ;vcontrol.c: 379:                         duty_count_up++;
 12107  0DAD  3001               	movlw	1
 12108  0DAE  07E2               	addwf	_duty_count_up^(0+128),f
 12109  0DAF  3000               	movlw	0
 12110  0DB0  3DE3               	addwfc	(_duty_count_up+1)^(0+128),f
 12111  0DB1                     i1l2862:	
 12112                           
 12113                           ;vcontrol.c: 381:                 duty_count_down = 0;
 12114  0DB1  0021               	movlb	1	; select bank1
 12115  0DB2  01E0               	clrf	_duty_count_down^(0+128)
 12116  0DB3  01E1               	clrf	(_duty_count_down+1)^(0+128)
 12117                           
 12118                           ;vcontrol.c: 382:             }
 12119  0DB4  2DDF               	goto	i1l2876
 12120  0DB5                     i1l896:	
 12121                           ;vcontrol.c: 384:             {;vcontrol.c: 385:                 do { LATAbits.LATA4 = 0
      +                          ; } while(0);
 12122                           
 12123  0DB5  0022               	movlb	2	; select bank2
 12124  0DB6  120C               	bcf	12,4	;volatile
 12125                           
 12126                           ;vcontrol.c: 386:                 do { LATAbits.LATA5 = 1; } while(0);
 12127  0DB7  168C               	bsf	12,5	;volatile
 12128                           
 12129                           ;vcontrol.c: 387:                 if( duty_count_down >= duty_count_down_max )
 12130  0DB8  0021               	movlb	1	; select bank1
 12131  0DB9  0869               	movf	(_duty_count_down_max+1)^(0+128),w
 12132  0DBA  0261               	subwf	(_duty_count_down+1)^(0+128),w
 12133  0DBB  1D03               	skipz
 12134  0DBC  2DBF               	goto	u150_25
 12135  0DBD  0868               	movf	_duty_count_down_max^(0+128),w
 12136  0DBE  0260               	subwf	_duty_count_down^(0+128),w
 12137  0DBF                     u150_25:	
 12138  0DBF  1C03               	skipc
 12139  0DC0  2DDB               	goto	i1l2874
 12140                           
 12141                           ;vcontrol.c: 388:                 {;vcontrol.c: 389:                     duty_count_down
      +                           = 0;
 12142  0DC1  01E0               	clrf	_duty_count_down^(0+128)
 12143  0DC2  01E1               	clrf	(_duty_count_down+1)^(0+128)
 12144                           
 12145                           ;vcontrol.c: 390:                     if( pwm_duty > duty_pwm_dec )
 12146  0DC3  0020               	movlb	0	; select bank0
 12147  0DC4  0825               	movf	_pwm_duty+1,w
 12148  0DC5  0021               	movlb	1	; select bank1
 12149  0DC6  026B               	subwf	(_duty_pwm_dec+1)^(0+128),w
 12150  0DC7  1D03               	skipz
 12151  0DC8  2DCD               	goto	u151_25
 12152  0DC9  0020               	movlb	0	; select bank0
 12153  0DCA  0824               	movf	_pwm_duty,w
 12154  0DCB  0021               	movlb	1	; select bank1
 12155  0DCC  026A               	subwf	_duty_pwm_dec^(0+128),w
 12156  0DCD                     u151_25:	
 12157  0DCD  1803               	skipnc
 12158  0DCE  2DD7               	goto	i1l2872
 12159                           
 12160                           ;vcontrol.c: 391:                         pwm_duty -= duty_pwm_dec;
 12161  0DCF  086A               	movf	_duty_pwm_dec^(0+128),w
 12162  0DD0  0020               	movlb	0	; select bank0
 12163  0DD1  02A4               	subwf	_pwm_duty,f
 12164  0DD2  0021               	movlb	1	; select bank1
 12165  0DD3  086B               	movf	(_duty_pwm_dec+1)^(0+128),w
 12166  0DD4  0020               	movlb	0	; select bank0
 12167  0DD5  3BA5               	subwfb	_pwm_duty+1,f
 12168  0DD6  2DDF               	goto	i1l2876
 12169  0DD7                     i1l2872:	
 12170                           
 12171                           ;vcontrol.c: 393:                         pwm_duty = 0;
 12172  0DD7  0020               	movlb	0	; select bank0
 12173  0DD8  01A4               	clrf	_pwm_duty
 12174  0DD9  01A5               	clrf	_pwm_duty+1
 12175  0DDA  2DDF               	goto	i1l2876
 12176  0DDB                     i1l2874:	
 12177                           
 12178                           ;vcontrol.c: 396:                     duty_count_down++;
 12179  0DDB  3001               	movlw	1
 12180  0DDC  07E0               	addwf	_duty_count_down^(0+128),f
 12181  0DDD  3000               	movlw	0
 12182  0DDE  3DE1               	addwfc	(_duty_count_down+1)^(0+128),f
 12183  0DDF                     i1l2876:	
 12184                           
 12185                           ;vcontrol.c: 402:     LoadDutyValue( pwm_duty );
 12186  0DDF  0020               	movlb	0	; select bank0
 12187  0DE0  0825               	movf	_pwm_duty+1,w
 12188  0DE1  00F1               	movwf	LoadDutyValue@duty+1
 12189  0DE2  0824               	movf	_pwm_duty,w
 12190  0DE3  00F0               	movwf	LoadDutyValue@duty
 12191  0DE4  3196  26F8         	fcall	_LoadDutyValue
 12192  0DE6  0008               	return
 12193  0DE7                     __end_of_ADC_VoltageControlHandler_ISR:	
 12194                           
 12195                           	psect	text61
 12196  0A35                     __ptext61:	
 12197 ;; *************** function ___lmul *****************
 12198 ;; Defined at:
 12199 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul32.c"
 12200 ;; Parameters:    Size  Location     Type
 12201 ;;  multiplier      4    0[COMMON] unsigned long 
 12202 ;;  multiplicand    4    4[COMMON] unsigned long 
 12203 ;; Auto vars:     Size  Location     Type
 12204 ;;  product         4    8[COMMON] unsigned long 
 12205 ;; Return value:  Size  Location     Type
 12206 ;;                  4    0[COMMON] unsigned long 
 12207 ;; Registers used:
 12208 ;;		wreg, status,2, status,0
 12209 ;; Tracked objects:
 12210 ;;		On entry : 1F/0
 12211 ;;		On exit  : 1F/0
 12212 ;;		Unchanged: 1F/0
 12213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12214 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12215 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12217 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12218 ;;Total ram usage:       12 bytes
 12219 ;; Hardware stack levels used:    1
 12220 ;; This function calls:
 12221 ;;		Nothing
 12222 ;; This function is called by:
 12223 ;;		_ADC_VoltageControlHandler_ISR
 12224 ;; This function uses a non-reentrant model
 12225 ;;
 12226                           
 12227                           
 12228                           ;psect for function ___lmul
 12229  0A35                     ___lmul:	
 12230                           
 12231                           ;incstack = 0
 12232                           ; Regs used in ___lmul: [wreg+status,2+status,0]
 12233  0A35  3000               	movlw	0
 12234  0A36  00FB               	movwf	___lmul@product+3
 12235  0A37  3000               	movlw	0
 12236  0A38  00FA               	movwf	___lmul@product+2
 12237  0A39  3000               	movlw	0
 12238  0A3A  00F9               	movwf	___lmul@product+1
 12239  0A3B  3000               	movlw	0
 12240  0A3C  00F8               	movwf	___lmul@product
 12241  0A3D                     i1l2552:	
 12242  0A3D  1C70               	btfss	___lmul@multiplier,0
 12243  0A3E  2A47               	goto	i1l2556
 12244  0A3F  0874               	movf	___lmul@multiplicand,w
 12245  0A40  07F8               	addwf	___lmul@product,f
 12246  0A41  0875               	movf	___lmul@multiplicand+1,w
 12247  0A42  3DF9               	addwfc	___lmul@product+1,f
 12248  0A43  0876               	movf	___lmul@multiplicand+2,w
 12249  0A44  3DFA               	addwfc	___lmul@product+2,f
 12250  0A45  0877               	movf	___lmul@multiplicand+3,w
 12251  0A46  3DFB               	addwfc	___lmul@product+3,f
 12252  0A47                     i1l2556:	
 12253  0A47  3001               	movlw	1
 12254  0A48                     u120_25:	
 12255  0A48  35F4               	lslf	___lmul@multiplicand,f
 12256  0A49  0DF5               	rlf	___lmul@multiplicand+1,f
 12257  0A4A  0DF6               	rlf	___lmul@multiplicand+2,f
 12258  0A4B  0DF7               	rlf	___lmul@multiplicand+3,f
 12259  0A4C  0B89               	decfsz	9,f
 12260  0A4D  2A48               	goto	u120_25
 12261  0A4E  3001               	movlw	1
 12262  0A4F                     u121_25:	
 12263  0A4F  36F3               	lsrf	___lmul@multiplier+3,f
 12264  0A50  0CF2               	rrf	___lmul@multiplier+2,f
 12265  0A51  0CF1               	rrf	___lmul@multiplier+1,f
 12266  0A52  0CF0               	rrf	___lmul@multiplier,f
 12267  0A53  0B89               	decfsz	9,f
 12268  0A54  2A4F               	goto	u121_25
 12269  0A55  0873               	movf	___lmul@multiplier+3,w
 12270  0A56  0472               	iorwf	___lmul@multiplier+2,w
 12271  0A57  0471               	iorwf	___lmul@multiplier+1,w
 12272  0A58  0470               	iorwf	___lmul@multiplier,w
 12273  0A59  1D03               	skipz
 12274  0A5A  2A3D               	goto	i1l2552
 12275  0A5B  087B               	movf	___lmul@product+3,w
 12276  0A5C  00F3               	movwf	?___lmul+3
 12277  0A5D  087A               	movf	___lmul@product+2,w
 12278  0A5E  00F2               	movwf	?___lmul+2
 12279  0A5F  0879               	movf	___lmul@product+1,w
 12280  0A60  00F1               	movwf	?___lmul+1
 12281  0A61  0878               	movf	___lmul@product,w
 12282  0A62  00F0               	movwf	?___lmul
 12283  0A63  0008               	return
 12284  0A64                     __end_of___lmul:	
 12285                           
 12286                           	psect	text62
 12287  0B06                     __ptext62:	
 12288 ;; *************** function ___lldiv *****************
 12289 ;; Defined at:
 12290 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\__lldiv.c"
 12291 ;; Parameters:    Size  Location     Type
 12292 ;;  divisor         4    0[COMMON] unsigned long 
 12293 ;;  dividend        4    4[COMMON] unsigned long 
 12294 ;; Auto vars:     Size  Location     Type
 12295 ;;  quotient        4    9[COMMON] unsigned long 
 12296 ;;  counter         1   13[COMMON] unsigned char 
 12297 ;; Return value:  Size  Location     Type
 12298 ;;                  4    0[COMMON] unsigned long 
 12299 ;; Registers used:
 12300 ;;		wreg, status,2, status,0
 12301 ;; Tracked objects:
 12302 ;;		On entry : 1F/0
 12303 ;;		On exit  : 1F/0
 12304 ;;		Unchanged: 1F/0
 12305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12306 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12307 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12308 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12309 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12310 ;;Total ram usage:       14 bytes
 12311 ;; Hardware stack levels used:    1
 12312 ;; This function calls:
 12313 ;;		Nothing
 12314 ;; This function is called by:
 12315 ;;		_ADC_VoltageControlHandler_ISR
 12316 ;; This function uses a non-reentrant model
 12317 ;;
 12318                           
 12319                           
 12320                           ;psect for function ___lldiv
 12321  0B06                     ___lldiv:	
 12322                           
 12323                           ;incstack = 0
 12324                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
 12325  0B06  3000               	movlw	0
 12326  0B07  00FC               	movwf	___lldiv@quotient+3
 12327  0B08  3000               	movlw	0
 12328  0B09  00FB               	movwf	___lldiv@quotient+2
 12329  0B0A  3000               	movlw	0
 12330  0B0B  00FA               	movwf	___lldiv@quotient+1
 12331  0B0C  3000               	movlw	0
 12332  0B0D  00F9               	movwf	___lldiv@quotient
 12333  0B0E  0873               	movf	___lldiv@divisor+3,w
 12334  0B0F  0472               	iorwf	___lldiv@divisor+2,w
 12335  0B10  0471               	iorwf	___lldiv@divisor+1,w
 12336  0B11  0470               	iorwf	___lldiv@divisor,w
 12337  0B12  1903               	skipnz
 12338  0B13  2B4F               	goto	i1l2584
 12339  0B14  01FD               	clrf	___lldiv@counter
 12340  0B15  0AFD               	incf	___lldiv@counter,f
 12341  0B16                     i1l2570:	
 12342  0B16  1BF3               	btfsc	___lldiv@divisor+3,7
 12343  0B17  2B24               	goto	i1l2572
 12344  0B18  3001               	movlw	1
 12345  0B19                     u124_25:	
 12346  0B19  35F0               	lslf	___lldiv@divisor,f
 12347  0B1A  0DF1               	rlf	___lldiv@divisor+1,f
 12348  0B1B  0DF2               	rlf	___lldiv@divisor+2,f
 12349  0B1C  0DF3               	rlf	___lldiv@divisor+3,f
 12350  0B1D  0B89               	decfsz	9,f
 12351  0B1E  2B19               	goto	u124_25
 12352  0B1F  3001               	movlw	1
 12353  0B20  00F8               	movwf	??___lldiv
 12354  0B21  0878               	movf	??___lldiv,w
 12355  0B22  07FD               	addwf	___lldiv@counter,f
 12356  0B23  2B16               	goto	i1l2570
 12357  0B24                     i1l2572:	
 12358  0B24  3001               	movlw	1
 12359  0B25                     u126_25:	
 12360  0B25  35F9               	lslf	___lldiv@quotient,f
 12361  0B26  0DFA               	rlf	___lldiv@quotient+1,f
 12362  0B27  0DFB               	rlf	___lldiv@quotient+2,f
 12363  0B28  0DFC               	rlf	___lldiv@quotient+3,f
 12364  0B29  0B89               	decfsz	9,f
 12365  0B2A  2B25               	goto	u126_25
 12366  0B2B  0873               	movf	___lldiv@divisor+3,w
 12367  0B2C  0277               	subwf	___lldiv@dividend+3,w
 12368  0B2D  1D03               	skipz
 12369  0B2E  2B39               	goto	u127_25
 12370  0B2F  0872               	movf	___lldiv@divisor+2,w
 12371  0B30  0276               	subwf	___lldiv@dividend+2,w
 12372  0B31  1D03               	skipz
 12373  0B32  2B39               	goto	u127_25
 12374  0B33  0871               	movf	___lldiv@divisor+1,w
 12375  0B34  0275               	subwf	___lldiv@dividend+1,w
 12376  0B35  1D03               	skipz
 12377  0B36  2B39               	goto	u127_25
 12378  0B37  0870               	movf	___lldiv@divisor,w
 12379  0B38  0274               	subwf	___lldiv@dividend,w
 12380  0B39                     u127_25:	
 12381  0B39  1C03               	skipc
 12382  0B3A  2B44               	goto	i1l2580
 12383  0B3B  0870               	movf	___lldiv@divisor,w
 12384  0B3C  02F4               	subwf	___lldiv@dividend,f
 12385  0B3D  0871               	movf	___lldiv@divisor+1,w
 12386  0B3E  3BF5               	subwfb	___lldiv@dividend+1,f
 12387  0B3F  0872               	movf	___lldiv@divisor+2,w
 12388  0B40  3BF6               	subwfb	___lldiv@dividend+2,f
 12389  0B41  0873               	movf	___lldiv@divisor+3,w
 12390  0B42  3BF7               	subwfb	___lldiv@dividend+3,f
 12391  0B43  1479               	bsf	___lldiv@quotient,0
 12392  0B44                     i1l2580:	
 12393  0B44  3001               	movlw	1
 12394  0B45                     u128_25:	
 12395  0B45  36F3               	lsrf	___lldiv@divisor+3,f
 12396  0B46  0CF2               	rrf	___lldiv@divisor+2,f
 12397  0B47  0CF1               	rrf	___lldiv@divisor+1,f
 12398  0B48  0CF0               	rrf	___lldiv@divisor,f
 12399  0B49  0B89               	decfsz	9,f
 12400  0B4A  2B45               	goto	u128_25
 12401  0B4B  3001               	movlw	1
 12402  0B4C  02FD               	subwf	___lldiv@counter,f
 12403  0B4D  1D03               	btfss	3,2
 12404  0B4E  2B24               	goto	i1l2572
 12405  0B4F                     i1l2584:	
 12406  0B4F  087C               	movf	___lldiv@quotient+3,w
 12407  0B50  00F3               	movwf	?___lldiv+3
 12408  0B51  087B               	movf	___lldiv@quotient+2,w
 12409  0B52  00F2               	movwf	?___lldiv+2
 12410  0B53  087A               	movf	___lldiv@quotient+1,w
 12411  0B54  00F1               	movwf	?___lldiv+1
 12412  0B55  0879               	movf	___lldiv@quotient,w
 12413  0B56  00F0               	movwf	?___lldiv
 12414  0B57  0008               	return
 12415  0B58                     __end_of___lldiv:	
 12416                           
 12417                           	psect	text63
 12418  08A4                     __ptext63:	
 12419 ;; *************** function _PWM3_LoadDutyValue *****************
 12420 ;; Defined at:
 12421 ;;		line 74 in file "mcc_generated_files/pwm3.c"
 12422 ;; Parameters:    Size  Location     Type
 12423 ;;  dutyValue       2    0[COMMON] unsigned short 
 12424 ;; Auto vars:     Size  Location     Type
 12425 ;;		None
 12426 ;; Return value:  Size  Location     Type
 12427 ;;                  1    wreg      void 
 12428 ;; Registers used:
 12429 ;;		wreg, status,2, status,0
 12430 ;; Tracked objects:
 12431 ;;		On entry : 1F/0
 12432 ;;		On exit  : 1F/C
 12433 ;;		Unchanged: 0/0
 12434 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12435 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12436 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12437 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12438 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12439 ;;Total ram usage:        4 bytes
 12440 ;; Hardware stack levels used:    1
 12441 ;; This function calls:
 12442 ;;		Nothing
 12443 ;; This function is called by:
 12444 ;;		_ADC_VoltageControlHandler_ISR
 12445 ;;		_TMR2_DutyControlHandler_ISR
 12446 ;; This function uses a non-reentrant model
 12447 ;;
 12448                           
 12449                           
 12450                           ;psect for function _PWM3_LoadDutyValue
 12451  08A4                     _PWM3_LoadDutyValue:	
 12452                           
 12453                           ;mcc_generated_files/pwm3.c: 74:  void PWM3_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm3.c: 75:  {;mcc_generated_files/pwm3.c: 77:      PWM3DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 12454                           
 12455                           ;incstack = 0
 12456                           ; Regs used in _PWM3_LoadDutyValue: [wreg+status,2+status,0]
 12457  08A4  0871               	movf	PWM3_LoadDutyValue@dutyValue+1,w
 12458  08A5  00F3               	movwf	??_PWM3_LoadDutyValue+1
 12459  08A6  0870               	movf	PWM3_LoadDutyValue@dutyValue,w
 12460  08A7  00F2               	movwf	??_PWM3_LoadDutyValue
 12461  08A8  36F3               	lsrf	??_PWM3_LoadDutyValue+1,f
 12462  08A9  0CF2               	rrf	??_PWM3_LoadDutyValue,f
 12463  08AA  36F3               	lsrf	??_PWM3_LoadDutyValue+1,f
 12464  08AB  0CF2               	rrf	??_PWM3_LoadDutyValue,f
 12465  08AC  0872               	movf	??_PWM3_LoadDutyValue,w
 12466  08AD  002C               	movlb	12	; select bank12
 12467  08AE  0098               	movwf	24	;volatile
 12468                           
 12469                           ;mcc_generated_files/pwm3.c: 80:      PWM3DCL = (dutyValue & 0x0003)<<6;
 12470  08AF  0870               	movf	PWM3_LoadDutyValue@dutyValue,w
 12471  08B0  3903               	andlw	3
 12472  08B1  00F2               	movwf	??_PWM3_LoadDutyValue
 12473  08B2  3005               	movlw	5
 12474  08B3                     u100_25:	
 12475  08B3  35F2               	lslf	??_PWM3_LoadDutyValue,f
 12476  08B4  3EFF               	addlw	-1
 12477  08B5  1D03               	skipz
 12478  08B6  28B3               	goto	u100_25
 12479  08B7  3572               	lslf	??_PWM3_LoadDutyValue,w
 12480  08B8  0097               	movwf	23	;volatile
 12481  08B9  0008               	return
 12482  08BA                     __end_of_PWM3_LoadDutyValue:	
 12483                           
 12484                           	psect	text64
 12485  16F8                     __ptext64:	
 12486 ;; *************** function _LoadDutyValue *****************
 12487 ;; Defined at:
 12488 ;;		line 198 in file "vcontrol.c"
 12489 ;; Parameters:    Size  Location     Type
 12490 ;;  duty            2    0[COMMON] unsigned short 
 12491 ;; Auto vars:     Size  Location     Type
 12492 ;;		None
 12493 ;; Return value:  Size  Location     Type
 12494 ;;                  1    wreg      void 
 12495 ;; Registers used:
 12496 ;;		wreg
 12497 ;; Tracked objects:
 12498 ;;		On entry : 1F/0
 12499 ;;		On exit  : 1F/0
 12500 ;;		Unchanged: 0/0
 12501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12502 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12503 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12505 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12506 ;;Total ram usage:        2 bytes
 12507 ;; Hardware stack levels used:    1
 12508 ;; This function calls:
 12509 ;;		Nothing
 12510 ;; This function is called by:
 12511 ;;		_ADC_VoltageControlHandler_ISR
 12512 ;; This function uses a non-reentrant model
 12513 ;;
 12514                           
 12515                           
 12516                           ;psect for function _LoadDutyValue
 12517  16F8                     _LoadDutyValue:	
 12518                           
 12519                           ;vcontrol.c: 198: static void LoadDutyValue(uint16_t duty);vcontrol.c: 199: {;vcontrol.c
      +                          : 200:     target_duty = duty;
 12520                           
 12521                           ;incstack = 0
 12522                           ; Regs used in _LoadDutyValue: [wreg]
 12523  16F8  0871               	movf	LoadDutyValue@duty+1,w
 12524  16F9  00A3               	movwf	_target_duty+1
 12525  16FA  0870               	movf	LoadDutyValue@duty,w
 12526  16FB  00A2               	movwf	_target_duty
 12527  16FC  0008               	return
 12528  16FD                     __end_of_LoadDutyValue:	
 12529                           
 12530                           	psect	text65
 12531  16F3                     __ptext65:	
 12532 ;; *************** function _ADC_GetConversionResult *****************
 12533 ;; Defined at:
 12534 ;;		line 114 in file "mcc_generated_files/adc.c"
 12535 ;; Parameters:    Size  Location     Type
 12536 ;;		None
 12537 ;; Auto vars:     Size  Location     Type
 12538 ;;		None
 12539 ;; Return value:  Size  Location     Type
 12540 ;;                  2    0[COMMON] unsigned short 
 12541 ;; Registers used:
 12542 ;;		wreg
 12543 ;; Tracked objects:
 12544 ;;		On entry : 1F/1
 12545 ;;		On exit  : 1F/1
 12546 ;;		Unchanged: 0/0
 12547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12548 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12549 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12551 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12552 ;;Total ram usage:        2 bytes
 12553 ;; Hardware stack levels used:    1
 12554 ;; This function calls:
 12555 ;;		Nothing
 12556 ;; This function is called by:
 12557 ;;		_ADC_VoltageControlHandler_ISR
 12558 ;; This function uses a non-reentrant model
 12559 ;;
 12560                           
 12561                           
 12562                           ;psect for function _ADC_GetConversionResult
 12563  16F3                     _ADC_GetConversionResult:	
 12564                           
 12565                           ;mcc_generated_files/adc.c: 117:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
 12566                           
 12567                           ;incstack = 0
 12568                           ; Regs used in _ADC_GetConversionResult: [wreg]
 12569  16F3  081C               	movf	28,w	;volatile
 12570  16F4  00F1               	movwf	?_ADC_GetConversionResult+1
 12571  16F5  081B               	movf	27,w	;volatile
 12572  16F6  00F0               	movwf	?_ADC_GetConversionResult
 12573  16F7  0008               	return
 12574  16F8                     __end_of_ADC_GetConversionResult:	
 12575  007E                     btemp	set	126	;btemp
 12576  007E                     int$flags	set	126
 12577  007E                     wtemp0	set	126


Data Sizes:
    Strings     300
    Constant    2092
    Data        12
    BSS         121
    Persistent  48
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     31      69
    BANK1            80     64      80
    BANK2            80      0      79
    BANK3            80     10      26
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    set_vdc_threshold@v_target	PTR unsigned short  size(1) Largest target is 2
		 -> vdc_critic(BANK0[2]), vdc_max(BANK0[2]), vdc_min(BANK0[2]), 

    tx_string	PTR const unsigned char  size(2) Largest target is 34
		 -> STR_20(CODE[25]), STR_19(CODE[25]), STR_18(CODE[22]), STR_17(CODE[24]), 
		 -> STR_16(CODE[23]), STR_15(CODE[22]), STR_14(CODE[34]), STR_13(CODE[15]), 
		 -> STR_12(CODE[16]), STR_11(CODE[18]), STR_10(CODE[23]), STR_9(CODE[5]), 
		 -> STR_8(CODE[25]), STR_7(CODE[3]), STR_6(CODE[6]), STR_5(CODE[3]), 
		 -> STR_4(CODE[6]), STR_3(CODE[3]), num_buffer(BANK2[5]), STR_2(CODE[6]), 
		 -> STR_1(CODE[5]), NULL(NULL[0]), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_SystemTimer_ISR(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_SystemTimer_ISR(), TMR1_DefaultInterruptHandler(), Absolute function(), 

    ADC_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_VoltageControlHandler_ISR(), ADC_DefaultInterruptHandler(), 

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_VoltageControlHandler_ISR(), ADC_DefaultInterruptHandler(), Absolute function(), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DutyControlHandler_ISR(), TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DutyControlHandler_ISR(), Absolute function(), TMR2_DefaultInterruptHandler(), 

    FLASH_WriteBlock@flashWordArray	PTR unsigned short  size(1) Largest target is 64
		 -> save_to_flash@buff(BANK1[64]), 

    EUSART_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_CommandHandler_ISR(), EUSART_Receive_ISR(), 

    EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_CommandHandler_ISR(), Absolute function(), EUSART_Receive_ISR(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultOverrunErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR2_CallBack->_TMR2_DutyControlHandler_ISR
    _TMR2_DutyControlHandler_ISR->_PWM3_LoadDutyValue
    _TMR1_ISR->_TMR1_WriteTimer
    _TMR1_CallBack->_TMR1_SystemTimer_ISR
    _EUSART_Receive_ISR->_EUSART_RxDataHandler
    _EUSART_DefaultErrorHandler->_EUSART_RxDataHandler
    _ADC_VoltageControlHandler_ISR->___lldiv

Critical Paths under _main in BANK0

    _main->_uart_task
    _uart_task->_save_to_flash
    _start_chopper->_init_chopper
    _init_chopper->_ADC_SelectChannel
    _init_chopper->_ADC_SetInterruptHandler
    _init_chopper->_TMR2_SetInterruptHandler
    _set_vdc_min->_set_vdc_threshold
    _set_vdc_max->_set_vdc_threshold
    _set_vdc_critic->_set_vdc_threshold
    _save_to_flash->_FLASH_WriteBlock
    _FLASH_WriteBlock->_FLASH_EraseBlock
    _get_vdc_speed->___wmul
    _uart_start->_EUSART_SetRxInterruptHandler
    _uart_start->_TMR1_SetInterruptHandler
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _EUSART_Initialize->_EUSART_SetRxInterruptHandler
    _ADC_Initialize->_ADC_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _ADC_ISR->_ADC_VoltageControlHandler_ISR

Critical Paths under _main in BANK1

    _uart_task->_save_to_flash

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    _main->_uart_task

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   12613
                                             27 BANK0      4     4      0
                     _FLASH_ReadWord
                  _SYSTEM_Initialize
                       _init_chopper
                     _set_vdc_critic
                        _set_vdc_max
                        _set_vdc_min
                      _set_vdc_speed
                      _start_chopper
                         _uart_start
                          _uart_task
 ---------------------------------------------------------------------------------
 (1) _uart_task                                           14    14      0    6185
                                             23 BANK0      4     4      0
                                              0 BANK3     10    10      0
                            _get_vdc
                     _get_vdc_critic
                        _get_vdc_max
                        _get_vdc_min
                      _get_vdc_speed
                  _is_chopper_active
                      _save_to_flash
                     _set_vdc_critic
                        _set_vdc_max
                        _set_vdc_min
                      _set_vdc_speed
                      _start_chopper
                       _stop_chopper
 ---------------------------------------------------------------------------------
 (2) _stop_chopper                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _start_chopper                                        0     0      0     453
                       _init_chopper
 ---------------------------------------------------------------------------------
 (3) _init_chopper                                         1     1      0     453
                                             11 BANK0      1     1      0
                  _ADC_SelectChannel
            _ADC_SetInterruptHandler
                _ADC_StartConversion
           _TMR2_SetInterruptHandler
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (4) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ADC_StartConversion                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ADC_SelectChannel                                    2     2      0      31
                                              9 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _set_vdc_speed                                        2     0      2     273
                                              9 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _set_vdc_min                                          3     1      2     906
                                             12 BANK0      3     1      2
                  _set_vdc_threshold
 ---------------------------------------------------------------------------------
 (2) _set_vdc_max                                          3     1      2     906
                                             12 BANK0      3     1      2
                  _set_vdc_threshold
 ---------------------------------------------------------------------------------
 (2) _set_vdc_critic                                       3     1      2     906
                                             12 BANK0      3     1      2
                  _set_vdc_threshold
 ---------------------------------------------------------------------------------
 (3) _set_vdc_threshold                                    3     0      3     695
                                              9 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) _save_to_flash                                       65    65      0    1152
                                             22 BANK0      1     1      0
                                              0 BANK1     64    64      0
                   _FLASH_WriteBlock
 ---------------------------------------------------------------------------------
 (3) _FLASH_WriteBlock                                    10     7      3     961
                                             12 BANK0     10     7      3
                   _FLASH_EraseBlock
 ---------------------------------------------------------------------------------
 (4) _FLASH_EraseBlock                                     3     1      2     189
                                              9 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _is_chopper_active                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _get_vdc_speed                                        2     0      2     736
                                             15 BANK0      2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     736
                                              9 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _get_vdc_min                                          2     0      2       0
                                              9 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _get_vdc_max                                          2     0      2       0
                                              9 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _get_vdc_critic                                       2     0      2       0
                                              9 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _get_vdc                                              2     0      2       0
                                              9 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _uart_start                                           0     0      0     474
       _EUSART_SetRxInterruptHandler
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1190
                     _ADC_Initialize
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM3_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                    _TMR4_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0     211
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (4) _TMR2_SetInterruptHandler                             2     0      2     211
                                              9 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     237
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR1_SetInterruptHandler                             2     0      2     237
                                              9 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PWM3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     531
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _EUSART_SetRxInterruptHandler                         2     0      2     237
                                              9 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              9 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              9 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              9 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0     211
            _ADC_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (4) _ADC_SetInterruptHandler                              2     0      2     211
                                              9 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _FLASH_ReadWord                                       3     1      2     511
                                              9 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_InterruptManager                           0     0      0    1415
                   Absolute function *
                            _ADC_ISR
          _EUSART_CommandHandler_ISR *
                 _EUSART_Receive_ISR *
                           _TMR1_ISR
                           _TMR2_ISR
 ---------------------------------------------------------------------------------
 (6) _TMR2_ISR                                             0     0      0     196
                      _TMR2_CallBack
 ---------------------------------------------------------------------------------
 (7) _TMR2_CallBack                                        0     0      0     196
                   Absolute function *
       _TMR2_DefaultInterruptHandler *
        _TMR2_DutyControlHandler_ISR *
 ---------------------------------------------------------------------------------
 (8) _TMR2_DutyControlHandler_ISR                          2     2      0     196
                                              4 COMMON     2     2      0
                 _PWM3_LoadDutyValue
 ---------------------------------------------------------------------------------
 (8) _TMR2_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _TMR1_ISR                                             0     0      0     229
                      _TMR1_CallBack
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (7) _TMR1_WriteTimer                                      2     0      2     229
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (7) _TMR1_CallBack                                        0     0      0       0
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
               _TMR1_SystemTimer_ISR *
 ---------------------------------------------------------------------------------
 (8) _TMR1_SystemTimer_ISR                                 1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _TMR1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART_Receive_ISR                                   0     0      0       0
                   Absolute function *
         _EUSART_DefaultErrorHandler *
  _EUSART_DefaultFramingErrorHandler *
  _EUSART_DefaultOverrunErrorHandler *
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (7) _EUSART_DefaultOverrunErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _EUSART_DefaultFramingErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _EUSART_DefaultErrorHandler                           0     0      0       0
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (7) _EUSART_RxDataHandler                                 1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _EUSART_CommandHandler_ISR                            2     2      0      23
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (6) _ADC_ISR                                              0     0      0     967
                   Absolute function *
        _ADC_DefaultInterruptHandler *
      _ADC_VoltageControlHandler_ISR *
 ---------------------------------------------------------------------------------
 (7) _ADC_VoltageControlHandler_ISR                        9     9      0     967
                                              0 BANK0      9     9      0
            _ADC_GetConversionResult
                      _LoadDutyValue
                 _PWM3_LoadDutyValue
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (8) ___lmul                                              12     4      8     244
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (8) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (9) _PWM3_LoadDutyValue                                   4     2      2     196
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (8) _LoadDutyValue                                        2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (8) _ADC_GetConversionResult                              2     0      2       0
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (7) _ADC_DefaultInterruptHandler                          0     0      0       0
 ---------------------------------------------------------------------------------
 (8) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _FLASH_ReadWord
   _SYSTEM_Initialize
     _ADC_Initialize
       _ADC_SetInterruptHandler
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM3_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
     _TMR4_Initialize
     _WDT_Initialize
   _init_chopper
     _ADC_SelectChannel
     _ADC_SetInterruptHandler
     _ADC_StartConversion
     _TMR2_SetInterruptHandler
     _TMR2_StartTimer
   _set_vdc_critic
     _set_vdc_threshold
   _set_vdc_max
     _set_vdc_threshold
   _set_vdc_min
     _set_vdc_threshold
   _set_vdc_speed
   _start_chopper
     _init_chopper
       _ADC_SelectChannel
       _ADC_SetInterruptHandler
       _ADC_StartConversion
       _TMR2_SetInterruptHandler
       _TMR2_StartTimer
   _uart_start
     _EUSART_SetRxInterruptHandler
     _TMR1_SetInterruptHandler
   _uart_task
     _get_vdc
     _get_vdc_critic
     _get_vdc_max
     _get_vdc_min
     _get_vdc_speed
       ___wmul
     _is_chopper_active
     _save_to_flash
       _FLASH_WriteBlock
         _FLASH_EraseBlock
     _set_vdc_critic
       _set_vdc_threshold
     _set_vdc_max
       _set_vdc_threshold
     _set_vdc_min
       _set_vdc_threshold
     _set_vdc_speed
     _start_chopper
       _init_chopper
         _ADC_SelectChannel
         _ADC_SetInterruptHandler
         _ADC_StartConversion
         _TMR2_SetInterruptHandler
         _TMR2_StartTimer
     _stop_chopper

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _ADC_ISR *
     Absolute function(Fake) *
     _ADC_DefaultInterruptHandler *
     _ADC_VoltageControlHandler_ISR *
       _ADC_GetConversionResult
       _LoadDutyValue
       _PWM3_LoadDutyValue
       ___lldiv
       ___lmul
   _EUSART_CommandHandler_ISR *
   _EUSART_Receive_ISR *
     Absolute function(Fake) *
     _EUSART_DefaultErrorHandler *
       _EUSART_RxDataHandler
     _EUSART_DefaultFramingErrorHandler *
     _EUSART_DefaultOverrunErrorHandler *
     _EUSART_RxDataHandler *
   _TMR1_ISR *
     _TMR1_CallBack
       Absolute function(Fake) *
       _TMR1_DefaultInterruptHandler *
       _TMR1_SystemTimer_ISR *
     _TMR1_WriteTimer
   _TMR2_ISR *
     _TMR2_CallBack
       Absolute function(Fake) *
       _TMR2_DefaultInterruptHandler *
       _TMR2_DutyControlHandler_ISR *
         _PWM3_LoadDutyValue

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     1F      45       5       86.3%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     40      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      4F       9       98.8%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      A      1A      11       32.5%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     10C      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     10C      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Tue Dec 17 18:33:32 2019

                                 ?_get_vdc_max 004B                                   ?_get_vdc_min 004B  
                ?_EUSART_SetRxInterruptHandler 004B           __size_of_TMR2_DutyControlHandler_ISR 0059  
             __end_of_TMR2_SetInterruptHandler 1765                                    __CFG_CP$OFF 0000  
                               ?_get_vdc_speed 0051                                             _st 002B  
                          ___wmul@multiplicand 004D                                    __CFG_LVP$ON 0000  
                              ?_get_vdc_critic 004B                                            _PR2 001B  
                                          _PR4 0416                                _timer1ReloadVal 0161  
                       ??_EUSART_RxDataHandler 0070                                __end_of_ADC_ISR 17C5  
                                          _vdc 003A                 ?_EUSART_SetFramingErrorHandler 004B  
              __end_of_ADC_SetInterruptHandler 172D                                _TMR2_Initialize 087F  
                                _LoadDutyValue 16F8                                   __CFG_BORV$LO 0000  
                                          wreg 0009                                   __CFG_IESO$ON 0000  
       ADC_VoltageControlHandler_ISR@force_inc 0046                   ?_ADC_DefaultInterruptHandler 0070  
               FLASH_WriteBlock@flashWordArray 0050                                           l1092 0956  
                                         l3312 0950                                           l3308 097D  
                                         l3510 0F1C                                           l3256 0BD1  
                                         l3360 092B                                           l3440 0E0A  
                                         l3266 0BF7                                           l3506 0F17  
                                         l3610 0C66                                           l3372 08E3  
                                         l3508 0F1A                                           l3516 0F20  
                                         l3460 0E3B                                           l3428 0DF9  
                                         l3604 0C4D                                           l3550 0F95  
                                         l3630 0CAB                                           l3622 0C98  
                                         l3472 0E54                                           l3616 0C7F  
                                         l3562 0FBB                                           l3474 0E58  
                                         l3458 0E23                                           l3626 0CA3  
                                         l3388 0A9F                                           l3580 0FE6  
                                         l3468 0E4B                                           l3478 0E5D  
                                         l3598 0C34                                           STR_1 1836  
                                 __CFG_WDTE$ON 0000                                           STR_2 181F  
                                         STR_4 1825                                           STR_6 182B  
                                         STR_8 1022                                           STR_9 1831  
                                         u2015 0BC1                                           _LATA 010C  
                                         _LATC 010E                                           u2085 0957  
                                         u2095 095C                                           u2507 09EF  
                                         _TMR2 001A                                           _TMR4 0415  
                                         _WPUA 020C                                           _WPUC 020E  
                    set_vdc_threshold@v_target 004D                                   __CFG_WRT$OFF 0000  
                                __CFG_FCMEN$ON 0000                                           _main 0C17  
                                         fsr0h 0005                                           fsr1h 0007  
                                         indf0 0000                                           fsr0l 0004  
                                         indf1 0001                                           fsr1l 0006  
                                         btemp 007E                              ?_FLASH_WriteBlock 004E  
                                __CFG_BOREN$ON 0000                                           start 0034  
                           ??_FLASH_WriteBlock 0051                     ??_TMR1_SetInterruptHandler 004D  
                                __CFG_MCLRE$ON 0000                          __size_of_stop_chopper 000C  
               __size_of_OSCILLATOR_Initialize 0008                  __end_of_OSCILLATOR_Initialize 1755  
                                        ?_main 0070                                          STR_10 1085  
                                        STR_11 110B                                          STR_12 1800  
                                        STR_20 1054                                          STR_13 1810  
                                        STR_14 1000                                          STR_15 10DF  
                                        STR_16 109C                                          STR_17 106D  
                                        STR_18 10F5                                          STR_19 103B  
                              __end_of___lldiv 0B58                                          _T1CON 0018  
                                        _T2CON 001C                                          _T4CON 0417  
                                        i1l384 0013                                          i1l393 0032  
                                        i1l386 0020                                          i1l388 002A  
                                        i1l911 0B8B                                          i1l896 0DB5  
              ??_ADC_VoltageControlHandler_ISR 0042                                 ?_LoadDutyValue 0070  
                                        _TMR1H 0017                                          _TMR1L 0016  
                                        _TRISA 008C                                          _TRISC 008E  
                               _system_counter 002A                                          _RXPPS 0E24  
             __size_of_ADC_GetConversionResult 0005                                  _start_chopper 08D0  
                              _TMR4_Initialize 176D                            ___lmul@multiplicand 0074  
                             __end_of_TMR1_ISR 17D1                                __end_of_get_vdc 1702  
                             __end_of_TMR2_ISR 16EB                                 _WDT_Initialize 16EB  
                      __end_of_PWM3_Initialize 1798                        __end_of_TMR1_Initialize 0919  
                              __end_of_v_table 0871                                          pclath 000A  
                                        status 0003                                          wtemp0 007E  
                              _TMR2_StartTimer 16E0                                   _stop_chopper 0873  
                              _TMR1_WriteTimer 17D1                                __initialization 0036  
             ADC_VoltageControlHandler_ISR@pwm 0047                                   __end_of_main 0CB0  
                              ??_get_vdc_speed 0053                    ??_EUSART_CommandHandler_ISR 0070  
                      __end_of_TMR2_Initialize 0891                                      ??_ADC_ISR 007E  
                               __CFG_LPBOR$OFF 0000                    ?_INTERRUPT_InterruptManager 0070  
               ??_EUSART_SetRxInterruptHandler 004D                       _TMR2_SetInterruptHandler 175D  
                                       ??_main 005D                                 ?_start_chopper 0070  
                      __size_of_FLASH_ReadWord 001F                                 __CFG_PLLEN$OFF 0000  
                              set_vdc_max@vmax 004E                                set_vdc_min@vmin 004E  
                       __end_of_WDT_Initialize 16EF      __end_of_EUSART_DefaultFramingErrorHandler 0873  
   __size_of_EUSART_DefaultFramingErrorHandler 0001            ??_EUSART_DefaultFramingErrorHandler 0070  
           ?_EUSART_DefaultFramingErrorHandler 0070              _EUSART_DefaultFramingErrorHandler 0872  
                                       _ADCON0 009D                                         _ADCON1 009E  
                                       _ADCON2 009F                     _EUSART_OverrunErrorHandler 0169  
                    FLASH_WriteBlock@writeAddr 004E                  __size_of_TMR1_SystemTimer_ISR 0006  
                                       _ADRESH 009C                                         _ADRESL 009B  
                               __CFG_ZCDDIS$ON 0000                                         _ANSELA 018C  
                                       _ANSELC 018E                                         _BORCON 0116  
                                       _T1GCON 0019                                         _RC1REG 0199  
                                       _RC0PPS 0EA0                                         _RC1PPS 0EA1  
                                       _RC1STA 019D                                         _RC2PPS 0EA2  
                                       u100_25 08B3                        TMR1_WriteTimer@timerVal 0070  
                                       u111_25 0B72                                  ?_init_chopper 0070  
                                       _ODCONA 028C                                         _ODCONC 028E  
                                       u120_25 0A48                                         u112_25 0B80  
                                       i1l2530 0BA6                                         i1l2532 0BAA  
                                       i1l2524 0B87                                         u121_25 0A4F  
                                       u113_25 0B91                                         i1l2518 0B6B  
                                       i1l2552 0A3D                                         i1l2570 0B16  
                                       i1l2580 0B44                                         i1l2572 0B24  
                                       i1l2556 0A47                                         u114_25 0B9F  
                                       i1l2830 0D19                                         i1l2814 0CED  
                                       i1l2584 0B4F                                         i1l2840 0D8B  
                                       i1l2824 0D07                                         i1l2816 0CEF  
                                       i1l2728 17DB                                         i1l2842 0D71  
                                       i1l2826 0D0D                                         i1l2860 0DAD  
                                       i1l2862 0DB1                                         i1l2838 0D6C  
                                       i1l2872 0DD7                                         i1l2848 0D8C  
                                       i1l2874 0DDB                                         i1l2876 0DDF  
                                       i1l2892 0AF3                                         u124_25 0B19  
                                       u140_25 0CE7                                         i1l2886 0AE3  
                                       i1l2896 0B03                                         u109_20 0B69  
                                       u141_25 0CF5                                         u126_25 0B25  
                                       u150_25 0DBF                                         u142_25 0D13  
                                       u127_25 0B39                                         u151_25 0DCD  
                                       u143_25 0D1F                                         _INLVLA 038C  
                                       _INLVLC 038E                                         u128_25 0B45  
                                       u146_25 0D85                                         u148_25 0D96  
                                       _PMADRH 0192                                         _PMADRL 0191  
                                       _PMDATH 0194                         set_vdc_threshold@v_val 004B  
                                       _PMDATL 0193                                         _PMCON2 0196  
                    __size_of_FLASH_EraseBlock 001F                                         _OSCCON 0099  
                                       _TX1REG 019A                                         _WDTCON 0097  
                                       _TX1STA 019E                          __end_of_save_to_flash 0ACC  
                                       _DeltaT 0158                                 __CFG_PWRTE$OFF 0000  
         __end_of_TMR1_DefaultInterruptHandler 0003          __size_of_TMR1_DefaultInterruptHandler 0001  
                 _TMR1_DefaultInterruptHandler 0002           __size_of_ADC_DefaultInterruptHandler 0001  
             __size_of_ADC_SetInterruptHandler 0008                                         ___lmul 0A35  
                  __size_of_PWM3_LoadDutyValue 0016                                   ?_set_vdc_max 004E  
                                 ?_set_vdc_min 004E                                         ___wmul 094E  
                               __CFG_STVREN$ON 0000                                      ??___lldiv 0078  
                         __size_of_get_vdc_max 0006                           __size_of_get_vdc_min 0005  
                      __end_of_TMR4_Initialize 1777                              _set_vdc_threshold 0969  
                                       _vcs_st 002F                                ??_LoadDutyValue 0072  
                                       _rx_idx 0034                                         _tx_idx 0031  
                                       _tx_len 0030                                      ??_get_vdc 004D  
                           ?_set_vdc_threshold 004B                        FLASH_ReadWord@flashAddr 004B  
                              ?_WDT_Initialize 0070                        __end_of_TMR2_StartTimer 16E3  
        __end_of_ADC_VoltageControlHandler_ISR 0DE7         __size_of_ADC_VoltageControlHandler_ISR 0137  
                _ADC_VoltageControlHandler_ISR 0CB0       TMR1_SetInterruptHandler@InterruptHandler 004B  
      ADC_SetInterruptHandler@InterruptHandler 004B       TMR2_SetInterruptHandler@InterruptHandler 004B  
                          ??_set_vdc_threshold 004E                        __end_of_TMR1_WriteTimer 17E0  
                    _EUSART_CommandHandler_ISR 09C3                                 ??_init_chopper 004D  
                        __end_of_TMR1_CallBack 1782                               ?_PWM3_Initialize 0070  
                             ?_TMR1_Initialize 0070                              LoadDutyValue@duty 0070  
                            _SYSTEM_Initialize 0933                        __end_of__initialization 006D  
                        __end_of_TMR2_CallBack 178D                             ?_SYSTEM_Initialize 0070  
                                   _VoltageLow 0154                   __size_of_ADC_StartConversion 0003  
                               __pcstackCOMMON 0070                                   __pidataBANK0 16EF  
                                 __pidataBANK1 1765                            ??_SYSTEM_Initialize 004D  
                             ??_get_vdc_critic 004D                                      ?_TMR1_ISR 0070  
                                    ?_TMR2_ISR 0070                  ?_TMR1_DefaultInterruptHandler 0070  
                    __end_of_set_vdc_threshold 0985                               ?_TMR2_Initialize 0070  
                              ??_start_chopper 004E                        _ADC_GetConversionResult 16F3  
                        __end_of_set_vdc_speed 0933                                 _OPTION_REGbits 0095  
                         _eusartRxStatusBuffer 0140            __end_of_TMR2_DutyControlHandler_ISR 0BB1  
                  _TMR2_DutyControlHandler_ISR 0B58                    FLASH_WriteBlock@GIEBitValue 0056  
              ??_EUSART_SetOverrunErrorHandler 004D                      __end_of_SYSTEM_Initialize 094E  
                                   __pbssBANK0 0020                                     __pbssBANK1 00E0  
                                   __pbssBANK2 0120                                     __pbssBANK3 01A0  
                             set_vdc_critic@vc 004E                        __size_of_set_vdc_critic 000B  
                  __size_of_EUSART_Receive_ISR 003A                                  _init_required 0064  
                                   __pmaintext 0C17                                        ?___lmul 0070  
                                   _delta_duty 0150                              uart_task@val_1516 01B8  
                            uart_task@val_1524 01B2                                        ?___wmul 004B  
                                   ??_TMR1_ISR 0072                                __CFG_PPS1WAY$ON 0000  
                                   ??_TMR2_ISR 0076                                     __pintentry 0004  
                                      _ADC_ISR 17B9                                 ___lmul@product 0078  
                             ?_TMR4_Initialize 0070                   ??_EUSART_DefaultErrorHandler 0071  
                    __size_of_FLASH_WriteBlock 0066                        __size_of_ADC_Initialize 0011  
                               _FLASH_ReadWord 0985                                  _eusartRxCount 0037  
                           __size_of_uart_task 0219                              uart_task@xor_1523 01B1  
                                      _SP1BRGH 019C                                        _SP1BRGL 019B  
                            save_to_flash@buff 00A0                  __size_of_EUSART_RxDataHandler 0018  
                                      _OSCSTAT 009A                                        _OSCTUNE 0098  
                                      _PWM3DCH 0618                                        _PWM3DCL 0617  
                                      _PWM3CON 0619                                        _SLRCONA 030C  
                                      _SLRCONC 030E                       ??_EUSART_SetErrorHandler 004D  
                             ?_TMR2_StartTimer 0070                               ?_TMR1_WriteTimer 0070  
                          UartParser@rx_buffer 0120                               _FLASH_EraseBlock 09A4  
               ?_ADC_VoltageControlHandler_ISR 0070               EUSART_CommandHandler_ISR@rx_data 0071  
                         _ADC_InterruptHandler 0163                        _ADC_SetInterruptHandler 1725  
          __size_of_EUSART_DefaultErrorHandler 0003                     ??_TMR2_SetInterruptHandler 004D  
                              __size_of___lmul 002F                                        ___lldiv 0B06  
                              __size_of___wmul 001B                     __size_of_set_vdc_threshold 001C  
                         __end_of_init_chopper 0A09                      ??_ADC_GetConversionResult 0072  
                       __end_of_FLASH_ReadWord 09A4                           __size_of_set_vdc_max 000B  
                         __size_of_set_vdc_min 000B                                        __ptext1 0DE7  
                                      __ptext2 0873                                        __ptext3 08D0  
                                      __ptext4 09E3                                        __ptext5 16E0  
                                      __ptext6 16DD                                        __ptext7 17E0  
                                      __ptext8 0919                                        __ptext9 17AE  
                                      _get_vdc 16FD                 ??_TMR1_DefaultInterruptHandler 0070  
                                    _T1CONbits 0018                          _OSCILLATOR_Initialize 174D  
                                    _T2CONbits 001C              __size_of_TMR1_SetInterruptHandler 0008  
                     ??_PIN_MANAGER_Initialize 004B                      ?_TMR1_SetInterruptHandler 004B  
                                      _vdc_max 003E                                        _vdc_min 0040  
                                      _v_table 0071                                  _duty_count_up 00E2  
                   __size_of_SYSTEM_Initialize 001B                                        clrloop0 171A  
                                      main@val 005F                           end_of_initialization 006D  
        __end_of_EUSART_SetOverrunErrorHandler 1745         __size_of_EUSART_SetOverrunErrorHandler 0008  
                _EUSART_SetOverrunErrorHandler 173D                                     _vdc_critic 003C  
                                      init_ram 171F                                        initloop 1720  
                            _EUSART_Initialize 0A64                              __end_of_uart_task 1000  
                              ___lldiv@divisor 0070                                ___lldiv@counter 007D  
                           ?_EUSART_Initialize 0070                   __end_of_TMR1_SystemTimer_ISR 170D  
                                   _num_buffer 015A                      FLASH_ReadWord@GIEBitValue 004D  
                        __end_of_get_vdc_speed 08A4                                ?_FLASH_ReadWord 004B  
                                   _uart_start 08BA                            ??_EUSART_Initialize 004D  
                             ??_WDT_Initialize 004B                                     _vcs_sub_st 002E  
                             __CFG_FOSC$INTOSC 0000            __end_of_ADC_DefaultInterruptHandler 0872  
                  _ADC_DefaultInterruptHandler 0871                                      _TRISAbits 008C  
                          _ADC_StartConversion 16DD                __size_of_EUSART_SetErrorHandler 0008  
                    __end_of_EUSART_Initialize 0A97                  ??_ADC_DefaultInterruptHandler 0070  
                               _set_vdc_critic 1798                      ??_ADC_SetInterruptHandler 004D  
                                  _VoltageHigh 0156                     __end_of_PWM3_LoadDutyValue 08BA  
                            FLASH_WriteBlock@i 0057                           ?_ADC_StartConversion 0070  
                                ??_get_vdc_max 004D                                  ??_get_vdc_min 004D  
         __end_of_TMR2_DefaultInterruptHandler 0004          __size_of_TMR2_DefaultInterruptHandler 0001  
                 _TMR2_DefaultInterruptHandler 0003                              _is_chopper_active 16DA  
                               __end_of___lmul 0A64             __end_of_EUSART_DefaultErrorHandler 16DA  
                   _EUSART_DefaultErrorHandler 16D7                                 __end_of___wmul 0969  
                            __size_of_TMR1_ISR 000C                              __size_of_TMR2_ISR 0004  
                           ?_is_chopper_active 0070                                 _ADC_Initialize 17EF  
                             _FLASH_WriteBlock 0BB1                         ?_OSCILLATOR_Initialize 0070  
                        __end_of_LoadDutyValue 16FD                         __size_of_save_to_flash 0035  
                          start_initialization 0036                              main@chopper_state 005D  
                          ??_is_chopper_active 004B                __size_of_PIN_MANAGER_Initialize 002C  
 EUSART_SetRxInterruptHandler@interruptHandler 004B                         __end_of_set_vdc_critic 17A3  
               ?_EUSART_SetOverrunErrorHandler 004B                          ??_ADC_StartConversion 004B  
                        __size_of_init_chopper 0026                       __size_of_PWM3_Initialize 000B  
                     __size_of_TMR1_Initialize 001A                      __end_of_is_chopper_active 16DD  
                   _EUSART_FramingErrorHandler 016B                                       ??___lmul 0078  
                                     ??___wmul 004F                         _EUSART_SetErrorHandler 172D  
                                  _CCPTMRSbits 029E                         __end_of_ADC_Initialize 1800  
                                  __pdataBANK0 0061                                    __pdataBANK1 00E8  
                                     ?_ADC_ISR 0070                    FLASH_EraseBlock@GIEBitValue 004D  
                                  ?_uart_start 0070                  ?_TMR2_DefaultInterruptHandler 0070  
                     __end_of_FLASH_EraseBlock 09C3                         __size_of_TMR1_CallBack 000B  
                          __end_of_get_vdc_max 1719                            __end_of_get_vdc_min 1707  
                        __end_of_start_chopper 08E7                         __size_of_TMR2_CallBack 000B  
                                    ___latbits 0002                                  __pcstackBANK0 0042  
                                __pcstackBANK1 00A0                                  __pcstackBANK3 01B0  
                     __size_of_TMR2_Initialize 0012                           _TMR1_SystemTimer_ISR 1707  
                              ?_set_vdc_critic 004E                     __end_of_EUSART_Receive_ISR 0B06  
                                 _init_chopper 09E3                     __size_of_EUSART_Initialize 0033  
                                ?_stop_chopper 0070               _EUSART_RxDefaultInterruptHandler 016D  
                                _diff_positive 002D                                 _chopper_active 002C  
                                 _current_duty 0020                                  _save_to_flash 0A97  
                                    __pnvBANK2 015F                   __end_of_EUSART_RxDataHandler 08FF  
                       __size_of_set_vdc_speed 001A                         _PIN_MANAGER_Initialize 0A09  
                            _ADC_SelectChannel 17E0               __end_of_TMR1_SetInterruptHandler 175D  
                             UartParser@rx_idx 0029                               UartParser@tx_idx 0026  
                                     ?___lldiv 0070                                ?_ADC_Initialize 0070  
                                 _eusartRxHead 0039                             ?_ADC_SelectChannel 0070  
                                 _eusartRxTail 0038                   ??_INTERRUPT_InterruptManager 007E  
                                     ?_get_vdc 004B                                       _BAUD1CON 019F  
                          ??_ADC_SelectChannel 004B                        __size_of_get_vdc_critic 0006  
                     __size_of_TMR4_Initialize 000A                          ?_TMR1_SystemTimer_ISR 0070  
               FLASH_WriteBlock@blockStartAddr 0054                                 _eusartRxBuffer 0148  
                                _TMR1_CallBack 1777                                 ??_stop_chopper 004B  
                               ___wmul@product 004F                            __size_of_uart_start 0016  
                                     _LATAbits 010C         EUSART_SetErrorHandler@interruptHandler 004B  
                               ?_save_to_flash 0070                                       _LATCbits 010E  
                                    _isr_timer 0028                                      clear_ram0 1719  
                                _TMR2_CallBack 1782                                       _PIE1bits 0091  
                            _eusartRxLastError 0036                       __size_of_TMR2_StartTimer 0003  
                    __end_of_ADC_SelectChannel 17EF                                   _duty_pwm_dec 00EA  
                                 UartParser@st 0027                       __size_of_TMR1_WriteTimer 000F  
                                 _duty_pwm_inc 00EE            __size_of_INTERRUPT_InterruptManager 0030  
                          _duty_count_down_max 00E8                                       _PIR1bits 0011  
              ??_EUSART_SetFramingErrorHandler 004D                                       _PIR2bits 0012  
                    FLASH_EraseBlock@startAddr 004B                                _duty_count_down 00E0  
                          __end_of_invalid_arg 10C9                            __end_of_invalid_com 10DF  
                   __size_of_is_chopper_active 0003                               ??_FLASH_ReadWord 004D  
                                  _get_vdc_max 1713                                    _get_vdc_min 1702  
                                ??_set_vdc_max 0050                                  ??_set_vdc_min 0050  
    __end_of_EUSART_DefaultOverrunErrorHandler 16E7     __size_of_EUSART_DefaultOverrunErrorHandler 0004  
          ??_EUSART_DefaultOverrunErrorHandler 0070             ?_EUSART_DefaultOverrunErrorHandler 0070  
            _EUSART_DefaultOverrunErrorHandler 16E3                                      _uart_task 0DE7  
                                     _TMR1_ISR 17C5                                       _TMR2_ISR 16E7  
                                   uart_task@i 01B4                                      _rx_buffer 01A0  
                            ??_TMR1_Initialize 004D                              ??_PWM3_Initialize 004B  
                             __size_of_ADC_ISR 000C                                     _ADCON0bits 009D  
                            ___wmul@multiplier 004B                       ADC_SelectChannel@channel 004C  
                                _set_vdc_speed 0919                 ??_TMR2_DefaultInterruptHandler 0070  
            __size_of_TMR2_SetInterruptHandler 0008                      ?_TMR2_SetInterruptHandler 004B  
                                    _tx_string 00E6                              ___lmul@multiplier 0070  
                                     _Commands 0035                                 ?_TMR1_CallBack 0070  
                            ??_TMR2_Initialize 004D                       __end_of_FLASH_WriteBlock 0C17  
                               ?_TMR2_CallBack 0070                                _command_pending 0033  
                     ?_ADC_GetConversionResult 0070                                     ?_uart_task 0070  
                      ??_OSCILLATOR_Initialize 004B                            _EUSART_ErrorHandler 0167  
                             __size_of___lldiv 0052                    ?_EUSART_DefaultErrorHandler 0070  
                              uart_task@i_1522 01B5                       _TMR1_SetInterruptHandler 1755  
                           _PWM3_LoadDutyValue 08A4                            __end_of_set_vdc_max 17AE  
                          __end_of_set_vdc_min 17B9                          _TMR1_InterruptHandler 015F  
                             __size_of_get_vdc 0005                                 ?_set_vdc_speed 004B  
                       ??_TMR1_SystemTimer_ISR 0070                                       _diff_vdc 0152  
                         _EUSART_RxDataHandler 08E7                   ?_TMR2_DutyControlHandler_ISR 0070  
                                     __ptext10 17A3                                       __ptext11 1798  
                                     __ptext20 1713                                       __ptext12 0969  
                                     __ptext21 170D                                       __ptext13 0A97  
                                     __ptext30 1755                                       __ptext22 16FD  
                                     __ptext14 0BB1                                       __ptext31 178D  
                                     __ptext23 08BA                                       __ptext15 09A4  
                                     __ptext40 1725                                       __ptext32 0A09  
                                     __ptext24 0933                                       __ptext16 16DA  
                                     __ptext41 0985                                       __ptext33 174D  
                                     __ptext25 16EB                                       __ptext17 0891  
                                     __ptext50 0002                                       __ptext34 0A64  
                                     __ptext26 176D                                       __ptext18 094E  
                                     __ptext51 1707                                       __ptext43 16E7  
                                     __ptext35 1745                                       __ptext27 087F  
                                     __ptext19 1702                                       __ptext60 0CB0  
                                     __ptext52 09C3                                       __ptext44 1782  
                                     __ptext36 173D                                       __ptext28 175D  
                                     __ptext61 0A35                                       __ptext53 0ACC  
                                     __ptext45 0003                                       __ptext37 1735  
                                     __ptext29 08FF                                       __ptext62 0B06  
                                     __ptext54 16E3                                       __ptext46 0B58  
                                     __ptext38 172D                                       __ptext63 08A4  
                                     __ptext55 0872                                       __ptext47 17C5  
                                     __ptext39 17EF                                       __ptext64 16F8  
                                     __ptext56 16D7                                       __ptext48 17D1  
                                     __ptext65 16F3                                       __ptext57 08E7  
                                     __ptext49 1777                                       __ptext58 17B9  
                          ?_PWM3_LoadDutyValue 0070                                       __ptext59 0871  
                              ??_save_to_flash 0058                                    _invalid_arg 10B3  
                                  _invalid_com 10C9                         __size_of_get_vdc_speed 0013  
                            ??_TMR4_Initialize 004B                                  __size_of_main 0099  
                                     _lock_isr 0063                                       _duty_inc 0061  
                      ?_EUSART_SetErrorHandler 004B                     __size_of_ADC_SelectChannel 000F  
                                     _vdc_prev 00E4                                     _RC1STAbits 019D  
EUSART_SetOverrunErrorHandler@interruptHandler 004B                           ??_PWM3_LoadDutyValue 0072  
           __size_of_EUSART_CommandHandler_ISR 0020                                       int$flags 007E  
                   ?_EUSART_CommandHandler_ISR 0070                                       _pwm_duty 0024  
                            ??_TMR2_StartTimer 004B                           set_vdc_speed@msDelay 004B  
           __end_of_INTERRUPT_InterruptManager 0034                     _INTERRUPT_InterruptManager 0004  
        __end_of_EUSART_SetFramingErrorHandler 173D         __size_of_EUSART_SetFramingErrorHandler 0008  
                _EUSART_SetFramingErrorHandler 1735                              ??_TMR1_WriteTimer 0072  
                                 ??_uart_start 004D                              ?_FLASH_EraseBlock 004B  
                         __end_of_stop_chopper 087F                             ??_FLASH_EraseBlock 004D  
                                   _INTCONbits 000B                                 _get_vdc_critic 170D  
                             ??_set_vdc_critic 0050                          ?_EUSART_RxDataHandler 0070  
                               __pstringtext10 109C                                 __pstringtext11 10DF  
                               __pstringtext20 1836                                 __pstringtext12 10F5  
                               __pstringtext21 0000                                 __pstringtext13 110B  
                               __pstringtext14 1800                                 __pstringtext15 1810  
                               __pstringtext16 181F                                 __pstringtext17 1825  
                               __pstringtext18 182B                                 __pstringtext19 1831  
                              ??_TMR1_CallBack 0071                       ?_ADC_SetInterruptHandler 004B  
                      __size_of_WDT_Initialize 0004                  ??_TMR2_DutyControlHandler_ISR 0074  
                                     intlevel1 0000                                ??_TMR2_CallBack 0076  
                  __end_of_ADC_StartConversion 16E0                                     _PMCON1bits 0195  
                             ___lldiv@dividend 0074                        ?_PIN_MANAGER_Initialize 0070  
              __end_of_ADC_GetConversionResult 16F8                 __end_of_EUSART_SetErrorHandler 1735  
                            __CFG_CLKOUTEN$OFF 0000                                    _target_duty 0022  
                           __end_of_uart_start 08D0                               ??_ADC_Initialize 004D  
         __end_of_EUSART_SetRxInterruptHandler 174D          __size_of_EUSART_SetRxInterruptHandler 0008  
                 _EUSART_SetRxInterruptHandler 1745                         __size_of_LoadDutyValue 0005  
                            _duty_count_up_max 00EC                                    ??_uart_task 0059  
                                  _set_vdc_max 17A3                                    _set_vdc_min 17AE  
                           _EUSART_Receive_ISR 0ACC  EUSART_SetFramingErrorHandler@interruptHandler 004B  
                  PWM3_LoadDutyValue@dutyValue 0070              __end_of_EUSART_CommandHandler_ISR 09E3  
                                _command_error 0032                                  _get_vdc_speed 0891  
                                __pstringtext1 0071                                  __pstringtext2 10B3  
                                __pstringtext3 10C9                                  __pstringtext4 1000  
                                __pstringtext5 1022                                  __pstringtext6 103B  
                                __pstringtext7 1054                                  __pstringtext8 106D  
                                __pstringtext9 1085                                ??_set_vdc_speed 004D  
                       __end_of_get_vdc_critic 1713                            ?_EUSART_Receive_ISR 0070  
                             ___lldiv@quotient 0079                                     _TX1STAbits 019E  
                                 uart_task@val 01B6                 __end_of_PIN_MANAGER_Initialize 0A35  
                                 uart_task@xor 01B0                           ??_EUSART_Receive_ISR 0071  
                        _TMR2_InterruptHandler 0165                                _TMR1_Initialize 08FF  
                              _PWM3_Initialize 178D                         __size_of_start_chopper 0017  
